var searchIndex = new Map(JSON.parse('[\
["auto_id_domain_runtime",{"doc":"","t":"PPIIIPPPIIPPPIIIPFIIFIFFSIIPPFFFIIPGPPSFFIPPPPFGIPFFGFFFPFFFFFGGGGFGGFGGFIIFIIFIPPPIIPPPIIPIPIIPPPFISFPSSNNNNNNNNNNNNNNNOONNNNCNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNCONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNONNONNNNNNNNNNNNNOOOOPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHIIIPIPFNNNNNNNNNNNNNNNNNONNNNNNNNNOONNNNNNNNONNNNNNNOONNONNNNNNNNNNNNNNN","n":["Address20","Address32","AllPalletsWithSystem","AllPalletsWithoutSystem","AutoId","AutoId","AutoId","AutoId","Balance","Balances","Balances","Balances","Balances","BalancesConfig","Block","BlockFees","BlockFees","BlockHashCount","BlockId","BlockNumber","ChannelReserveFee","CheckedExtrinsic","DomainChainByteFee","DustRemovalHandler","EXISTENTIAL_DEPOSIT","Executive","ExecutivePallet","ExecutivePallet","ExecutivePallet","ExistentialDeposit","ExtrinsicStorageFees","FinalDomainTransactionByteFee","GenesisConfig","Hash","Hash","HoldIdentifier","Id","Index","MAXIMUM_BLOCK_WEIGHT","MaxLocks","MaxReserves","Messenger","Messenger","Messenger","Messenger","Messenger","MmrProofVerifier","MultiAddress","Nonce","Number","OnXDMRewards","OperationalFeeMultiplier","OriginCaller","PalletInfo","Perbill","Permill","Raw","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeBlockLength","RuntimeBlockWeights","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","RuntimeTask","SelfChainId","SelfDomainId","SelfDomainIdConfig","SessionKeys","SignedBlock","SignedExtra","StorageKeys","Sudo","Sudo","Sudo","Sudo","SudoConfig","System","System","System","System","SystemConfig","Timestamp","Timestamp","TransactionPayment","TransactionPayment","TransactionPaymentConfig","Transporter","Transporter","Transporter","Transporter","TransporterEndpointId","UncheckedExtrinsic","VERSION","Version","Void","WASM_BINARY","WASM_BINARY_BLOATY","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_config","_config","account_nonce","add","add","add_filter","api","api_version","apply_extrinsic","apply_extrinsic_with_post_state_root","as_system_ref","assimilate_storage","balances","balances","balances","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block","block_digest","block_fees","block_messages","block_weight","block_weights","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_config","caller","check_extrinsics_and_do_pre_dispatch","check_inherents","checked_add","checked_add","checked_mul","checked_mul","checked_sub","checked_sub","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","confirmed_domain_block_storage_key","confirmed_domain_block_storage_key","construct_consensus_chain_byte_fee_extrinsic","construct_domain_update_chain_allowlist_extrinsic","construct_runtime_api","construct_set_code_extrinsic","construct_timestamp_extrinsic","crate_version","create_default_config","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_extrinsic","decode_from","decode_from","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_sub","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dispatch","dispatch_bypass_filter","div","div","div","div","domain_chains_allowlist_update","domain_id","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_in_transaction","extract_proof","extract_signer","extract_signer","extract_signer","extrinsic_era","extrinsic_weight","extrinsics","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_fd","from_filelike","from_float","from_float","from_float","from_float","from_into_filelike","from_into_socketlike","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_percent","from_percent","from_perthousand","from_perthousand","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","function","function","generate","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_endpoint_handler","get_hash","get_module_names","get_raw","has_api","has_api_with","hash","header","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response_message_unsigned","inbox_response_storage_key","inbox_responses_storage_key","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","initialize_block_with_post_state_root","int_div","int_div","int_mul","int_mul","intermediate_roots","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_clear","is_clear","is_feeless","is_inherent_extrinsic","is_one","is_one","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_valid","is_within_tx_range","is_xdm_valid","is_zero","is_zero","is_zero","is_zero","iter","justifications","key","key_ids","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","max_value","max_value","maximum_block_length","messenger_channel","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","min_value","min_value","min_value","min_value","module_name","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_floor","mul_floor","multiplier","name","name_hash","none","none","offchain_worker","on_nonzero_unbalanced","on_storage_fees_charged","on_xdm_rewards","one","one","one","one","opaque","operator","outbox_message_unsigned","outbox_storage_key","outbox_storage_key","partial_cmp","partial_cmp","partial_cmp","phantom","pow","pow","pre_dispatch","proof_recorder","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","register_extension","reset_filter","root","root","run","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_sub","saturating_sub","saturating_sub","saturating_sub","self_domain_id","self_domain_id","serialize","serialize","serialize","serialize","set_call_context","set_caller_from","should_relay_inbox_message_response","should_relay_outbox_message","signature","signed","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","square","square","sub","sub","sudo","sudo","system","system","system","task_index","tcmp","tcmp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_payment","transaction_payment","transfers","transfers_storage_key","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate_transaction","validate_unsigned","verify_proof_and_extract_consensus_state_root","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","zero","zero","zero","zero","dispatch","AccountId","Block","BlockId","Hash","Header","Number","UncheckedExtrinsic","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","digest","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics","extrinsics_root","fmt","from","from","from_bytes","from_mut","from_mut","from_ref","from_ref","header","identity","init","into","into_key","into_mut","into_ref","is_clear","number","parent_hash","serialize","size_hint","state_root","to_keyed_vec","to_owned","try_from","try_into","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","using_encoded","vzip"],"q":[[0,"auto_id_domain_runtime"],[1732,"auto_id_domain_runtime::api"],[1733,"auto_id_domain_runtime::opaque"],[1805,"dyn_clone::sealed"],[1806,"domain_runtime_primitives"],[1807,"core::ops::function"],[1808,"core::option"],[1809,"sp_api"],[1810,"core::result"],[1811,"sp_runtime::traits"],[1812,"sp_api"],[1813,"alloc::vec"],[1814,"frame_support::dispatch"],[1815,"sp_storage"],[1816,"alloc::string"],[1817,"sp_runtime::generic::digest"],[1818,"sp_domains"],[1819,"sp_messenger::messages"],[1820,"sp_weights::weight_v2"],[1821,"frame_system::limits"],[1822,"sp_genesis_builder"],[1823,"domain_runtime_primitives"],[1824,"sp_inherents"],[1825,"core::cmp"],[1826,"sp_domains"],[1827,"frame_support::traits::metadata"],[1828,"parity_scale_codec::error"],[1829,"parity_scale_codec::codec"],[1830,"parity_scale_codec::codec"],[1831,"domain_runtime_primitives"],[1832,"serde::de"],[1833,"frame_support::dispatch"],[1834,"parity_scale_codec::codec"],[1835,"frame_support::dispatch"],[1836,"core::fmt"],[1837,"core::fmt"],[1838,"frame_support::dispatch"],[1839,"pallet_balances::pallet"],[1840,"pallet_messenger::pallet"],[1841,"pallet_sudo::pallet"],[1842,"pallet_transporter::pallet"],[1843,"pallet_messenger::pallet"],[1844,"pallet_balances::pallet"],[1845,"pallet_auto_id::pallet"],[1846,"io_lifetimes::portability"],[1847,"io_lifetimes::portability"],[1848,"core::convert"],[1849,"sp_arithmetic::per_things"],[1850,"core::convert"],[1851,"frame_support::traits::metadata"],[1852,"core::hash"],[1853,"core::hash"],[1854,"subspace_core_primitives"],[1855,"sp_domains"],[1856,"sp_core"],[1857,"sp_arithmetic::per_things"],[1858,"frame_support::traits::tokens::fungible::imbalance"],[1859,"sp_runtime::transaction_validity"],[1860,"sp_api"],[1861,"pallet_transaction_payment::types"],[1862,"sp_arithmetic::per_things"],[1863,"sp_core::traits"],[1864,"core::convert"],[1865,"scale_info::ty"],[1866,"sp_runtime::transaction_validity"],[1867,"sp_mmr_primitives"],[1868,"sp_runtime::traits"]],"d":["Its a 20 byte representation.","It’s a 32 byte representation.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","","","","Balance of an account.","","","","","","Block type as expected by this runtime.","","","","BlockId type as expected by this runtime.","An index to a block.","","Extrinsic type that has already been checked.","","<code>DustRemovalHandler</code> used to collect all the SSC dust left …","The existential deposit. Same with the one on primary …","Executive: handles dispatch to the various modules.","","","","","","","","A hash of some data used by the chain.","Identify by block header hash.","Hold identifier for balances for this runtime.","It’s an account ID (pubkey).","It’s an account index.","Maximum total block weight.","","","","","","","","","A multi-format address wrapper for on-chain accounts.","Index of a transaction in the chain.","Identify by block number.","","","","Provides an implementation of <code>PalletInfo</code> to provide …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","It’s some arbitrary raw bytes.","","","Implements all runtime apis for the client side.","","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","An aggregation of all <code>Task</code> enums across all pallets …","","","","","A Block signed with a Justification","The SignedExtension to the basic transaction logic.","","","","","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Full blockecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","","","","","","","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</codehe accompanying extrinsics.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert to runtime origin with caller being system signed …","","Convert to runtime origin, using as filter: …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","","","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","The function that should be called.","The function that should be called.","Generate a set of keys with optionally using the given …","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","","","","","","","","","The block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","","","","","","","","","","","","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","","Block justification.","The <code>AccountId</code> of the sudo key.","","","","","","","","","","","","","","Maximum block length for all dispatches.","","","","","","","","","","","","","","","","","","","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","","","","Create with system none origin and …","","","","","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","","Opaque types. These are used by the CLI to instantiate …","Primarily used for adding the operator signing key into …","","","","","","","","","","","","","","","","","","","","Create with system root origin and …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","","","","","","","The signature, address, number of extrinsics have come …","","Create with system signed origin and …","Who this purports to be from and the number of extrinsics …","","","","","","","","","","See <code>PerThing::square</code>.","See <code>PerThing::square</codeee <code>PerThing::zero</code>.","","","See <code>PerThing::zero</code>.","","Opaque account identifier type.","Opaque block type.","Opaque block identifier type.","Identify by block header hash.","Opaque block header type.","Identify by block number.","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","A chain-specific digest of data useful for light clients …","","","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","","Returns the argument unchanged.","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","The block header.","","","Calls <code>U::from(self)</code>.","","","","","The block number.","The parent hash.","","","The state trie merkle root","","","","","","","","","","","","","","",""],"i":[49,49,0,0,0,46,59,47,0,0,46,59,47,0,0,0,46,0,0,0,0,0,0,0,0,0,0,46,47,0,0,0,0,0,166,0,49,49,0,0,0,0,40,46,59,47,0,0,0,166,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,59,47,0,0,46,59,47,0,0,46,0,47,0,0,46,59,47,0,0,0,0,21,0,0,39,40,7,41,42,43,44,45,46,21,47,48,5,6,49,167,168,48,5,6,7,0,11,48,48,21,23,169,170,23,39,40,41,42,43,44,45,46,21,59,47,5,6,49,39,40,41,42,43,44,45,46,21,59,47,5,6,49,39,40,41,42,43,44,45,46,21,59,47,5,6,49,171,48,48,48,48,0,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,23,48,7,48,48,5,6,5,6,5,6,5,6,39,40,7,41,42,43,44,45,46,21,47,48,5,6,49,39,40,7,41,42,43,44,45,46,21,47,48,5,6,49,40,5,6,40,5,6,177,48,48,48,191,48,48,190,48,39,40,41,42,43,44,45,46,21,59,47,5,6,49,39,40,41,42,43,44,45,46,21,59,47,5,6,49,39,40,41,42,43,44,45,46,21,59,47,5,6,49,48,5,6,39,48,39,40,41,42,43,44,45,46,21,59,47,5,6,49,5,5,6,6,23,5,6,40,5,6,40,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,40,5,6,40,5,6,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,39,23,5,6,46,46,5,5,6,6,48,192,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,39,5,6,5,6,39,40,46,21,59,47,5,6,49,48,39,40,41,42,43,44,45,46,21,47,48,5,6,49,39,39,39,39,39,40,40,40,40,40,41,41,41,41,41,42,42,42,42,42,43,43,43,43,43,44,44,44,44,44,45,45,45,45,45,46,46,46,46,46,21,21,21,21,21,47,47,47,47,47,48,48,48,48,48,5,5,5,5,5,6,6,6,6,6,49,49,49,49,49,48,11,11,0,174,48,48,48,36,7,48,39,40,7,41,42,43,44,45,46,21,59,47,48,5,6,49,49,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,7,7,7,191,11,41,42,43,44,23,45,46,46,46,46,46,46,46,46,46,46,21,21,59,59,59,59,59,59,59,47,47,47,47,47,47,47,47,47,48,5,5,6,6,49,49,49,59,49,49,5,5,6,6,49,49,172,172,173,173,174,174,175,175,176,176,177,177,39,39,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,40,40,188,188,189,189,190,190,7,7,191,191,11,11,41,41,42,42,43,43,44,44,23,23,45,45,46,46,21,21,59,59,47,47,48,48,5,5,6,6,49,49,5,5,6,6,5,6,5,6,5,6,5,6,5,6,172,172,173,173,174,174,175,175,176,176,177,177,39,39,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,40,40,188,188,189,189,190,190,7,7,191,191,11,11,41,41,42,42,43,43,44,44,23,23,45,45,46,46,21,21,59,59,47,47,48,48,5,5,6,6,49,49,49,77,193,39,48,173,178,178,178,179,179,179,180,180,180,181,181,181,182,182,182,183,183,183,184,184,184,185,185,185,186,186,186,187,187,187,188,188,188,189,189,189,46,46,46,48,49,46,39,11,11,49,36,39,40,41,42,43,44,45,46,21,59,47,5,6,49,48,48,177,190,48,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,48,48,5,6,5,6,48,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,7,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,39,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,11,21,5,6,46,48,5,6,46,46,46,46,46,46,46,46,46,45,48,48,5,5,6,6,45,171,194,39,40,41,42,43,44,21,5,6,5,5,6,6,0,40,48,48,48,48,48,48,5,5,6,6,190,5,5,5,6,6,6,5,6,5,6,168,190,190,7,7,48,172,174,175,5,5,6,6,0,39,48,177,48,40,5,6,192,5,6,48,11,48,48,48,48,11,11,7,7,7,45,5,5,6,6,5,6,5,6,5,6,5,6,5,6,5,6,5,5,6,6,170,23,39,23,5,6,11,7,48,48,77,7,7,193,39,40,46,21,59,47,5,6,49,5,6,5,6,170,23,170,23,21,45,5,6,39,40,41,42,43,44,45,46,21,59,47,5,6,49,39,40,7,41,42,43,44,45,46,21,47,48,5,6,49,49,170,23,48,48,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,59,59,59,59,59,59,47,47,47,47,47,47,47,47,47,48,5,6,49,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,7,39,40,41,42,43,44,45,46,21,59,47,5,6,49,39,40,41,42,43,44,45,46,21,59,47,5,6,49,39,40,41,42,43,44,45,46,21,59,47,5,6,49,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,39,40,41,42,43,44,45,46,21,59,47,48,5,6,49,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,5,6,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,39,39,40,41,42,43,44,45,46,21,47,5,5,6,6,49,48,48,176,48,172,173,174,175,176,177,39,178,179,180,181,182,183,184,185,186,187,40,188,189,190,7,191,11,41,42,43,44,23,45,46,21,59,47,48,5,6,49,45,5,5,6,6,0,0,0,0,195,0,195,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,196,63,63,63,63,63,63,63,63,63,197,196,63,63,63,63,63,63,63,63,197,63,63,63,63,63,63,63,196,196,63,63,196,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}00000000000000``{fh}{{jj}}{{ll}}{{ne}d{}{{Ad{c}{{A`{Ab}}}}}}`{{{Af{ce}}}{{An{{Aj{Ah}}Al}}}B`{{Bb{c}}}}{{}Bd}{{}{{Bh{Bf}}}}{Bj{{Aj{Bl}}}}{{BnC`}{{An{dCb}}}}```{c{{Cd{Bf}}}{}}0000000000000{c{{Bh{Bf}}}{}}000000000000011111111111111`{{}Cf}{{}{{Cj{Ch}}}}{{}Cl}{{}Cn}{{}D`}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000{Bnd}{{{Bh{Bf}}}Db}{nc{}}{{BhDd}{{An{dDf}}}}{{DhDj}Dl}{{jj}{{Aj{j}}}}{{ll}{{Aj{l}}}}1010{{}c{}}0{DnDn}{E`E`}{nn}{EbEb}{EdEd}{EfEf}{EhEh}{EjEj}{ElEl}{BjBj}{EnEn}{F`F`}{jj}{ll}{{{Fb{ce}}}{{Fb{ce}}}FdFd}{{ce}d{}{}}00000000000000{{E`E`}Ff}{{jj}Ff}{{ll}Ff}{{ce}Ff{}{}}00{Fh{{Aj{{Bh{Bf}}}}}}{Fh{{Bh{Bf}}}}{Ch}{Fj}{e{{Fl{g}}}B`{{Bb{c}}}{}}{{{Bh{Bf}}}{{Bh{Bf}}}}{Fn}{{}{{Aj{G`}}}}{{}{{Bh{Bf}}}}{c{{An{DnGb}}}Gd}{c{{An{E`Gb}}}Gd}{c{{An{EbGb}}}Gd}{c{{An{EdGb}}}Gd}{c{{An{EfGb}}}Gd}{c{{An{EhGb}}}Gd}{c{{An{EjGb}}}Gd}{c{{An{ElGb}}}Gd}{c{{An{BjGb}}}Gd}{c{{An{GfGb}}}Gd}{c{{An{EnGb}}}Gd}{c{{An{jGb}}}Gd}{c{{An{lGb}}}Gd}{c{{An{{Fb{eg}}Gb}}}GdGhGj}{{{Gl{Bf}}}{{An{cGb}}}{}}0000000000000{{Ah{Gl{Bf}}}{{An{cGb}}}{}}0000000000000{Gn{{An{H`}}}}{{}{{An{jGb}}}}{{}{{An{lGb}}}}{{{Gl{Bf}}}{{Aj{{Bh{{Hd{{Bh{Bf}}Hb}}}}}}}}{{{Bh{Bf}}}{{Aj{{Bh{{Hd{{Bh{Bf}}Hb}}}}}}}}{{Ahc}{{An{eGb}}}Gd{}}0000000000000{j}{jAh}{l}{lAh}{{}Bn}{{}j}{{}l}{{ce}e{}{}}00000{{ce}d{}{}}011{cd{}}000221122222222{Hfc{}}000000000000000000000000000000000000000000000000000000000000000000000000000{c{{An{Dn}}}Hh}{c{{An{Bn}}}Hh}{c{{An{j}}}Hh}{c{{An{l}}}Hh}{{Eln}Hj}0{{jj}}{{jc}{}{}}{{lc}{}{}}{{ll}}{Fh{{Aj{Fj}}}}`{Hfd}0000000000000000000000000000000000000{Dn{{Bh{Bf}}}}{j{{Bh{Bf}}}}{l{{Bh{Bf}}}}{j}{l}{{Dnc}d{HlHn}}{{E`c}d{HlHn}}{{Elc}d{HlHn}}{{Bjc}d{HlHn}}{{Gfc}d{HlHn}}{{Enc}d{HlHn}}{{jc}d{HlHn}}{{lc}d{HlHn}}{{{Fb{ce}}g}dI`Gj{HlHn}}{{}{{An{dAh}}}}{{DnDn}Ab}{{E`E`}Ab}{{EbEb}Ab}{{EdEd}Ab}{{EfEf}Ab}{{EhEh}Ab}{{EjEj}Ab}{{ElEl}Ab}{{BjBj}Ab}{{EnEn}Ab}{{F`F`}Ab}{{jj}Ab}{{ll}Ab}{{{Fb{ce}}{Fb{ce}}}AbIbIb}{{ce}Ab{}{}}000000000000000000000000000000000000000000000000000000000000000000000{Dhd}{{{Af{ce}}i}gB`{{Bb{c}}}{}{{If{{Af{ce}}}{{A`{{Id{g}}}}}}}}{{{Af{ce}}}{{Aj{Ih}}}B`{{Bb{c}}}}{{{Bh{Ij}}}{{Bh{{Hd{{Aj{Il}}Ij}}}}}}{Ij{{Hd{{Aj{f}}In}}}}{Bh{{Bh{{Hd{{Aj{Il}}}}}}}}{{}{{Aj{J`}}}}{{}Cn}`{{nc}Ab{}}{{}}{{DnJb}Jd}{{E`Jb}Jd}{{nJb}{{An{dJf}}}}{{EbJb}Jd}{{EdJb}Jd}{{EfJb}Jd}{{EhJb}Jd}{{EjJb}Jd}{{ElJb}Jd}{{BjJb}Jd}{{GfJb}Jd}{{EnJb}Jd}{{F`Jb}Jd}{{jJb}{{An{dJf}}}}{{lJb}{{An{dJf}}}}{{{Fb{ce}}Jb}{{An{dJf}}}JhJh}0{cc{}}000000000000000000000{Ajn}{Bjn}{{{Jj{F`}}}n}33333333{{{Jn{JlF`}}}El}{{{Jn{K`F`}}}El}{{{Jn{KbF`}}}El}6{{{Jn{KdF`}}}El}{{{Jn{KfF`}}}El}{{{Jn{KhF`}}}El}{{{Jn{KjF`}}}El}{{{Jn{KlF`}}}El}{{{Jn{KnF`}}}El}{{{Jj{F`}}}Bj}={{{L`{F`}}}Gf}{{{Lb{F`}}}Gf}{{{Ld{F`}}}Gf}{{{Lf{F`}}}Gf}{cc{}}{{{Lh{F`}}}Gf}{{{Lj{F`}}}Gf}{{{Ll{F`}}}En}{{{Ln{F`}}}En}{{{M`{F`}}}En}{{{Mb{F`}}}En}{{{Md{F`}}}En}{{{Mf{F`}}}En}{{{Mh{F`}}}En}9{{{Mj{F`}}}En}::{{{Ml{j}}}j};{{{Ml{l}}}l}{c{{Fb{ce}}}{}{}}={Mnc{}}{N`{{Aj{Gf}}}}{Nbc{}}0{Ndj}0{Ndl}0{ceNf{}}{ceNh{}}{cc{}}{ce{}{}}01010101101010011010011010011001100110101010010101101001101010101010101001{Ahj}{{}j}{{}l}{Ahl}3030{{cc}j{Nj{Nl{Ah}}{Nl{Nn}}}}{{cc}l{Nj{Nl{Ah}}{Nl{Nn}}}}10{{ccO`}{{An{jd}}}{}}{{ccO`}{{An{ld}}}{}}9898899898989898988989899889989889898989899889898989899889899898898989989889>``{{{Aj{{Bh{Bf}}}}}{{Bh{Bf}}}}0{{}Ch}{{}Ob}0{{}c{{Od{Ob}}}}{{}c{{Od{Dd}}}}{{}Dd}0{{}Of}{{}c{{Od{Of}}}}1{{}c{{Od{D`}}}}{{}D`}08{{}c{{Od{Ch}}}}9{{}Ah}{{}c{{Od{Ah}}}}1101{{}Bf}{{}c{{Od{Bf}}}}14=={{}Oh}0{{}c{{Od{Oh}}}}?6?{{}Oj}0{{}c{{Od{Oj}}}}{ElOl}{On{{Gl{On}}}}{ElIn}{A`{{Aj{{Ad{Ab}}}}}}{{ce}Nn{AfHn}Ah}{{}{{Gl{On}}}}{{DnHb}{{Gl{Bf}}}}{{{Af{ce}}}{{An{AbAl}}}B`{{Bb{c}}}}{{{Af{ce}}g}{{An{AbAl}}}B`{{Bb{c}}}{{Ad{Ah}{{A`{Ab}}}}}}{{{Fb{ce}}g}dAfAfAj}`{c{{Bh{Bf}}}{}}0000000000000{AlAj}{An{{Bh{Bf}}}}{{OhAn}{{Aj{{Bh{Bf}}}}}}{{}{{Aj{Hf}}}}{DjBh}{{}Hf}0000000000000000000000000000000000000{{}d}{{}{{Bh{Bf}}}}{{jj}Ah}{{ll}Ah}{{jAh}j}{{lAh}l}{{}{{Bh{{Cd{Bf}}}}}}{ce{}{}}0000000000000000000000000000000000000{nc{}}1111111111111111111111111111111111111111111111111111111111111111111111111111{Dn{{Bh{{Hd{{Bh{Bf}}Hb}}}}}}22222222222222222222222222222222222222{{{Af{ce}}g}{{An{{AA`{c}}Cb}}}B`{{Bb{c}}}{{AAd{{AAb{c}}}}}}{Bj{{Aj{Bl}}}}{cAb{}}0{{Elc}Ab{}}{{}Ab}{jAb}{lAb}{El{{Aj{{Jn{KhF`}}}}}}{El{{Aj{{Jn{KlF`}}}}}}{El{{Aj{{Jn{K`F`}}}}}}{El{{Aj{{Jn{KbF`}}}}}}{El{{Aj{{Jn{JlF`}}}}}}{El{{Aj{{Jn{KjF`}}}}}}{El{{Aj{{Jn{KdF`}}}}}}{El{{Aj{{Jn{KfF`}}}}}}{El{{Aj{{Jn{KnF`}}}}}}{EjAb}{{AAfAAf}Ab}{{{Bh{Bf}}}{{Aj{Ab}}}}==<<{{}c{}}``{{}{{Gl{Hb}}}}{{}Hf}0000000{{}j}33{{}l}{{}Of}{{OhAAh}E`}{{}AAj}{{}AAl}{Ah{{Aj{AAl}}}}0{{}{{Bh{Ah}}}}0:7:6{{}{{Aj{On}}}}{{jc}{}{}}{{jj}}{{jCn}Cn}{{lCn}Cn}{{lc}{}{}}{{ll}}{{jc}c{AAn{AB`{Ah}}}}{{lc}c{AAn{AB`{Ah}}}}10`8{{}{{Aj{{Cd{Bf}}}}}}{{}n}0{{}d}{{{ABb{fKj}}}d}{{ChAh}d}{Chd}{{}j}0{{}l}0``{AlAj}{{OhAn}{{Aj{{Bh{Bf}}}}}}{An{{Bh{Bf}}}}{{E`E`}{{Aj{Ff}}}}{{jj}{{Aj{Ff}}}}{{ll}{{Aj{Ff}}}}`{{jHf}}{{lHf}}{c{{An{dABd}}}{}}{{{Af{ce}}}{{Aj{{ABf{c}}}}}B`{{Bb{c}}}}{Ah{{ABh{Ch}}}}{Ah{{ABj{Ch}}}}{AhCh}{CnCh}{{{Af{ce}}}dB`{{Bb{c}}}}{{{Af{ce}}g}dB`{{Bb{c}}}ABl}{nd}{{}n}0{Ej{{An{dN`}}}}{{jj}j}0{{ll}l}0{{jjO`}j}{{llO`}l}32{{jHf}j}{{lHf}l}{{jc}c{ABn{AB`{Ah}}}}{{lc}c{ABn{AB`{Ah}}}}10107766``{{Dnc}AnAC`}{{Bnc}AnAC`}{{jc}AnAC`}{{lc}AnAC`}{{{Af{ce}}ACb}dB`{{Bb{c}}}}{{nc}d{{ACd{n}}}}{{OhACf}Ab}0`{cn{}}{{}n}`{DnHf}{E`Hf}{ElHf}{BjHf}{GfHf}{EnHf}{jHf}{lHf}{{{Fb{ce}}}HfI`Gj}{jj}{ll}{{jj}}{{ll}}`````{EjAh}{{cee}Ff{}{}}0{{c{Gl{Bf}}}{{Bh{Bf}}}{}}0000000000000{ce{}{}}00000000000000{cCb{}}``{{}{{ACh{Ch}}}}{{}{{Bh{Bf}}}}{c{{An{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{Gf{{An{{Lh{F`}}c}}}{}}{Gf{{An{{Lf{F`}}c}}}{}}{Gf{{An{{Lb{F`}}c}}}{}}{Gf{{An{{Lj{F`}}c}}}{}}{Gf{{An{{L`{F`}}c}}}{}}{Gf{{An{{Ld{F`}}c}}}{}}6{En{{An{{Mh{F`}}c}}}{}}{En{{An{{Mb{F`}}c}}}{}}{En{{An{{Md{F`}}c}}}{}}{En{{An{{Mf{F`}}c}}}{}}{En{{An{{M`{F`}}c}}}{}}{En{{An{{Ll{F`}}c}}}{}}{En{{An{{Ln{F`}}c}}}{}}{En{{An{{Mj{F`}}c}}}{}}>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>{{ng}{{An{en}}}{}{}{{If{c}{{A`{{An{ec}}}}}}}}{c{{Cd{Bf}}}{}}000000000000000000000000000{c{{Bh{Bf}}}{}}0000000000000{cACj{}}0000000000000000000000000000000000000{{}ACl}00000000000000{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000{{Dne}c{}{{If{{Gl{Bf}}}{{A`{c}}}}}}{{cgAb}e{}{}{{If{{Gl{Bf}}}{{A`{e}}}}}}000000000{{je}c{}{{If{{Gl{Bf}}}{{A`{c}}}}}}1{{le}c{}{{If{{Gl{Bf}}}{{A`{c}}}}}}22{ACnAD`}{{ACnc}AD`{}}{{ADbADd}{{Aj{ADf}}}}{{}Ob}88888888888888888888888888888888888888{EjCn}{{}j}0{{}l}0{{On{Gl{Bf}}}{{Aj{{Bh{Bf}}}}}}```````{{cb}d{}}{c{{Cd{Bf}}}{}}{c{{Bh{Bf}}}{}}1??{{}c{}}{GnGn}{{ce}d{}{}}{c{{An{GnGb}}}Gd}{{{Gl{Bf}}}{{An{cGb}}}{}}{{Ah{Gl{Bf}}}{{An{cGb}}}{}}{{Ahc}{{An{eGb}}}Gd{}}{{}Gn}{Hfc{}}0{c{{An{Gn}}}Hh}`{Hfd}{Gn{{Bh{Bf}}}}{{Gnc}d{HlHn}}{{GnGn}Ab}{{ce}Ab{}{}}0000``{{GnJb}{{An{dJf}}}}{{{ADh{cegi}}}GnI`I`I`ADj}{cc{}}{{{Gl{Bf}}}{{An{GnGb}}}}1{ce{}{}}02`{c{{Bh{Bf}}}{}}{{}Hf}2222{cAb{}}``{{Gnc}AnAC`}{GnHf}`{{c{Gl{Bf}}}{{Bh{Bf}}}{}}6{c{{An{e}}}{}{}}00{c{{Cd{Bf}}}{}}07{cACj{}}{{}ACl}::{{cgAb}e{}{}{{If{{Gl{Bf}}}{{A`{e}}}}}}{{Gne}c{}{{If{{Gl{Bf}}}{{A`{c}}}}}}<","c":[32,828,829],"p":[[5,"Private",1805],[1,"unit"],[8,"AccountId",1806],[8,"Nonce",0],[5,"Permill",0],[5,"Perbill",0],[5,"RuntimeOrigin",0],[17,"Output"],[1,"bool"],[10,"Fn",1807],[5,"RuntimeApiImpl",0],[1,"u32"],[6,"Option",1808],[6,"ApiError",1809],[6,"Result",1810],[10,"Block",1811],[10,"CallApiAt",1809],[8,"ApplyExtrinsicResult",1812],[1,"u8"],[5,"Vec",1813],[6,"OriginCaller",0],[6,"RawOrigin",1814],[5,"RuntimeGenesisConfig",0],[5,"Storage",1815],[5,"String",1816],[1,"array"],[5,"Digest",1817],[8,"Balance",0],[5,"BlockFees",1818],[5,"BlockMessagesWithStorageKey",1819],[5,"Weight",1820],[5,"BlockWeights",1821],[8,"Result",1822],[8,"BlockNumber",0],[5,"CheckExtrinsicsValidityError",1806],[8,"Block",0],[5,"InherentData",1823],[5,"CheckInherentsResult",1823],[5,"SessionKeys",0],[6,"HoldIdentifier",0],[6,"RuntimeSlashReason",0],[6,"RuntimeLockId",0],[6,"RuntimeHoldReason",0],[6,"RuntimeFreezeReason",0],[6,"RuntimeTask",0],[6,"RuntimeCall",0],[6,"RuntimeEvent",0],[5,"Runtime",0],[6,"MultiAddress",0],[10,"Clone",1824],[6,"Ordering",1825],[5,"DomainId",1818],[5,"DomainAllowlistUpdates",1818],[5,"ApiRef",1809],[8,"Moment",1826],[5,"CrateVersion",1827],[5,"Error",1828],[10,"Input",1829],[6,"RuntimeError",0],[10,"Decode",1829],[10,"HasCompact",1830],[1,"slice"],[5,"UncheckedExtrinsic",1733],[5,"DecodeExtrinsicError",1806],[5,"KeyTypeId",1831],[1,"tuple"],[1,"usize"],[10,"Deserializer",1832],[8,"DispatchResultWithPostInfo",1814],[10,"Output",1829],[10,"Sized",1833],[10,"Encode",1829],[10,"PartialEq",1825],[6,"TransactionOutcome",1812],[10,"FnOnce",1807],[5,"StorageProof",1834],[8,"UncheckedExtrinsic",0],[8,"AccountId",1733],[5,"DispatchInfo",1814],[6,"Era",1835],[5,"Formatter",1836],[8,"Result",1836],[5,"Error",1836],[10,"Debug",1836],[8,"Origin",1837],[8,"Messenger",0],[8,"CallableCallFor",1814],[8,"Sudo",0],[8,"BlockFees",0],[8,"AutoId",0],[8,"Timestamp",0],[8,"System",0],[8,"Balances",0],[8,"ExecutivePallet",0],[8,"Transporter",0],[6,"Error",1837],[6,"Error",1838],[6,"Error",1839],[6,"Error",1840],[6,"Error",1841],[6,"Error",1842],[6,"Event",1840],[6,"Event",1843],[6,"Event",1839],[6,"Event",1842],[6,"Event",1837],[6,"Event",1841],[6,"Event",1844],[6,"Event",1838],[5,"Compact",1830],[1,"never"],[6,"DispatchError",1812],[5,"OwnedFd",1845],[1,"f64"],[10,"IntoFilelike",1846],[10,"IntoSocketlike",1846],[10,"RationalArg",1847],[10,"TryInto",1848],[1,"u64"],[6,"Rounding",1847],[5,"RuntimeVersion",1849],[10,"From",1848],[5,"BlockLength",1821],[6,"ChainId",1818],[8,"EndpointId",1850],[5,"CallMetadata",1827],[1,"str"],[6,"Endpoint",1850],[10,"EndpointHandler",1850],[5,"Box",1851],[10,"Hash",1852],[10,"BuildHasher",1852],[10,"Hasher",1852],[5,"CrossDomainMessage",1819],[8,"MessageKey",1819],[8,"StorageChanges",1809],[8,"HashingFor",1811],[10,"Backend",1853],[5,"U256",1854],[8,"ChannelId",1818],[5,"RuntimeMetadataPrefixed",1855],[5,"OpaqueMetadata",1856],[10,"MultiplyArg",1847],[10,"UniqueSaturatedInto",1857],[8,"Credit",1858],[6,"TransactionValidityError",1859],[8,"ProofRecorder",1809],[5,"FeeDetails",1860],[5,"RuntimeDispatchInfo",1860],[10,"Extension",1861],[10,"ReciprocalArg",1847],[10,"Serializer",1862],[6,"CallContext",1863],[10,"Into",1848],[8,"MessageId",1819],[5,"Transfers",1818],[5,"TypeId",1864],[5,"Type",1865],[6,"TransactionSource",1859],[8,"TransactionValidity",1859],[5,"EncodableOpaqueLeaf",1866],[5,"Proof",1866],[8,"Hash",0],[5,"UncheckedExtrinsic",1867],[10,"SignedExtension",1811],[8,"BlockId",0],[8,"SystemConfig",0],[8,"TransactionPaymentConfig",0],[8,"BalancesConfig",0],[8,"GenesisConfig",0],[8,"SignedBlock",0],[5,"DustRemovalHandler",0],[5,"FinalDomainTransactionByteFee",0],[5,"ExtrinsicStorageFees",0],[5,"OnXDMRewards",0],[5,"MmrProofVerifier",0],[5,"StorageKeys",0],[5,"Version",0],[5,"BlockHashCount",0],[5,"RuntimeBlockLength",0],[5,"RuntimeBlockWeights",0],[5,"ExistentialDeposit",0],[5,"MaxLocks",0],[5,"MaxReserves",0],[5,"OperationalFeeMultiplier",0],[5,"DomainChainByteFee",0],[5,"SelfChainId",0],[5,"ChannelReserveFee",0],[5,"TransporterEndpointId",0],[5,"PalletInfo",0],[5,"RuntimeApi",0],[8,"SelfDomainIdConfig",0],[8,"CheckedExtrinsic",0],[8,"SudoConfig",0],[8,"BlockId",1733],[8,"Header",1733],[8,"Block",1733]],"b":[[378,"impl-PerThing-for-Permill"],[379,"impl-Permill"],[380,"impl-PerThing-for-Perbill"],[381,"impl-Perbill"],[493,"impl-Div-for-Permill"],[494,"impl-Div%3CN%3E-for-Permill"],[495,"impl-Div%3CN%3E-for-Perbill"],[496,"impl-Div-for-Perbill"],[662,"impl-Debug-for-MultiAddress%3CAccountId,+AccountIndex%3E"],[663,"impl-Display-for-MultiAddress%3CAccountId,+AccountIndex%3E"],[686,"impl-From%3COption%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[687,"impl-From%3COriginCaller%3E-for-RuntimeOrigin"],[688,"impl-From%3CRawOrigin%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[697,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[698,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[699,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[701,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[702,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[703,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[704,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[705,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[706,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[709,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[710,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[711,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[712,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[714,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[715,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[716,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[717,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[718,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[719,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[720,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[721,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[722,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[724,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[736,"impl-PerThing-for-Permill"],[737,"impl-Permill"],[738,"impl-Perbill"],[739,"impl-PerThing-for-Perbill"],[818,"impl-Permill"],[819,"impl-PerThing-for-Permill"],[820,"impl-PerThing-for-Perbill"],[821,"impl-Perbill"],[914,"impl-Version"],[915,"impl-TypedGet-for-Version"],[916,"impl-Get%3C_I%3E-for-Version"],[917,"impl-Get%3C_I%3E-for-BlockHashCount"],[918,"impl-BlockHashCount"],[919,"impl-TypedGet-for-BlockHashCount"],[920,"impl-TypedGet-for-RuntimeBlockLength"],[921,"impl-Get%3C_I%3E-for-RuntimeBlockLength"],[922,"impl-RuntimeBlockLength"],[923,"impl-Get%3C_I%3E-for-RuntimeBlockWeights"],[924,"impl-RuntimeBlockWeights"],[925,"impl-TypedGet-for-RuntimeBlockWeights"],[926,"impl-TypedGet-for-ExistentialDeposit"],[927,"impl-Get%3C_I%3E-for-ExistentialDeposit"],[928,"impl-ExistentialDeposit"],[929,"impl-TypedGet-for-MaxLocks"],[930,"impl-Get%3C_I%3E-for-MaxLocks"],[931,"impl-MaxLocks"],[932,"impl-TypedGet-for-MaxReserves"],[933,"impl-Get%3C_I%3E-for-MaxReserves"],[934,"impl-MaxReserves"],[935,"impl-OperationalFeeMultiplier"],[936,"impl-Get%3C_I%3E-for-OperationalFeeMultiplier"],[937,"impl-TypedGet-for-OperationalFeeMultiplier"],[938,"impl-Get%3C_I%3E-for-DomainChainByteFee"],[939,"impl-TypedGet-for-DomainChainByteFee"],[940,"impl-DomainChainByteFee"],[941,"impl-TypedGet-for-SelfChainId"],[942,"impl-SelfChainId"],[943,"impl-Get%3C_I%3E-for-SelfChainId"],[944,"impl-ChannelReserveFee"],[945,"impl-Get%3C_I%3E-for-ChannelReserveFee"],[946,"impl-TypedGet-for-ChannelReserveFee"],[947,"impl-TypedGet-for-TransporterEndpointId"],[948,"impl-TransporterEndpointId"],[949,"impl-Get%3C_I%3E-for-TransporterEndpointId"],[1187,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1188,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1189,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1190,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1191,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1192,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1193,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1194,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1195,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1199,"impl-Permill"],[1200,"impl-Zero-for-Permill"],[1201,"impl-Perbill"],[1202,"impl-Zero-for-Perbill"],[1221,"impl-Runtime"],[1222,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3CMultiAddress%3C%3C%3CMultiSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+()%3E,+RuntimeCall,+MultiSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1223,"impl-Runtime"],[1224,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3CMultiAddress%3C%3C%3CMultiSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+()%3E,+RuntimeCall,+MultiSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1225,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3CMultiAddress%3C%3C%3CMultiSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+()%3E,+RuntimeCall,+MultiSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1226,"impl-Runtime"],[1232,"impl-Mul%3CN%3E-for-Permill"],[1233,"impl-Mul-for-Permill"],[1234,"impl-Mul%3CWeight%3E-for-Permill"],[1235,"impl-Mul%3CWeight%3E-for-Perbill"],[1236,"impl-Mul%3CN%3E-for-Perbill"],[1237,"impl-Mul-for-Perbill"],[1245,"impl-RuntimeOrigin"],[1246,"impl-OriginTrait-for-RuntimeOrigin"],[1251,"impl-Permill"],[1252,"impl-One-for-Permill"],[1253,"impl-Perbill"],[1254,"impl-One-for-Perbill"],[1275,"impl-OriginTrait-for-RuntimeOrigin"],[1276,"impl-RuntimeOrigin"],[1278,"impl-Saturating-for-Permill"],[1279,"impl-SaturatingAdd-for-Permill"],[1280,"impl-Saturating-for-Perbill"],[1281,"impl-SaturatingAdd-for-Perbill"],[1294,"impl-SaturatingSub-for-Permill"],[1295,"impl-Saturating-for-Permill"],[1296,"impl-SaturatingSub-for-Perbill"],[1297,"impl-Saturating-for-Perbill"],[1309,"impl-OriginTrait-for-RuntimeOrigin"],[1310,"impl-RuntimeOrigin"],[1437,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1438,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1439,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1440,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1441,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1442,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1444,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1445,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1446,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1447,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1448,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1449,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1450,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1451,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1728,"impl-Permill"],[1729,"impl-Zero-for-Permill"],[1730,"impl-Zero-for-Perbill"],[1731,"impl-Perbill"]]}],\
["cross_domain_message_gossip",{"doc":"","t":"FIFFFNNNNNNNNNNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["ChainTxPoolMsg","ChainTxPoolSink","GossipWorker","GossipWorkerBuilder","Message","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","chain_id","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_to","encoded_data","encoded_data","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gossip_msg_sink","identity","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","maybe_peer","new","push_chain_tx_pool_sink","run","size_hint","start_cross_chain_message_listener","to_keyed_vec","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","xdm_gossip_peers_set_config"],"q":[[0,"cross_domain_message_gossip"],[135,"alloc::vec"],[136,"sc_network::service::traits"],[137,"alloc::boxed"],[138,"alloc::sync"],[139,"sp_runtime::traits"],[140,"sc_network_gossip"],[141,"core::marker"],[142,"core::marker"],[143,"sc_network_gossip"],[144,"core::result"],[145,"parity_scale_codec::codec"],[146,"parity_scale_codec::codec"],[147,"core::fmt"],[148,"core::any"],[149,"alloc::rc"],[150,"sp_domains"],[151,"sp_blockchain::backend"],[152,"sc_transaction_pool_api"],[153,"sc_network::service::traits"],[154,"core::marker"]],"d":["Encoded message with sender info if available.","Unbounded sender to send encoded ext to listeners.","Gossip worker to gossip incoming and outgoing messages to …","Gossip worker builder","A cross chain message with encoded data.","","","","","","","","","","","","Build gossip worker","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get the gossip message sink","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a gossip worker builder","Collect the chain tx pool sink that will be used by the …","Starts the Gossip message worker.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the network configuration for cross chain message …"],"i":[0,0,0,0,0,15,15,15,36,4,8,15,36,4,8,15,4,15,15,15,15,15,36,4,8,15,36,4,8,15,36,4,8,15,15,36,15,15,36,4,8,15,36,36,4,4,8,8,15,15,36,36,4,4,8,8,15,15,4,15,36,4,8,15,36,4,8,15,36,4,8,15,36,4,8,15,36,4,8,15,36,4,8,15,36,4,8,15,36,4,8,15,36,4,4,8,15,0,15,36,4,8,15,36,4,8,15,36,4,8,15,15,15,15,36,4,8,15,36,4,8,15,36,4,8,15,36,4,8,15,36,4,8,15,0],"f":"`````{c{{d{b}}}{}}{c{{f{b}}}{}}1{ce{}{}}0000000{{he{l{j}}{n{g}}}{{A`{ce}}}Ab{{Ad{c}}AfAhAj}{{Al{c}}}}`{c{{Bb{AnB`}}}Bd}{{{Bf{b}}}{{Bb{cB`}}}{}}{{Bh{Bf{b}}}{{Bb{cB`}}}{}}{{Bhc}{{Bb{eB`}}}Bd{}}{Bjc{}}0000000{BjBl}000{{Anc}Bl{BnC`}}``{{AnCb}Cd}{cc{}}0000::0:00::00:0::0{h{{Cf{An}}}}<{{}Bj}000<<<<{{{l{c}}}{{l{Ch}}}{}}000{{{n{c}}}{{n{Ch}}}{}}000{{{Cj{c}}}{{Cj{Ch}}}{}}000????????????`{{}h}{{hClCn}Bl}{{{A`{ce}}}BlAb{}}{AnBj}{{Cl{n{c}}{n{e}}{n{g}}i}BlD`DbDd{{Dj{}{{Df{Dh}}}}Dl}}{{c{Bf{b}}}{{f{b}}}{}}{c{{Bb{e}}}{}{}}00000000000{c{{d{b}}}{}}0{c{{f{b}}}{}}{cDn{}}000{cE`{}}000{ce{}{}}00000000000{{}{{Ed{Eb{l{j}}}}}}","c":[],"p":[[1,"u8"],[1,"array"],[5,"Vec",135],[5,"GossipWorkerBuilder",0],[10,"NotificationService",136],[5,"Box",137],[5,"Arc",138],[5,"GossipWorker",0],[10,"Block",139],[10,"Network",140],[10,"Send",141],[10,"Sync",141],[10,"Clone",142],[10,"Syncing",140],[5,"Message",0],[5,"Error",143],[6,"Result",144],[10,"Input",145],[1,"slice"],[1,"u32"],[1,"usize"],[1,"unit"],[10,"Output",145],[10,"Sized",141],[5,"Formatter",146],[8,"Result",146],[5,"TracingUnboundedSender",147],[10,"Any",148],[5,"Rc",149],[6,"ChainId",150],[8,"ChainTxPoolSink",0],[10,"HeaderBackend",151],[10,"TransactionPool",152],[10,"NetworkPeers",136],[17,"Item"],[5,"ChainTxPoolMsg",0],[10,"Stream",153],[10,"Unpin",141],[5,"TypeId",148],[1,"str"],[5,"NonDefaultSetConfig",154],[1,"tuple"]],"b":[]}],\
["domain_block_builder",{"doc":"Substrate block builder","t":"FKKFPGPNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNOONNNNNNNNNNNNNNNNNNNN","n":["BlockBuilder","BlockBuilderApi","BlockBuilderProvider","BuiltBlock","No","RecordProof","Yes","__clone_box","apply_extrinsic","apply_extrinsic_before_version_6","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","check_inherents","clear","clone","clone_into","create_inherents","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","estimate_block_size","finalize_block","from","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","inherent_extrinsics","init","init","init","into","into","into","into_inner","is_clear","new","new_block","new_block_at","prepare_storage_changes_before","prepare_storage_changes_before_finalize_block","proof","storage_changes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","yes"],"q":[[0,"domain_block_builder"],[87,"dyn_clone::sealed"],[88,"sp_runtime"],[89,"core::result"],[90,"sp_runtime::transaction_validity"],[91,"sp_api"],[92,"sp_runtime::legacy::byte_sized_error"],[93,"sp_blockchain::error"],[94,"sp_runtime::traits"],[95,"sp_api"],[96,"sp_inherents"],[97,"sp_inherents"],[98,"alloc::vec"],[99,"sp_api"],[100,"core::option"],[101,"sp_runtime::traits"],[102,"sp_blockchain::error"],[103,"core::convert"],[104,"core::any"]],"d":["Utility for building new (valid) blocks from a stream of …","The <code>BlockBuilder</code> api trait that provides the required …","Block builder provider","A block that was build by <code>BlockBuilder</code> plus some …","<code>No</code>, don’t record any proof.","Used as parameter to <code>BlockBuilderProvider</code> to express if …","<code>Yes</code>, record a proof.","","Apply the given extrinsic.","","The actual block that was build.","","","","","","","Consume the builder to build a valid <code>Block</code> containing all …","Check that the inherents are valid. The inherent data will …","","","","Create the inherents for the block.","","","","","","","","","","","","","","","","","Estimate the size of the block in the current state.","Finish the current block.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Generate inherent extrinsics. The inherent data will vary …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into the inner values.","","Create a new instance of builder based on the given …","Create a new block, built on the head of the chain.","Create a new block, built on top of <code>parent</code>.","Returns the state before executing the extrinsic at given …","Returns the state before finalizing the block.","An optional proof that was recorded while building the …","The changes that need to be applied to the backend to get …","","","","","","","","","","","","","","","","","","","","Returns if <code>Self</code> == <code>Yes</code>."],"i":[0,0,0,0,17,0,17,17,3,3,10,10,9,17,10,9,17,9,3,17,17,17,9,17,10,9,17,10,9,17,10,9,17,17,17,17,17,17,17,9,3,10,9,17,17,10,9,17,10,9,17,3,10,9,17,10,9,17,10,17,9,29,29,9,9,10,10,17,10,9,17,10,9,17,10,9,17,10,9,17,10,9,17,10,9,17,17],"f":"```````{{cb}d{}}{f{{j{{j{{j{dh}}l}}n}}}}{f{{j{{j{{j{dA`}}l}}n}}}}`{ce{}{}}00000{{{Ab{ceg}}}{{j{{Ad{c}}Af}}}Ah{{Aj{c}}}{{Al{c}}}}{{fcAn}{{j{B`n}}}Ah}{{}c{}}{BbBb}{{ce}d{}{}}{{BdAn}{{j{BfAf}}}}{{}Bb}{Bhc{}}00000{Bhd}00{{BbBb}Bj}{{ce}Bj{}{}}0000{{{Ab{ceg}}Bj}BhAh{{Aj{c}}}{{Al{c}}}}{f{{j{n}}}}{cc{}}0{BjBb}1??????{{fAn}{{j{Bln}}}}{{}Bh}00{ce{}{}}00{{{Ad{c}}}{{Cd{c{Bn{c}}{Cb{C`}}}}}Ah}{cBj{}}{{e{Cf{c}}BbChgBf{Cb{An}}Bj}{{j{{Ab{ceg}}Af}}}Ah{{Aj{c}}}{{Al{c}}}}{{CjCh}{{Cl{{Ab{ceg}}}}}Ah{{Aj{c}}}{{Al{c}}}}{{Cj{Cn{c}}Che}{{Cl{{Ab{cgi}}}}}Ah{{D`{Bb}}}{{Aj{c}}}{{Al{c}}}}{{{Ab{ceg}}Bh}{{j{{Bn{c}}Af}}}Ah{{Aj{c}}}{{Al{c}}}}{{{Ab{ceg}}}{{j{{Bn{c}}Af}}}Ah{{Aj{c}}}{{Al{c}}}}``7{c{{j{e}}}{}{}}00000{cDb{}}00999999999{BbBj}","c":[9],"p":[[5,"Private",87],[1,"unit"],[10,"BlockBuilderApi",0],[6,"DispatchError",88],[6,"Result",89],[6,"TransactionValidityError",90],[6,"ApiError",91],[6,"DispatchError",92],[5,"BlockBuilder",0],[5,"BuiltBlock",0],[6,"Error",93],[10,"Block",94],[10,"ProvideRuntimeApi",91],[10,"Backend",95],[5,"InherentData",96],[5,"CheckInherentsResult",96],[6,"RecordProof",0],[5,"ApiRef",91],[5,"VecDeque",97],[1,"usize"],[1,"bool"],[5,"Vec",98],[8,"StorageChanges",91],[5,"StorageProof",99],[6,"Option",100],[1,"tuple"],[8,"NumberFor",94],[5,"Digest",101],[10,"BlockBuilderProvider",0],[8,"Result",93],[6,"BlockId",102],[10,"Into",103],[5,"TypeId",104]],"b":[]}],\
["domain_block_preprocessor",{"doc":"This crate provides a preprocessor for the domain block, …","t":"FFKNNNNNONNNNNNNNONNNNNNNNNNCNNNNNNNNNNNNCNNNNNNNNNNNNNMNNFNNNNNNNNNHNNNNNNHNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DomainBlockPreprocessor","PreprocessResult","ValidateReceipt","__clone_box","borrow","borrow","borrow_mut","borrow_mut","bundles","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","extrinsics","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","inherents","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","new","preprocess_consensus_block","stateless_runtime","to_owned","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","validate_receipt","vzip","vzip","CreateInherentDataProvider","__clone_box","borrow","borrow_mut","clone","clone_into","create_inherent_data_providers","deref","deref_mut","drop","extract_domain_runtime_upgrade_code","fmt","from","from_mut","from_mut","from_ref","from_ref","get_inherent_data","init","into","into_key","into_mut","into_ref","new","to_owned","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip","ExtractSignerResult","StatelessRuntime","borrow","borrow_mut","check_extrinsics_and_do_pre_dispatch","construct_consensus_chain_byte_fee_extrinsic","construct_domain_update_chain_allowlist_extrinsic","construct_set_code_extrinsic","construct_timestamp_extrinsic","decode_extrinsic","deref","deref_mut","drop","extract_signer","fetch_runtime_code","from","from_mut","from_mut","from_ref","from_ref","inbox_response_storage_key","init","into","into_key","into_mut","into_ref","is_inherent_extrinsic","is_valid_xdm","is_within_tx_range","new","outbox_storage_key","set_extension_factory","set_storage","transfers_storage_key","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"domain_block_preprocessor"],[58,"domain_block_preprocessor::inherents"],[90,"domain_block_preprocessor::stateless_runtime"],[131,"dyn_clone::sealed"],[132,"core::clone"],[133,"sp_domains"],[134,"alloc::sync"],[135,"sp_runtime::traits"],[136,"sp_blockchain::backend"],[137,"sp_api"],[138,"sc_client_api::client"],[139,"core::marker"],[140,"core::marker"],[141,"sp_blockchain::error"],[142,"core::result"],[143,"core::any"],[144,"sp_runtime::traits"],[145,"sp_domains"],[146,"alloc::boxed"],[147,"core::pin"],[148,"alloc::vec"],[149,"sp_blockchain::error"],[150,"core::fmt"],[151,"domain_runtime_primitives"],[152,"sp_api"],[153,"sc_executor"],[154,"domain_runtime_primitives"],[155,"domain_runtime_primitives"],[156,"sp_messenger::messages"],[157,"subspace_core_primitives"],[158,"sc_client_api::execution_extensions"],[159,"sp_storage"]],"d":["","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Provides functionality of adding inherent extrinsics to …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns new upgraded runtime if upgraded did happen in the …","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Stateless runtime api based on the runtime code and …","","","This is stateful runtime api call and require setting of …","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","Create a new instance of <code>StatelessRuntime</code> with empty …","","Set the extensions.","Set the storage.","","","","","","","",""],"i":[0,0,0,3,15,3,15,3,15,3,3,15,3,15,3,15,3,15,15,3,15,15,3,3,15,15,3,3,0,15,3,15,3,15,3,15,3,15,3,3,3,0,3,15,3,15,3,15,3,15,3,15,3,15,3,14,15,3,0,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35],"f":"```{{cb}d{}}{ce{}{}}000`{{{f{cegik}}}{{f{cegik}}}{}{}{}{}h}{{ce}d{}{}}{jc{}}000{jd}0`{cc{}}050500505`{{}j}066666666{{l{n{e}}{n{i}}k}{{f{cgeik}}}A`{{Ab{c}}{Ad{c}}}A`{{Ab{g}}{Af{g}}{Ad{g}}AhAj}{{Al{cg}}}}{{{f{cegik}}}{{Bb{{B`{{An{c}}}}}}}A`A`{{Ab{c}}{Ad{c}}}{{Ab{e}}{Af{e}}{Ad{e}}AhAj}{{Al{ce}}}}`8{c{{Bd{e}}}{}{}}00000{cBf{}}0::::{{Al{Bl{{Bh{c}}{Bh{e}}Bj}}}{{Bb{Bn}}}A`A`};;`<;;{{{C`{ce}}}{{C`{ce}}}{}{A`h}}:{{{C`{ec}}d}{{Cf{{Cd{Cb}}}}}A`{{Ad{c}}{Ab{c}}}}::9{{{n{e}}l}{{Bd{{B`{{Cj{Ch}}}}Cl}}}A`{{Ad{c}}{Ab{c}}}}{{{C`{ce}}Cn}D`Db{DbA`}}:?:?:{{{n{e}}l}{{Bd{DdCl}}}A`{{Ad{c}}{Ab{c}}}}:{ce{}{}}000{{{n{c}}B`l}{{C`{ce}}}{}A`}19998111``11{{{Df{ce}}Cj{Bh{c}}}{{Bd{{Bd{dDh}}Dj}}}A`{DlDn}}{{{Df{ce}}E`}{{Bd{Dj}}}A`{DlDn}}{{{Df{ce}}Eb}{{Bd{Dj}}}A`{DlDn}}{{{Df{ce}}{Cj{Ch}}}{{Bd{{Cj{Ch}}Dj}}}A`{DlDn}}{{{Df{ce}}Ed}{{Bd{Dj}}}A`{DlDn}}{{{Df{ce}}Ef}{{Bd{{Bd{Eh}}Dj}}}A`{DlDn}}{jc{}}0{jd}{{{Df{ce}}Cj}{{Bd{{Ej{c}}Dj}}}A`{DlDn}}{{{Df{ce}}}{{B`{{En{{El{Ch}}}}}}}{}{}}{cc{}}0<<0{{{Df{ce}}F`}{{Bd{{Cj{Ch}}Dj}}}A`{DlDn}}{{}j}>>>>{{{Df{ce}}}{{Bd{FbDj}}}A`{DlDn}}{{{Df{ce}}{Cj{Ch}}}{{Bd{{B`{Fb}}Dj}}}A`{DlDn}}{{{Df{ce}}FdFd}{{Bd{FbDj}}}A`{DlDn}}{{{n{c}}{En{{El{Ch}}}}}{{Df{ec}}}{DlDn}A`}5{{{Df{ce}}{Cd{Ff}}}dA`{DlDn}}{{{Df{ce}}Fh}dA`{DlDn}}{{{Df{ce}}}{{Bd{{Cj{Ch}}Dj}}}A`{DlDn}}{c{{Bd{e}}}{}{}}00{cBf{}}{ce{}{}}00","c":[],"p":[[5,"Private",131],[1,"unit"],[5,"DomainBlockPreprocessor",0],[10,"Clone",132],[1,"usize"],[5,"DomainId",133],[5,"Arc",134],[10,"Block",135],[10,"HeaderBackend",136],[10,"ProvideRuntimeApi",137],[10,"BlockBackend",138],[10,"Send",139],[10,"Sync",139],[10,"ValidateReceipt",0],[5,"PreprocessResult",0],[6,"Option",140],[8,"Result",141],[6,"Result",142],[5,"TypeId",143],[8,"NumberFor",135],[8,"Balance",144],[5,"ExecutionReceipt",133],[6,"ReceiptValidity",133],[5,"CreateInherentDataProvider",58],[10,"Future",145],[5,"Box",146],[5,"Pin",147],[1,"u8"],[5,"Vec",148],[6,"Error",141],[5,"Formatter",149],[8,"Result",149],[10,"Debug",149],[5,"InherentData",150],[5,"StatelessRuntime",90],[5,"CheckExtrinsicsValidityError",151],[6,"ApiError",137],[10,"CodeExecutor",152],[10,"RuntimeVersionOf",153],[8,"Balance",151],[5,"DomainAllowlistUpdates",133],[8,"Moment",144],[5,"OpaqueExtrinsic",154],[5,"DecodeExtrinsicError",151],[8,"ExtractSignerResult",90],[1,"slice"],[6,"Cow",155],[8,"MessageKey",156],[1,"bool"],[5,"U256",157],[10,"ExtensionsFactory",158],[5,"Storage",159]],"b":[]}],\
["domain_client_consensus_relay_chain",{"doc":"The relay-chain provided consensus algoritm for parachains.","t":"FNNNNNNNNNHNNNNNNNNNNNNN","n":["Verifier","borrow","borrow_mut","default","deref","deref_mut","drop","from","from_mut","from_ref","import_queue","init","into","into_any","into_any_arc","into_any_rc","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","verify","vzip"],"q":[[0,"domain_client_consensus_relay_chain"],[24,"prometheus::registry"],[25,"core::option"],[26,"sc_consensus::import_queue::basic_queue"],[27,"sp_blockchain::error"],[28,"sp_runtime::traits"],[29,"sp_consensus::error"],[30,"sc_consensus::block_import"],[31,"core::marker"],[32,"core::marker"],[33,"alloc::boxed"],[34,"core::any"],[35,"alloc::sync"],[36,"alloc::rc"],[37,"core::result"],[38,"core::any"],[39,"core::pin"]],"d":["A verifier that just checks the inherents.","","","Create a new instance.","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Start an import queue for a Cumulus collator that does not …","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0{{}{{b{c}}}{}}{dc{}}0{df}{cc{}}44{{eg{j{h}}}{{n{{l{c}}}}}A`{{Af{c}{{Ab{Ad}}}}AhAj}Al}{{}d}6{{{An{c}}}{{An{B`}}}{}}{{{Bb{c}}}{{Bb{B`}}}{}}{{{Bd{c}}}{{Bd{B`}}}{}}{c{{Bf{e}}}{}{}}0{cBh{}}{cBj{}}<<{{{b{c}}{Bl{c}}}{{C`{{An{Bn}}}}}A`}=","c":[],"p":[[5,"Verifier",0],[1,"usize"],[1,"unit"],[5,"Registry",24],[6,"Option",25],[5,"BasicQueue",26],[8,"Result",27],[10,"Block",28],[17,"Error"],[6,"Error",29],[10,"BlockImport",30],[10,"Send",31],[10,"Sync",31],[10,"SpawnEssentialNamed",32],[5,"Box",33],[10,"Any",34],[5,"Arc",35],[5,"Rc",36],[6,"Result",37],[5,"TypeId",34],[1,"str"],[5,"BlockImportParams",30],[10,"Future",38],[5,"Pin",39]],"b":[]}],\
["domain_client_message_relayer",{"doc":"","t":"PPPPGPPIPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHH","n":["ApiError","ArithmeticError","BlockchainError","ConstructStorageProof","Error","FailedToConstructExtrinsic","FetchAssignedMessages","GossipMessageSink","InvalidChainId","MissingBlockHash","MissingBlockHeader","MmrLeafMissing","MmrProof","StoreRelayedBlockNumber","UnableToFetchDomainId","UnableToFetchRelayConfirmationDepth","UnableToSubmitCrossDomainMessage","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from","from","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip","worker","relay_consensus_chain_messages","relay_domain_messages"],"q":[[0,"domain_client_message_relayer"],[48,"domain_client_message_relayer::worker"],[50,"core::fmt"],[51,"core::fmt"],[52,"sp_api"],[53,"sp_blockchain::error"],[54,"alloc::boxed"],[55,"core::any"],[56,"alloc::sync"],[57,"alloc::rc"],[58,"core::result"],[59,"core::any"],[60,"sp_runtime::traits"],[61,"sc_client_api::client"],[62,"sp_blockchain::backend"],[63,"sc_client_api::backend"],[64,"sc_client_api::proof_provider"],[65,"sp_api"],[66,"sp_domains"],[67,"core::marker"]],"d":["Api related error.","Arithmetic related error.","Blockchain related error.","Emits when storage proof construction fails.","Relayer error types.","Emits when unsigned extrinsic construction fails.","Emits when failed to fetch assigned messages for a given …","Sink used to submit all the gossip messages.","Invalid ChainId","Missing block hash","Missing block header","MMR Leaf missing","Failed to generate MMR proof","Emits when failed to store the processed block number.","Emits when unable to fetch domain_id.","Emits when unable to fetch relay confirmation depth.","Failed to submit a cross domain message","","","","","","","","","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Starts relaying consensus chain messages to other domains. …","Starts relaying domain messages to other chains. If the …"],"i":[3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0],"f":"`````````````````{ce{}{}}0{bc{}}0{bd}{{fh}j}{lf}{nf}{cc{}}{A`f}1771{{}b}8{{{Ab{c}}}{{Ab{Ad}}}{}}{{{Af{c}}}{{Af{Ad}}}{}}{{{Ah{c}}}{{Ah{Ad}}}{}};;;{c{{Aj{e}}}{}{}}00{cAl{}}{cAn{}}>>>`{{{Af{e}}B`gBb}dBd{{Bf{c}}{Bh{c}}Bj{Bl{c}}{Bn{c}}}C`}{{Cb{Af{e}}B`{Af{i}}B`kBb}dBd{{Bf{c}}{Bh{c}}{Bn{c}}{Bl{c}}Bj}Bd{{Bh{g}}Bj{Bl{g}}{Bn{g}}}{C`Cd}}","c":[],"p":[[1,"usize"],[1,"unit"],[6,"Error",0],[5,"Formatter",50],[8,"Result",50],[6,"ArithmeticError",51],[6,"ApiError",52],[6,"Error",53],[5,"Box",54],[10,"Any",55],[5,"Arc",56],[5,"Rc",57],[6,"Result",58],[5,"TypeId",55],[1,"str"],[6,"PruningMode",59],[8,"GossipMessageSink",0],[10,"Block",60],[10,"BlockchainEvents",61],[10,"HeaderBackend",62],[10,"AuxStore",63],[10,"ProofProvider",64],[10,"ProvideRuntimeApi",52],[10,"SyncOracle",65],[5,"DomainId",66],[10,"Send",67]],"b":[[23,"impl-From%3CArithmeticError%3E-for-Error"],[24,"impl-From%3CApiError%3E-for-Error"],[26,"impl-From%3CError%3E-for-Error"]]}],\
["domain_client_operator",{"doc":"Domain Operator","t":"FFIIIFFFFNNNOOOOOONNNNNNNNNNNNOONNNNNNOOOOOOOONNNNNNNNNNNNOOOOCCOOOOONNNNNNNOOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOHONOOOOOOOONNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BootstrapResult","DomainBlockImportNotification","DomainImportNotifications","ExecutionReceiptFor","OpaqueBundleFor","Operator","OperatorParams","OperatorSlotInfo","OperatorStreams","__clone_box","__clone_box","__clone_box","_phantom","acknowledgement_sender_stream","backend","block_fees","block_import","block_importing_notification_stream","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle_sender","client","clone","clone","clone","clone_into","clone_into","clone_into","code_executor","consensus_block_hash","consensus_block_hash","consensus_block_import_throttling_buffer_size","consensus_block_number","consensus_client","consensus_network_sync_oracle","consensus_offchain_tx_pool_factory","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain_block_extrinsic_root","domain_block_hash","domain_block_hash","domain_block_number","domain_bundle_producer","domain_bundle_proposer","domain_confirmation_depth","domain_created_at","domain_created_at","domain_id","domain_instance_data","drop","drop","drop","drop","drop","drop","eq","execution_trace","execution_trace_root","extrinsics","fetch_domain_bootstrap_info","final_state_root","fmt","fmt","fmt","fraud_proof_generator","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","import_notification_stream","imported_block_notification_stream","imported_block_notification_stream","inboxed_bundles","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","keystore","keystore","load_execution_receipt","maybe_operator_id","new","new_slot_notification_stream","operator_streams","parent_domain_block_receipt_hash","proof_of_time","sealed_header","skip_empty_bundle_production","skip_out_of_order_slot","slot","to_owned","to_owned","to_owned","transaction_pool","transaction_pool","transfers","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","DomainBundleProducer","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","new","produce_bundle","to_owned","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip","DomainBundleProposer","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","new","to_owned","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"domain_client_operator"],[234,"domain_client_operator::domain_bundle_producer"],[267,"domain_client_operator::domain_bundle_proposer"],[299,"dyn_clone::sealed"],[300,"sp_runtime::traits"],[301,"core::clone"],[302,"sp_domains"],[303,"core::error"],[304,"alloc::boxed"],[305,"core::result"],[306,"sp_blockchain::backend"],[307,"sp_api"],[308,"sc_client_api::client"],[309,"core::fmt"],[310,"core::fmt"],[311,"core::marker"],[312,"core::marker"],[313,"sc_client_api::backend"],[314,"sp_blockchain::header_metadata"],[315,"sc_transaction_pool_api"],[316,"sp_core::traits"],[317,"core::any"],[318,"alloc::sync"],[319,"alloc::rc"],[320,"core::option"],[321,"sp_blockchain::error"],[322,"sp_runtime::traits"],[323,"futures_core::stream"],[324,"sc_client_api::client"],[325,"subspace_core_primitives"],[326,"core::any"],[327,"sp_domains"],[328,"sp_keystore"],[329,"sp_domains"]],"d":["","","","","","Domain operator.","","Data required to produce bundles on executor node.","Notification streams from the consensus chain driving the …","","","","","The acknowledgement sender only used in test to ensure all …","","Compute and Domain storage fees are shared across …","","Notification about to be imported.","","","","","","","","","","","","","","","","","","","","","","The block hash corresponding to <code>consensus_block_number</code>.","","Pause the consensus block import when the consensus chain …","A pointer to the consensus block index which contains all …","","","","","","","","","","","","","","","","Extrinsic root field of the header of domain block …","The block hash corresponding to <code>domain_block_number</code>.","","The index of the current domain block that forms the basis …","","","","","The consensus chain block number when the domain first …","","","","","","","","","","List of storage roots collected during the domain block …","The Merkle root of the execution trace for the current …","The accompanying extrinsics.","","The final state root for the current domain block …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get system domain block import notification stream.","Consensus block import notification from the client.","","All the bundles that being included in the consensus block.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load the execution receipt for given consensus block hash.","","Create a new instance.","New slot arrives.","","The hash of the ER for the last domain block.","The PoT output for <code>slot</code>","Sealed bundle header.","","","Slot","","","","","","List of transfers from this Domain to other chains","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,3,5,6,63,63,43,39,43,63,3,63,43,11,5,6,3,63,43,11,5,6,43,43,3,5,6,3,5,6,43,39,6,63,39,43,43,43,3,63,43,11,5,6,3,63,43,11,5,6,39,39,6,39,0,0,43,43,11,43,11,3,63,43,11,5,6,5,39,39,64,0,39,11,5,6,3,3,63,43,11,5,6,3,3,63,63,43,43,11,11,5,5,6,6,3,3,63,63,43,43,11,11,5,5,6,6,3,63,11,39,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,43,0,43,3,63,43,39,5,64,43,43,5,3,5,6,3,43,39,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,3,63,43,11,5,6,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56],"f":"`````````{{cb}d{}}00``````{ce{}{}}00000000000``{{{f{cegikmo}}}{{f{cegikmo}}}hh{}{}{}{}{}}{jj}{{{l{ce}}}{{l{ce}}}{nh}{nh}}{{ce}d{}{}}00````````{A`c{}}00000000000```````````{A`d}00000{{jj}Ab}```{{eAd}{{Al{{Af{c}}{Aj{Ah}}}}}h{{An{c}}{B`{c}}{Bb{c}}}}`{{{Af{c}}Bd}Bf{Bhh}}{{jBd}Bf}{{{l{ce}}Bd}Bf{Bhh}{Bhh}}{{{f{ceikmgo}}}{{`{ceikgo}}}hh{{Bj{c}}BlBn}{{An{c}}{C`{c}}Cb{B`{c}}{Cd{c}}{Cf{cg}}}{{An{e}}{Cl{e}{{Ch{Cj}}}}{C`{e}}{B`{e}}{Cd{e}}{Bb{e}}BlBn}{{Db{}{{Cn{c}}{D`{}}}}}Dd}{cc{}}00000=0=00=0==0=00=0==00=0=0={{{f{ceikmgo}}}{{Df{ce}}}hh{{Bj{c}}BlBn}{{An{c}}{C`{c}}Cb{B`{c}}{Cd{c}}{Cf{cg}}}{{An{e}}{Cl{e}{{Ch{Cj}}}}{C`{e}}{B`{e}}{Cd{e}}{Bb{e}}BlBn}{{Db{}{{Cn{c}}{D`{}}}}}Dd}```{{}A`}00000??????{{{Aj{c}}}{{Aj{Dh}}}{}}00000{{{Dj{c}}}{{Dj{Dh}}}{}}00000{{{Dl{c}}}{{Dl{Dh}}}{}}00000{ce{}{}}00000000000000000``{c{{Eb{{E`{{Dn{eg}}}}}}}Cbhh}`{{{Aj{Ed}}{Ef{ceikmgoAaAcAeAg}}}{{Al{{f{ceikmgo}}Eh}}}hh{{Bj{c}}BlBn}{{An{c}}{C`{c}}Cb{B`{c}}{Cd{c}}{Cf{cg}}}{{An{e}}{Cl{e}{{Ch{Cj}}}}{C`{e}}{B`{e}}{Cd{e}}{Bb{e}}BlBn}{{Db{}{{Cn{c}}{D`{}}}}}Dd{{Fb{}{{Ej{{F`{{El{e}}{En{d}}}}}}}}Bl}{{Fb{}{{Ej{{Fd{e}}}}}}Bl}{{Fb{}{{Ej{{F`{FfFh}}}}}}Bl}{{Fb{}{{Ej{{En{d}}}}}}Bl}}````````222```{c{{Al{e}}}{}{}}00000000000000000{cFj{}}00000{cFl{}}00000555555555555555555`{{cb}d{}}66{{{Fn{cegik}}}{{Fn{cegik}}}hh{}{}{}}{{ce}d{}{}}{A`c{}}0{A`d}{cc{}};0;0?;>=<;;;{{Ad{Dj{e}}{Dj{i}}{G`{gicek}}{Dj{{Gf{{Gd{{El{c}}Gb}}}}}}GhAbAb}{{Fn{gciek}}}h{{An{c}}{B`{c}}}h{{An{g}}{C`{g}}Cb{B`{g}}}{{Db{}{{Cn{g}}{D`{}}}}}}{{{Fn{cegik}}Gjj}{{Eb{{E`{{Gl{{El{e}}Gb}}}}}}}hh{{An{c}}{C`{c}}Cb{B`{c}}}{{An{e}}{B`{e}}}{{Db{}{{Cn{c}}{D`{}}}}}}=:::98===`7=={{{G`{cegik}}}{{G`{cegik}}}h{}h{}{}}65543>33>{{}A`}?{{{Aj{c}}}{{Aj{Dh}}}{}}{{{Dj{c}}}{{Dj{Dh}}}{}}{{{Dl{c}}}{{Dl{Dh}}}{}}{ce{}{}}00{{Ad{Dj{e}}{Dj{i}}{Dj{k}}}{{G`{cegik}}}h{{An{c}}{C`{c}}Cb{B`{c}}}h{{An{g}}{B`{g}}}{{Db{}{{Cn{c}}{D`{}}}}}}1{c{{Al{e}}}{}{}}00{cFj{}}{cFl{}}444","c":[],"p":[[5,"Private",299],[1,"unit"],[5,"Operator",0],[10,"Block",300],[5,"OperatorSlotInfo",0],[5,"DomainBlockImportNotification",0],[10,"Clone",301],[1,"usize"],[1,"bool"],[5,"DomainId",302],[5,"BootstrapResult",0],[10,"Error",303],[5,"Box",304],[6,"Result",305],[10,"HeaderBackend",306],[10,"ProvideRuntimeApi",307],[10,"BlockchainEvents",308],[5,"Formatter",309],[8,"Result",309],[10,"Debug",309],[10,"Backend",310],[10,"Send",311],[10,"Sync",311],[10,"BlockBackend",308],[10,"AuxStore",310],[10,"ProofProvider",312],[10,"Finalizer",310],[17,"Error"],[6,"Error",313],[10,"HeaderMetadata",314],[17,"Block"],[17,"Hash"],[10,"TransactionPool",315],[10,"CodeExecutor",316],[8,"DomainImportNotifications",0],[10,"Any",317],[5,"Arc",318],[5,"Rc",319],[8,"ExecutionReceiptFor",0],[6,"Option",320],[8,"Result",313],[10,"SpawnEssentialNamed",316],[5,"OperatorParams",0],[6,"Error",321],[17,"Item"],[8,"NumberFor",300],[5,"Sender",322],[1,"tuple"],[10,"Stream",323],[5,"BlockImportNotification",308],[5,"Slot",324],[5,"PotOutput",325],[5,"TypeId",317],[1,"str"],[5,"DomainBundleProducer",234],[5,"DomainBundleProposer",267],[8,"Balance",326],[5,"Bundle",302],[5,"TracingUnboundedSender",327],[8,"KeystorePtr",328],[8,"OperatorId",302],[8,"OpaqueBundle",302],[5,"OperatorStreams",0],[8,"OpaqueBundleFor",0]],"b":[]}],\
["domain_eth_service",{"doc":"","t":"FFNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCONNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DefaultEthConfig","EthConfiguration","__clone_box","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","enable_dev_signer","eth_log_block_cache","eth_statuses_cache","execute_gas_limit_multiplier","fee_history_limit","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","group_id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_key","into_key","into_mut","into_mut","into_ref","into_ref","max_past_logs","provider","target_gas_price","to_owned","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","EthProvider","block_import","borrow","borrow_mut","deps","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","new","rpc_builder","rpc_id","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip","with_configuration"],"q":[[0,"domain_eth_service"],[76,"domain_eth_service::provider"],[109,"dyn_clone::sealed"],[110,"clap_builder::builder::command"],[111,"core::fmt"],[112,"core::fmt"],[113,"clap_builder"],[114,"core::result"],[115,"clap_builder::util::id"],[116,"core::option"],[117,"alloc::boxed"],[118,"core::any"],[119,"alloc::sync"],[120,"alloc::rc"],[121,"core::any"],[122,"sp_runtime::traits"],[123,"sp_api"],[124,"core::marker"],[125,"core::marker"],[126,"sc_service::error"],[127,"fp_rpc"],[128,"core::clone"],[129,"core::default"],[130,"primitive_types"],[131,"sc_client_api::backend"],[132,"sp_api"],[133,"sc_client_api::backend"],[134,"sp_api"],[135,"sp_blockchain::header_metadata"],[136,"sc_client_api::client"],[137,"sc_transaction_pool_api"],[138,"sc_transaction_pool::graph::pool"],[139,"sp_inherents::client_side"],[140,"std::path"],[141,"alloc::string"],[142,"core::iter::traits::iterator"],[143,"sc_rpc"],[144,"jsonrpsee_core::server::rpc_module"],[145,"core::error"],[146,"sp_core::traits"],[147,"jsonrpsee_core::traits"]],"d":["","The ethereum-compatibility configuration used to run a …","","","","","","","","","","","","","","","","","","","Size in bytes of the LRU cache for block data.","Size in bytes of the LRU cache for transactions statuses …","Maximum allowed gas limit will be …","Maximum fee history cache size.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Maximum number of logs in a query.","","The dynamic-fee pallet target gas price set by block author","","","","","","","","","","","","","","","","","","","","Ethereum specific providers.","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,57,4,57,4,4,4,4,4,57,4,57,4,57,4,4,4,4,4,4,4,57,4,4,4,57,57,4,4,57,57,4,4,4,57,4,57,4,57,4,57,4,57,4,57,4,57,4,57,4,4,0,4,4,57,4,57,4,57,4,57,4,57,4,57,4,57,4,4,4,57,4,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19],"f":"``{{cb}d{}}{ff}0{ce{}{}}000{hh}{{ce}d{}{}}{{}f}0{jc{}}000{jd}0`````{{hl}n}{cc{}}0{A`{{Ad{hAb}}}}018811881{{}{{Ah{Af}}}}{{}j}0::{{{Aj{c}}}{{Aj{Al}}}{}}0{{{An{c}}}{{An{Al}}}{}}0{{{B`{c}}}{{B`{Al}}}{}}0======```={c{{Ad{e}}}{}{}}00000{cBb{}}0{cBd{}}0{ce{}{}}000{{hA`}{{Ad{dAb}}}}011`{{{Bf{ce}}{An{{Bh{gi}}}}}k{}{}Bj{BlBnC`}{}}22{{{Bf{ck}}{Cb{eimogAa}}}{{Ad{AcCd}}}{CfChCjBnC`}{{Bj{}{{Cl{Cn}}}}}{{D`{e}}}{{Db{e}}{Dd{e}}{Df{eg}}{Dh{e}}{Dj{e}}{E`{e}{{Dl{Dn}}}}{Eb{e}}EdBnC`}{{Ef{ei}}}{{Ej{}{{Eh{e}}}}C`Bn}{{El{}{{Eh{e}}}}}{{En{ed}}BnCh}{}}{jc{}}0{jd}??5?5<5;:9555{{{Ah{F`}}c}{{Bf{eg}}}{{Ff{}{{Fb{Fd}}}}}{}{}}{{{Bf{ck}}mFho}{{Ad{{Fj{d}}{Aj{Fl}}}}}{CfChCjBnC`}{{Bj{}{{Cl{Cn}}}}}{{D`{e}}}{{Db{e}}{Dd{e}}{Df{eg}}{Dh{e}}{Dj{e}}{E`{e}{{Dl{Dn}}}}{Eb{e}}EdBnC`}{{Ef{ei}}}{}{FnCh}}{{{Bf{ck}}}{{Ah{{Aj{G`}}}}}{CfChCjBnC`}{{Bj{}{{Cl{Cn}}}}}{{D`{e}}}{{Db{e}}{Dd{e}}{Df{eg}}{Dh{e}}{Dj{e}}{E`{e}{{Dl{Dn}}}}{Eb{e}}EdBnC`}{{Ef{ei}}}};;;:9888{{{Ah{F`}}h}{{Bf{ce}}}{}{}}","c":[],"p":[[5,"Private",109],[1,"unit"],[5,"Command",110],[5,"EthConfiguration",0],[1,"usize"],[5,"Formatter",111],[8,"Result",111],[5,"ArgMatches",112],[8,"Error",113],[6,"Result",114],[5,"Id",115],[6,"Option",116],[5,"Box",117],[10,"Any",118],[5,"Arc",119],[5,"Rc",120],[5,"TypeId",118],[1,"str"],[5,"EthProvider",76],[8,"FullClient",121],[10,"Block",122],[10,"ConstructRuntimeApi",123],[10,"Send",124],[10,"Sync",124],[5,"FullDeps",125],[6,"Error",126],[10,"ConvertTransaction",127],[10,"Clone",128],[10,"Default",129],[17,"Hash"],[5,"H256",130],[10,"Backend",131],[10,"ProvideRuntimeApi",123],[10,"BlockchainEvents",132],[10,"StorageProvider",131],[10,"HeaderBackend",133],[10,"CallApiAt",123],[17,"Error"],[6,"Error",134],[10,"HeaderMetadata",135],[10,"BlockBackend",132],[10,"AuxStore",131],[10,"EthConfig",136],[17,"Block"],[10,"TransactionPool",137],[10,"ChainApi",138],[10,"CreateInherentDataProviders",139],[5,"Path",140],[17,"Item"],[5,"String",141],[10,"Iterator",142],[8,"SubscriptionTaskExecutor",143],[5,"RpcModule",144],[10,"Error",145],[10,"SpawnEssentialNamed",146],[10,"IdProvider",147],[5,"DefaultEthConfig",0]],"b":[]}],\
["domain_pallet_executive",{"doc":"Domain Executive Module","t":"GIIKRGFKRRIIFRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNPNNNCNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNCNOHFNNNNNNNNNNNNNNNNNNNNNNFKNNNNNNNNNNNNNNNMNNNNNNNN","n":["Call","CallOf","CheckedOf","Config","Currency","Event","Executive","ExtrinsicStorageFees","ExtrinsicStorageFees","LengthToFee","Module","OriginOf","Pallet","RuntimeEvent","WeightInfo","__clone_box","__clone_box","__clone_box","apply_extrinsic","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_inherent","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","create_inherent","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_block","execute_on_runtime_upgrade","extract_signer","finalize_block","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","init","initialize_block","integrity_test","intermediate_roots","into","into","into","into","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_feeless","is_inherent","is_inherent_required","module_name","name","name_hash","new_call_variant_set_code","offchain_worker","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","on_storage_fees_charged","set_code","set_code","size_hint","storage_info","storage_root","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_transaction","vzip","vzip","vzip","vzip","weights","whitelisted_storage_keys","code","set_code","IntermediateRoots","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","set_code","set_code","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"domain_pallet_executive"],[210,"domain_pallet_executive::Call"],[211,"domain_pallet_executive::dispatchables"],[212,"domain_pallet_executive::storage_types"],[235,"domain_pallet_executive::weights"],[261,"dyn_clone::sealed"],[262,"sp_runtime"],[263,"sp_weights::weight_v2"],[264,"alloc::vec"],[265,"sp_inherents"],[266,"core::result"],[267,"frame_support::traits::metadata"],[268,"core::option"],[269,"parity_scale_codec::error"],[270,"parity_scale_codec::codec"],[271,"frame_support::dispatch"],[272,"parity_scale_codec::codec"],[273,"frame_support::dispatch"],[274,"frame_system::pallet"],[275,"frame_support::traits::misc"],[276,"core::fmt"],[277,"core::fmt"],[278,"core::any"],[279,"scale_info::ty"],[280,"sp_runtime::transaction_validity"],[281,"sp_runtime::transaction_validity"]],"d":["Contains a variant per dispatchable extrinsic that this …","","","Configuration trait of this pallet.","","The <code>Event</code> enum of this pallet","Same semantics with <code>frame_executive::Executive</code>.","Trait trait used to charge the extrinsic storage.","","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","The <code>Pallet</code> struct, the main type that implements traits …","","","","","","Wrapped <code>frame_executive::Executive::apply_extrinsic</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","Wrapped <code>frame_executive::Executive::execute_block</code>.","Wrapped …","Extracts signer from given extrinsic and its dispatch info.","Wrapped <code>frame_executive::Executive::finalize_block</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Wrapped <code>frame_executive::Executive::initialize_block</code>.","","An auto-generated getter for <code>IntermediateRoots</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>set_code</code>.","Wrapped <code>frame_executive::Executive::offchain_worker</code>.","","","","","","","","","Hook to note operator rewards for charged storage fees.","Sets new runtime code after doing necessary checks. Same …","See <code>Pallet::set_code</code>.","","","Returns the latest storage root.","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapped <code>frame_executive::Executive::validate_transaction</code>.","","","","","Autogenerated weights for domain_pallet_executive","","","Sets new runtime code after doing necessary checks. Same …","Intermediate storage roots collected during the block …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Weights for domain_pallet_executive using the Substrate …","Weight functions needed for domain_pallet_executive.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","Storage: <code>System::Digest</code> (r:1 w:1) Proof: <code>System::Digest</code> (…","","","","","","",""],"i":[0,0,0,0,12,0,0,0,12,12,0,0,0,12,12,10,11,13,44,10,11,13,11,13,11,13,44,10,11,13,44,10,11,13,10,10,11,13,10,11,13,10,10,10,10,11,13,11,13,11,13,11,13,44,10,11,13,44,10,11,13,13,0,44,10,11,13,13,10,11,13,10,10,10,11,11,11,13,13,13,44,44,44,45,44,10,11,13,44,10,11,13,44,44,10,10,11,11,13,13,44,44,10,10,11,11,13,13,13,13,13,13,13,11,13,10,10,44,10,11,13,44,10,10,44,10,11,13,44,10,11,13,44,10,11,13,44,10,11,13,13,10,10,10,10,10,13,44,10,10,10,10,10,10,10,10,45,10,13,13,10,44,0,11,13,10,11,13,44,10,11,13,44,10,11,13,44,10,11,13,0,0,0,11,13,11,13,11,13,44,10,11,13,11,13,44,10,11,13,44,10,11,13,44,44,10,11,13,0,10,46,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48],"f":"```````````````{{cb}d{}}00{{}f}{{}h}{c{{l{j}}}{}}0{c{{n{j}}}{}}011{ce{}{}}0000000{{cA`}{{Ab{de}}}{}{}}{{{Ad{c}}}{{Ad{c}}}{}}{{{Af{c}}}{{Af{c}}}Ah}{{{Aj{c}}}{{Aj{c}}}Ah}{{ce}d{}{}}00{{}Al}{{}An}{A`{{B`{c}}}{}}{{}c{}}{c{{Ab{{Af{e}}Bb}}}BdAh}{c{{Ab{{Aj{e}}Bb}}}BdAh}{{{Bf{j}}}{{Ab{cBb}}}{}}0{{Bh{Bf{j}}}{{Ab{cBb}}}{}}0{{Bhc}{{Ab{eBb}}}Bd{}}0{Alc{}}0000000{{{Aj{c}}e}BjAh{}}`{Ald}000{{{Aj{c}}e}dAh{BlBn}}{{{Ad{c}}{Ad{c}}}C`{}}{{{Af{c}}{Af{c}}}C`Ah}{{{Aj{c}}{Aj{c}}}C`Ah}{{ce}C`{}{}}00000000{{}d}0{{}h}{{}{{Cd{B`Cb}}}}{{}{{Cf{c}}}{AhChCj}}{{{Ad{c}}Cl}Cn{}}{{{Af{c}}Cl}CnAh}{{{Aj{c}}Cl}CnAh}{cc{}}000{ce{}{}}110100110011001{{{Aj{c}}}jAh}{{}{{Bf{j}}}}{{{Aj{c}}}D`Ah}{{}{{Bf{D`}}}}{{{Aj{c}}}CbAh}{c{{n{j}}}{}}0{{}Al}{{}{{n{Db}}}}1111{{{Cf{c}}}d{AhChCj}}{{}d}{{}{{n{{l{j}}}}}};;;;;;;;;;;;;;;;{{{Aj{c}}e}C`Ah{}}{cC`{}}{A`{{Ab{{B`{c}}c}}}{}}{{}D`}0{{}{{l{j}}}}{{{n{j}}}{{Aj{c}}}Ah}8{{{Dd{c}}}dAh}{{}Df}19{{{Dd{c}}h}hAh}{{{Dd{c}}}hAh}0{{}h}{Bhd}{{{Dh{c}}{n{j}}}DjAh}`{{{Aj{c}}}AlAh}{{}{{n{Dl}}}}{{}{{n{j}}}}`{{c{Bf{j}}}{{n{j}}}{}}0{ce{}{}}00{c{{Ab{e}}}{}{}}00000000000```{c{{l{j}}}{}}000{c{{n{j}}}{}}0{cDn{}}000{{}E`}055555555{EbEd}6666`{{}{{n{Ef}}}}`{{{n{j}}}d}`88{Alc{}}0{Ald}{cc{}};0;0{{}Al}<<<<;;;8<<<``<<3321<1<10<<<<{{}h}0<<<9===","c":[10],"p":[[5,"Private",261],[1,"unit"],[8,"ApplyExtrinsicResult",262],[5,"Weight",263],[1,"u8"],[1,"array"],[5,"Vec",264],[5,"InherentData",265],[6,"Result",266],[5,"Pallet",0],[6,"Event",0],[10,"Config",0],[6,"Call",0],[1,"usize"],[5,"CrateVersion",267],[6,"Option",268],[5,"Error",269],[10,"Input",270],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",271],[10,"Output",270],[10,"Sized",272],[1,"bool"],[5,"DispatchInfo",271],[1,"tuple"],[8,"HeaderFor",273],[10,"Config",274],[10,"EnsureInherentsAreFirst",275],[5,"Formatter",276],[8,"Result",276],[1,"str"],[5,"PalletInfoData",267],[8,"BlockNumberFor",273],[5,"StorageVersion",267],[8,"OriginFor",273],[8,"DispatchResult",271],[5,"StorageInfo",277],[5,"TypeId",278],[5,"Type",279],[6,"TransactionSource",280],[8,"TransactionValidity",280],[5,"TrackedStorageKey",281],[5,"Executive",0],[10,"ExtrinsicStorageFees",0],[15,"set_code",210],[5,"IntermediateRoots",212],[5,"SubstrateWeight",235],[10,"WeightInfo",235]],"b":[[80,"impl-ExecuteBlock%3C%3CExecutiveConfig+as+Config%3E::Block%3E-for-Executive%3CExecutiveConfig,+Context,+UnsignedValidator,+AllPalletsWithSystem,+COnRuntimeUpgrade%3E"],[81,"impl-Executive%3CExecutiveConfig,+Context,+UnsignedValidator,+AllPalletsWithSystem,+COnRuntimeUpgrade%3E"],[153,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[154,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["domain_runtime_primitives",{"doc":"Common primitives for subspace domain runtime.","t":"IFPFPFIPPIISFFISPPIPPSSSGIPPSIKPKNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCNNNNMNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIIPIPFNNNNNNNNNNNNNNNNNONNNNNNNOONNNNNNNNONNNNNNNOONNONNNNNNNNNNNNNN","n":["AccountId","AccountId20","AccountId20","AccountId20Converter","AccountId32","AccountIdConverter","Address","Address20","Address32","Balance","BlockNumber","CHECK_EXTRINSICS_AND_DO_PRE_DISPATCH_METHOD_NAME","CheckExtrinsicsValidityError","DecodeExtrinsicError","EVMChainId","EXISTENTIAL_DEPOSIT","Ecdsa","Ed25519","Hash","Id","Index","MAXIMUM_BLOCK_WEIGHT","MAXIMUM_MANDATORY_BLOCK_LENGTH","MAXIMUM_OPERATIONAL_AND_NORMAL_BLOCK_LENGTH","MultiAccountId","Nonce","Raw","Raw","SLOT_DURATION","Signature","Signer","Sr25519","TryConvertBack","__clone_box","__clone_box","__clone_box","__clone_box","as_byte_slice","as_mut","as_mut","as_mut_byte_slice","as_mut_slice_of","as_ref","as_ref","as_slice_of","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","block_weights","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","convert","convert","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","defensive_max","defensive_max","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","encode","encode","encode_hex","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsic_index","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","identity","identity","identity","identity","init","init","init","init","init","init","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","max_encoded_len","maximum_block_length","opaque","partial_cmp","partial_cmp","serialize","serialize","signer","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_string","transaction_validity_error","try_convert_back","try_convert_back","try_convert_back","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","AccountId","Block","BlockId","Hash","Header","Number","UncheckedExtrinsic","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","digest","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","extrinsics","extrinsics_root","fmt","from","from","from_bytes","from_mut","from_mut","from_ref","from_ref","header","identity","init","into","into_key","into_mut","into_ref","is_clear","number","parent_hash","serialize","size_hint","state_root","to_keyed_vec","to_owned","try_from","try_into","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip"],"q":[[0,"domain_runtime_primitives"],[315,"domain_runtime_primitives::opaque"],[384,"dyn_clone::sealed"],[385,"byte_slice_cast"],[386,"core::result"],[387,"byte_slice_cast"],[388,"frame_system::limits"],[389,"core::cmp"],[390,"parity_scale_codec::error"],[391,"parity_scale_codec::codec"],[392,"serde::de"],[393,"core::iter::traits::collect"],[394,"parity_scale_codec::codec"],[395,"core::fmt"],[396,"core::fmt"],[397,"primitive_types"],[398,"sp_core::ecdsa"],[399,"frame_system::limits"],[400,"serde::ser"],[401,"alloc::string"],[402,"core::any"],[403,"scale_info::ty"],[404,"core::ops::function"],[405,"sp_runtime::generic::unchecked_extrinsic"],[406,"parity_scale_codec::codec"]],"d":["Some way of identifying an account on the chain. We …","A fully Ethereum-compatible <code>AccountId</code>. Conforms to H160 …","20 byte account Id. Ex: Ethereum","An AccountId20 to MultiAccount converter.","32 byte account Id.","An AccountId32 to MultiAccount converter.","The address format for describing accounts.","Its a 20 byte representation.","It’s a 32 byte representation.","Balance of an account.","An index to a block.","fullu qualified method name of …","","","The EVM chain Id type","The existential deposit. Same with the one on primary …","An ECDSA/SECP256k1 signature.","An Ed25519 signature.","A hash of some data used by the chain.","It’s an account ID (pubkey).","It’s an account index.","Maximum total block weight.","Maximum block length for mandatory dispatch.","Maximum block length for operational and normal dispatches.","MultiAccountId used by all the domains to describe their …","Index of a transaction in the chain.","It’s some arbitrary raw bytes.","Some raw bytes","Slot duration that is same as consensus chain runtime.","Alias to 512-bit hash when used in the context of a …","Extracts the signer from an unchecked extrinsic.","An Sr25519 signature.","Extensible conversion trait. Generic over both source and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Maximum block length for all dispatches.","Opaque types. These are used by the CLI to instantiate …","","","","","Returns the AccountId of signer.","","","","","","","","","","","","","","","Make conversion back.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opaque account identifier type.","Opaque block type.","Opaque block identifier type.","Identify by block header hash.","Opaque block header type.","Identify by block number.","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","A chain-specific digest of data useful for light clients …","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","","Returns the argument unchanged.","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","The block header.","","","Calls <code>U::from(self)</code>.","","","","","The block number.","The parent hash.","","","The state trie merkle root","","","","","","","","","","","","","",""],"i":[0,0,12,0,12,0,0,47,47,0,0,0,0,0,0,0,48,48,0,47,47,0,0,0,0,0,47,12,0,0,0,48,0,12,5,13,14,5,5,5,5,5,5,5,5,12,5,13,14,12,5,13,14,12,5,13,14,0,49,50,12,5,13,14,49,50,12,5,13,14,5,12,5,13,14,12,5,13,14,12,5,49,50,12,5,13,14,12,5,13,14,12,5,13,14,12,5,13,14,5,12,5,12,5,12,5,12,5,49,50,12,5,13,14,49,50,12,5,13,14,12,5,49,50,12,5,13,14,5,14,5,5,12,5,13,14,12,5,13,14,12,12,12,5,5,5,13,13,13,14,14,14,13,12,5,5,13,14,49,50,12,5,5,5,5,5,5,13,14,49,49,50,50,12,12,5,5,13,13,14,14,49,49,50,50,12,12,5,5,13,13,14,14,5,12,5,13,14,49,50,12,5,13,14,49,50,12,5,13,14,49,50,12,5,13,14,49,50,12,5,13,14,49,50,12,5,13,14,5,5,0,0,12,5,12,5,37,12,5,13,14,12,5,13,14,12,5,13,14,5,13,51,49,50,49,50,12,5,5,13,14,49,50,12,5,13,14,49,50,12,5,13,14,12,5,13,14,12,5,13,14,12,5,13,14,49,50,12,5,13,14,12,5,13,14,49,50,12,5,13,14,49,50,12,5,13,14,5,14,49,50,12,5,13,14,0,0,0,52,0,52,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,53,43,43,43,43,43,43,43,54,53,43,43,43,43,43,43,43,43,54,43,43,43,43,43,43,43,53,53,43,43,53,43,43,43,43,43,43,43,43,43,43,43,43,43,43],"f":"`````````````````````````````````{{cb}d{}}000{c{{h{f}}}{}}{j{{h{f}}}}{j{{l{f}}}}2{c{{A`{{h{e}}n}}}{}Ab}120{c{{l{f}}}{}}000{c{{Ad{f}}}{}}0001111{{}Af}{ce{}{}}00000000000{{}c{}}{AhAh}{jj}{AjAj}{AlAl}{{ce}d{}{}}000{{AhAh}An}{{jj}An}{B`Ah}{jAh}{c{{A`{AhBb}}}Bd}{c{{A`{jBb}}}Bd}{c{{A`{AjBb}}}Bd}{c{{A`{AlBb}}}Bd}{{{h{f}}}{{A`{cBb}}}{}}000{{Bf{h{f}}}{{A`{cBb}}}{}}000{{Bfc}{{A`{eBb}}}Bd{}}000{{}j}{{ce}e{}{}}0000000{Bhc{}}00000000000{c{{A`{Ah}}}Bj}{c{{A`{j}}}Bj}{Bhd}00000{j{{Ad{f}}}}{Al{{Ad{f}}}}{ce{}{{Bn{Bl}}}}0{{Ahc}d{C`Cb}}{{jc}d{C`Cb}}{{Ajc}d{C`Cb}}{{Alc}d{C`Cb}}{{AhAh}Cd}{{jj}Cd}{{AjAj}Cd}{{AlAl}Cd}{{ce}Cd{}{}}00000000000`{{AhCf}Ch}{{jCf}{{A`{dCj}}}}0{{AjCf}Ch}{{AlCf}Ch}{cc{}}000{Clj}{Cnj}{{{l{f}}}j}{D`j}1444{ce{}{}}0550505050500550505005{Db{{A`{j}}}}{c{{Ad{f}}}{}}000{{}Bh}00000333333333333333333333333{cCd{}}1{{}Dd}`{{AhAh}{{Df{An}}}}{{jj}{{Df{An}}}}{{Ahc}A`Dh}{{jc}A`Dh}{{Djc}{{Df{e}}}{}{}}{AhBh}{jBh}{AjBh}{AlBh}{{c{h{f}}}{{Ad{f}}}{}}000????{cDl{}}`{c{{Df{e}}}{}{}}{Ah{{Df{B`}}}}{Ah{{Df{j}}}}{c{{A`{e}}}{}{}}000{{{h{f}}}{{A`{jd}}}}11111111111111{c{{l{f}}}{}}0000000{c{{Ad{f}}}{}}000{cDn{}}00000{{}E`}000{ce{}{}}00000000000{{je}c{}{{Ed{{h{f}}}{{Eb{c}}}}}}{{Ale}c{}{{Ed{{h{f}}}{{Eb{c}}}}}}222222```````{{cb}d{}}76733{{}c{}}{EfEf}{{ce}d{}{}}{c{{A`{EfBb}}}Bd}{{{h{f}}}{{A`{cBb}}}{}}{{Bf{h{f}}}{{A`{cBb}}}{}}{{Bfc}{{A`{eBb}}}Bd{}}{{}Ef}{Bhc{}}0{c{{A`{Ef}}}Bj}`{Bhd}{Ef{{Ad{f}}}}{{Efc}d{C`Cb}}{{EfEf}Cd}{{ce}Cd{}{}}00``{{EfCf}{{A`{dCj}}}}{{{Eh{cegi}}}EfEjEjEjEl}{cc{}}{{{h{f}}}{{A`{EfBb}}}}1{ce{}{}}02`{c{{Ad{f}}}{}}{{}Bh}2222{cCd{}}``{{Efc}A`Dh}{EfBh}`{{c{h{f}}}{{Ad{f}}}{}}6{c{{A`{e}}}{}{}}00{c{{l{f}}}{}}07{cDn{}}{{}E`}::{{Efe}c{}{{Ed{{h{f}}}{{Eb{c}}}}}};","c":[],"p":[[5,"Private",384],[1,"unit"],[1,"u8"],[1,"slice"],[5,"AccountId20",0],[1,"array"],[6,"Error",385],[6,"Result",386],[10,"FromByteSlice",385],[5,"Vec",387],[5,"BlockWeights",388],[6,"MultiAccountId",0],[5,"CheckExtrinsicsValidityError",0],[5,"DecodeExtrinsicError",0],[6,"Ordering",389],[8,"AccountId",0],[5,"Error",390],[10,"Input",391],[1,"u32"],[1,"usize"],[10,"Deserializer",392],[1,"char"],[10,"FromIterator",393],[10,"Output",391],[10,"Sized",394],[1,"bool"],[5,"Formatter",395],[8,"Result",395],[5,"Error",395],[5,"AccountId32",396],[5,"H160",397],[5,"Public",398],[1,"str"],[5,"BlockLength",388],[6,"Option",399],[10,"Serializer",400],[10,"Signer",0],[5,"String",401],[5,"TypeId",402],[5,"Type",403],[17,"Output"],[10,"FnOnce",404],[5,"UncheckedExtrinsic",315],[5,"UncheckedExtrinsic",405],[10,"Encode",391],[10,"SignedExtension",406],[8,"Address",0],[8,"Signature",0],[5,"AccountIdConverter",0],[5,"AccountId20Converter",0],[10,"TryConvertBack",0],[8,"BlockId",315],[8,"Header",315],[8,"Block",315]],"b":[[38,"impl-AsMut%3C%5Bu8%5D%3E-for-AccountId20"],[39,"impl-AsMut%3C%5Bu8;+20%5D%3E-for-AccountId20"],[42,"impl-AsRef%3C%5Bu8;+20%5D%3E-for-AccountId20"],[43,"impl-AsRef%3C%5Bu8%5D%3E-for-AccountId20"],[154,"impl-Display-for-AccountId20"],[155,"impl-Debug-for-AccountId20"],[162,"impl-From%3CAccountId32%3E-for-AccountId20"],[163,"impl-From%3CH160%3E-for-AccountId20"],[164,"impl-From%3C%5Bu8;+20%5D%3E-for-AccountId20"],[165,"impl-From%3CPublic%3E-for-AccountId20"],[166,"impl-From%3C%5Bu8;+32%5D%3E-for-AccountId20"]]}],\
["domain_service",{"doc":"Service and ServiceFactory implementation. Specialized …","t":"IFIIIFONNNNHOOCOOOOONNNNOOOONNNNNNNNNNNNONNNNNNNNNNNNNNNOOOOHOOOCCOOOOOOONNNNNNNNNNNNNNNNSSFFFOOOONNNNNNOOONNNNNNONNNNNNOONNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNRKFRKNMNNNNNNMNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNFNONNOONNHOOONNNNNNNNONNNNNNNNOOOOOONNNNNNNNN","n":["DomainOperator","DomainParams","FullBackend","FullClient","FullPool","NewFull","backend","borrow","borrow","borrow_mut","borrow_mut","build_network","client","code_executor","config","consensus_client","consensus_network","consensus_network_sync_oracle","consensus_offchain_tx_pool_factory","consensus_state_pruning","deref","deref","deref_mut","deref_mut","domain_config","domain_created_at","domain_id","domain_message_receiver","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","gossip_message_sink","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_key","into_key","into_mut","into_mut","into_ref","into_ref","keystore","maybe_operator_id","network_service","network_starter","new_full","operator","operator_streams","provider","providers","rpc","rpc_handlers","skip_empty_bundle_production","skip_out_of_order_slot","sync_service","task_manager","transaction_pool","transaction_pool","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","RPC_DEFAULT_MAX_REQUEST_SIZE_MB","RPC_DEFAULT_MAX_RESPONSE_SIZE_MB","SubstrateConfiguration","SubstrateNetworkConfiguration","SubstrateRpcConfiguration","allow_private_ips","base_path","blocks_pruning","bootstrap_nodes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_spec","cors","default_peers_set","deref","deref","deref","deref_mut","deref_mut","deref_mut","disable_batch_requests","drop","drop","drop","fmt","fmt","fmt","force_authoring","force_synced","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","impl_name","impl_version","informant_output_format","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","keystore","listen_on","listen_on","max_batch_request_len","max_connections","max_subscriptions_per_connection","message_buffer_capacity_per_connection","methods","network","node_key","node_name","operator","prometheus_listen_on","public_addresses","rate_limit","rpc_options","state_pruning","telemetry_endpoints","transaction_pool","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","BI","BlockImportProvider","DefaultProvider","Deps","RpcProvider","__clone_box","block_import","block_import","borrow","borrow_mut","clone","clone_into","default","deps","deps","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","rpc_builder","rpc_builder","rpc_id","rpc_id","to_owned","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip","FullDeps","__clone_box","backend","borrow","borrow_mut","chain_spec","client","clone","clone_into","create_full","create_inherent_data_provider","database_source","deny_unsafe","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","graph","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","is_authority","network","pool","prometheus_registry","sync","task_spawner","to_owned","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"domain_service"],[89,"domain_service::config"],[207,"domain_service::providers"],[251,"domain_service::rpc"],[296,"sc_service::builder"],[297,"sc_network::service"],[298,"alloc::sync"],[299,"sc_rpc::system"],[300,"sc_utils::mpsc"],[301,"sc_network_transactions"],[302,"sc_service::builder"],[303,"sc_service::error"],[304,"core::result"],[305,"sp_runtime::traits"],[306,"sc_transaction_pool_api"],[307,"sc_consensus::import_queue"],[308,"sp_api"],[309,"sp_blockchain::error"],[310,"sp_blockchain::header_metadata"],[311,"sp_consensus::block_validation"],[312,"sc_client_api::client"],[313,"sp_runtime::traits"],[314,"sp_blockchain::backend"],[315,"sc_client_api::client"],[316,"core::any"],[317,"alloc::rc"],[318,"domain_runtime_primitives::opaque"],[319,"sc_domains"],[320,"sc_service::error"],[321,"core::marker"],[322,"core::marker"],[323,"futures_core::stream"],[324,"sc_client_api::client"],[325,"subspace_core_primitives"],[326,"sp_api"],[327,"parity_scale_codec::codec"],[328,"parity_scale_codec::codec"],[329,"core::fmt"],[330,"core::fmt"],[331,"sc_service::builder"],[332,"sc_network::service::traits"],[333,"core::any"],[334,"sp_consensus::error"],[335,"sc_consensus::block_import"],[336,"sc_client_api::backend"],[337,"sc_rpc"],[338,"jsonrpsee_core::server::rpc_module"],[339,"core::error"],[340,"sp_core::traits"],[341,"jsonrpsee_core::traits"],[342,"core::option"]],"d":["","","","Domain full client.","","Domain full node along with some other components.","Backend.","","","","","Build the network service, the network status sinks and an …","Full client.","Code executor.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Network service.","Network starter.","Builds service for a domain full node.","Operator.","","","","A collection of node-specific RPC methods. Substrate …","RPCHandlers to make RPC queries.","","","Sync service.","Task manager.","","Transaction pool","","","","","","","","","","","","","","","","","The default max request size in MB, copied from Substrate","The default max response size in MB, copied from Substrate","Simplified Substrate configuration that can be converted …","Simplified network used in Substrate","Simplified RPC configuration used in Substrate","Determines whether we allow keeping non-global (private, …","Base path for node data","Number of blocks to keep in the db.","List of initial node addresses","","","","","","","Chain specification","CORS settings for HTTP &amp; WS servers. <code>None</code> if all origins …","Configuration for the default set of nodes used for block …","","","","","","","Disable RPC batch requests","","","","","","","Enable authoring even when offline","Parameter that allows node to forcefully assume it is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Implementation name","Implementation version","Configuration of the output format that the informant uses.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Keystore configuration","IP and port (TCP) on which to listen for RPC requests","Multiaddresses to listen for incoming connections.","Limit the max length per RPC batch request","Maximum number of connections for JSON-RPC server","Maximum allowed subscriptions per rpc connection","The number of messages the RPC server is allowed to keep …","RPC methods to expose (by default only a safe subset or …","Network configuration","The node key configuration, which determines the node’s …","Name of the node. Sent over the wire for debugging …","Operator","IP and port (TCP) to start Prometheus exporter on","Multiaddresses to advertise. Detected automatically if …","RPC rate limiting (calls/minute) for each connection","RPC configuration","State pruning settings","Telemetry service URL. <code>None</code> if disabled.","Extrinsic pool configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides adding custom ID to the RPC module.","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Full RPC dependencies.","","The chain backend.","","","A copy of the chain spec.","The client instance to use.","","","Instantiate all RPC extensions.","Create inherent data provider","Database source","Whether to deny unsafe calls","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Graph pool instance.","","Calls <code>U::from(self)</code>.","","","","","","","Is node running as authority.","Network service","Transaction pool instance.","Prometheus registry","Chain syncing service","Task Spawner.","","","","","","","","",""],"i":[0,0,0,0,0,0,36,36,32,36,32,0,36,36,0,32,32,32,32,32,36,32,36,32,32,32,32,32,36,32,36,32,36,36,32,32,36,36,32,32,32,36,32,36,32,36,32,32,36,32,36,32,36,32,36,32,86,32,36,36,0,36,32,32,0,0,36,32,32,36,36,86,36,36,32,36,32,36,32,36,32,36,32,36,32,36,32,36,32,0,0,0,0,0,67,68,68,67,64,67,68,64,67,68,68,64,67,64,67,68,64,67,68,64,64,67,68,64,67,68,68,67,64,67,68,64,64,67,67,68,68,64,64,67,67,68,68,68,68,68,64,67,68,64,67,68,64,67,68,64,67,68,64,67,68,64,67,68,64,67,68,64,67,68,68,64,67,64,64,64,64,64,68,67,67,68,68,67,64,68,68,68,68,64,67,68,64,67,68,64,67,68,64,67,68,64,67,68,64,67,68,64,67,68,64,67,68,60,0,0,59,0,73,60,73,73,73,73,73,73,59,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,59,73,59,73,73,73,73,73,73,73,73,73,73,0,75,75,75,75,75,75,75,75,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75],"f":"```````{ce{}{}}000{{{b{cegi}}}{{Af{{Ab{{f{{d{c}}}}{j{{h{c}}}}ln{f{{A`{c}}}}}}Ad}}}Ah{{An{}{{Aj{c}}{Al{}}}}}{{B`{c}}}{{Bb{c}}{Bh{c}{{Bd{Bf}}}}{Bj{c}}{Bl{c}}{Bn{c}{{Bd{Bf}}}}{C`{c}}{Cb{c}}{Cd{c}}}}````````{Cfc{}}000````{CfCh}0{cc{}}040044040`{{}Cf}055{{{Cj{c}}}{{Cj{Cl}}}{}}0{{{f{c}}}{{f{Cl}}}{}}{{{Cn{c}}}{{Cn{Cl}}}{}}0888888````{{{D`{cegikmAcAe}}}{{Dj{{Dh{{f{{Dd{Dbo}}}}DfceoAa}}}}}Ah{{Cb{c}}{Bh{c}{{Bd{Bf}}}}{Bl{c}}{C`{c}}{Bb{c}}{Cd{c}}DlDnE`}{{Eh{}{{Eb{{Ab{{Ed{c}}{Ef{Ch}}}}}}}}Dn}{{Eh{}{{Eb{{Ej{c}}}}}}Dn}{{Eh{}{{Eb{{Ab{ElEn}}}}}}Dn}{{Eh{}{{Eb{{Ef{Ch}}}}}}Dn}{{F`{DbDd}}DnE`}{FbFdFfFhFjFlFnE`Dn}{{Gf{Db{Dd{Dbo}}{G`{o}}{`{Db{Dd{Dbo}}}}{Gb{Db}}Aa{Gd{ec}}}}{Gh{Db{Dd{Dbo}}}}}{GjDnE`}}````````````{c{{Af{e}}}{}{}}00000{cGl{}}0{cGn{}}0<<<<<<`````````<<<<<<```::::::`999{{H`Hb}Hd}{{HfHb}Hd}{{HhHb}Hd}``;;;;??;;?;??;?;```:::???999888777?????????```````````````````555555555444333?????????`````{{cHj}Ch{}}{{{Gh{}{{Hl{c}}}}{f{g}}}c{{I`{e}{{Bd{Hn}}}}DnE`}Ah{{Bb{e}}}}{{Ib{f{{Dd{ce}}}}}gAh{F`DnE`}{}}{ce{}{}}0{IbIb}{{ce}Ch{}{}}{{}Ib}{{{Gf{}{{Id{c}}}}{If{eikmgo}}}{{Af{cAd}}}FhAh{{Ih{e}}}{{Bb{e}}{Ij{eg}}}{{Il{}{{Aj{e}}}}E`Dn}{{In{}{{Aj{e}}}}}{}}{{Ib{If{cgikem}}}{{Af{oAd}}}Ah{{Ih{c}}}{{Bb{c}}{Bl{c}}{Cb{c}}Dl{Bh{c}{{Bd{Bf}}}}{Ij{ce}}DnE`}{{Il{}{{Aj{c}}}}E`Dn}{{In{}{{Aj{c}}}}}Fh{}}{Cfc{}}0{CfCh}{cc{}}0880{{}Cf}9{{{Cj{c}}}{{Cj{Cl}}}{}}{{{f{c}}}{{f{Cl}}}{}}{{{Cn{c}}}{{Cn{Cl}}}{}}<<<{{{Gf{}{{Id{c}}}}cJ`e}{{Af{{Jb{Ch}}{Cj{Jd}}}}}Fh{JfFh}}{{IbcJ`e}{{Af{{Jb{Ch}}{Cj{Jd}}}}}{}{JfFh}}{{{Gf{}{{Id{c}}}}}{{Jj{{Cj{Jh}}}}}Fh}{Ib{{Jj{{Cj{Jh}}}}}}{ce{}{}}{c{{Af{e}}}{}{}}00{cGl{}}{cGn{}}333`{{cHj}Ch{}}`44``{{{If{cegikm}}}{{If{cegikm}}}Ah{}{}In{}Fh}{{ce}Ch{}{}}{{{If{cegikm}}}{{Af{{Jb{Ch}}{Cj{Jd}}}}}Ah{{Bb{c}}{Bl{c}}{Cb{c}}Dl{Bh{c}{{Bd{Bf}}}}DnE`}{IlE`Dn}In{}{}}```{Cfc{}}0{CfCh}{cc{}}:00:`{{}Cf};{{{Cj{c}}}{{Cj{Cl}}}{}}{{{f{c}}}{{f{Cl}}}{}}{{{Cn{c}}}{{Cn{Cl}}}{}}>>>``````>===<;>>>","c":[],"p":[[5,"BuildNetworkParams",296],[5,"NetworkService",297],[5,"Arc",298],[6,"Request",299],[5,"TracingUnboundedSender",300],[5,"TransactionsHandlerController",301],[5,"NetworkStarter",296],[5,"SyncingService",302],[1,"tuple"],[6,"Error",303],[6,"Result",304],[10,"Block",305],[17,"Block"],[17,"Hash"],[10,"MaintainedTransactionPool",306],[10,"ImportQueue",307],[10,"ProvideRuntimeApi",308],[17,"Error"],[6,"Error",309],[10,"HeaderMetadata",310],[10,"Chain",311],[10,"BlockBackend",312],[10,"BlockIdTo",305],[10,"ProofProvider",313],[10,"HeaderBackend",314],[10,"BlockchainEvents",312],[1,"usize"],[1,"unit"],[5,"Box",315],[10,"Any",316],[5,"Rc",317],[5,"DomainParams",0],[8,"Block",318],[8,"FullClient",0],[8,"RuntimeExecutor",319],[5,"NewFull",0],[8,"Result",303],[10,"AuxStore",320],[10,"Send",321],[10,"Sync",321],[17,"Item"],[8,"NumberFor",305],[5,"Sender",322],[10,"Stream",323],[5,"BlockImportNotification",312],[5,"Slot",324],[5,"PotOutput",325],[10,"ConstructRuntimeApi",308],[10,"DeserializeOwned",326],[10,"Encode",327],[10,"Decode",327],[10,"Clone",328],[10,"Debug",329],[10,"Display",329],[10,"FromStr",330],[8,"FullPool",0],[8,"TFullBackend",296],[5,"CreateInherentDataProvider",331],[10,"RpcProvider",207],[10,"BlockImportProvider",207],[10,"NetworkPeers",332],[5,"TypeId",316],[1,"str"],[5,"SubstrateRpcConfiguration",89],[5,"Formatter",329],[8,"Result",329],[5,"SubstrateNetworkConfiguration",89],[5,"SubstrateConfiguration",89],[5,"Private",333],[17,"BI"],[6,"Error",334],[10,"BlockImport",335],[5,"DefaultProvider",207],[17,"Deps"],[5,"FullDeps",251],[10,"Backend",320],[10,"StorageProvider",320],[10,"TransactionPool",306],[10,"ChainApi",336],[8,"SubscriptionTaskExecutor",337],[5,"RpcModule",338],[10,"Error",339],[10,"SpawnEssentialNamed",340],[10,"IdProvider",341],[6,"Option",342],[8,"DomainOperator",0]],"b":[]}],\
["domain_test_primitives",{"doc":"Test primitive crates that expose necessary extensions …","t":"KKNNNN","n":["OnchainStateApi","TimestampApi","consensus_chain_byte_fee","free_balance","get_open_channel_for_chain","timestamp"],"q":[[0,"domain_test_primitives"],[6,"sp_api"],[7,"core::result"],[8,"parity_scale_codec::codec"],[9,"parity_scale_codec::codec"],[10,"sp_domains"],[11,"subspace_runtime_primitives"]],"d":["Api for querying onchain state in the test","Api that returns the timestamp","Api to get the current domain transaction byte fee","Api to get the free balance of the given account","Returns the last open channel for a given domain.","Api to construct inherent timestamp extrinsic from given …"],"i":[0,0,1,1,1,9],"f":"``{b{{f{cd}}}{hj}}{{bc}{{f{ed}}}{hj}{hj}}{{bl}{{f{{A`{n}}d}}}}{Ab{{f{Add}}}}","c":[],"p":[[10,"OnchainStateApi",0],[6,"ApiError",6],[6,"Result",7],[10,"Encode",8],[10,"Decode",8],[6,"ChainId",9],[8,"ChannelId",9],[6,"Option",10],[10,"TimestampApi",0],[8,"Moment",11]],"b":[]}],\
["domain_test_service",{"doc":"Crate used for testing with Domain.","t":"PPPPPPPPEPPPPSPGPNNNCNNHHHNNCNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNNHIFFIIIKNOOOONNNNNOOOONNNNNNNNNOONNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNOOOOONOOOONNNOOOOONNNNNNOONNNNNNNNNNNPPPPPPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Alice","AliceStash","Bob","BobStash","Charlie","CharlieStash","Dave","DaveStash","EcdsaKeyring","Eve","EveStash","Ferdie","FerdieStash","GENESIS_DOMAIN_ID","One","Sr25519Keyring","Two","__clone_box","borrow","borrow_mut","chain_spec","clone","clone_into","construct_extrinsic_generic","construct_extrinsic_generic_with_custom_key","construct_unsigned_extrinsic","deref","deref_mut","domain","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","evm_domain_test_runtime","fmt","fmt","from","from_account_id","from_h256_public","from_mut","from_mut","from_public","from_raw_public","from_ref","from_ref","from_str","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","iter","iter","keyring","node_config","numeric","numeric_id","pair","public","sign","to_account_id","to_h256_public","to_owned","to_raw_public","to_raw_public_vec","to_seed","to_string","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip","create_domain_spec","Backend","DomainNode","DomainNodeBuilder","DomainOperator","EvmDomainClient","EvmDomainNode","FromKeyring","account_nonce","addr","addr","backend","backend","borrow","borrow","borrow_mut","borrow_mut","build_evm_node","client","client","code_executor","code_executor","connect_to_domain_node","construct_and_send_extrinsic","construct_and_send_extrinsic_with","construct_extrinsic","construct_extrinsic_with_tip","deref","deref","deref_mut","deref_mut","domain_id","domain_id","drop","drop","exclusively_connect_to_registered_parachain_nodes","free_balance","from","from","from_keyring","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_open_channel_for_chain","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_key","into_key","into_mut","into_mut","into_ref","into_ref","key","key","keystore","network_service","network_service","new","operator","operator","rpc_handlers","rpc_handlers","send_extrinsic","send_system_remark","skip_empty_bundle","sync_service","sync_service","task_manager","task_manager","transaction_pool","try_from","try_from","try_into","try_into","try_into_key","try_into_key","tx_pool_sink","tx_pool_sink","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","wait_for_blocks","Alice","Bob","Charlie","Dave","Eve","Ferdie","Keyring","One","Two","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","pair","public","sign","to_account_id","to_owned","to_seed","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"domain_test_service"],[83,"domain_test_service::chain_spec"],[84,"domain_test_service::domain"],[184,"domain_test_service::keyring"],[237,"dyn_clone::sealed"],[238,"evm_domain_test_runtime"],[239,"evm_domain_test_runtime"],[240,"frame_system::extensions::check_spec_version"],[241,"frame_system::extensions::check_tx_version"],[242,"frame_system::extensions::check_genesis"],[243,"frame_system::extensions::check_mortality"],[244,"frame_system::extensions::check_nonce"],[245,"frame_system::extensions::check_weight"],[246,"pallet_transaction_payment"],[247,"sp_runtime::generic::unchecked_extrinsic"],[248,"domain_runtime_primitives::opaque"],[249,"sp_blockchain::backend"],[250,"core::convert"],[251,"core::convert"],[252,"frame_system::pallet"],[253,"pallet_transaction_payment::pallet"],[254,"core::marker"],[255,"core::marker"],[256,"core::fmt"],[257,"core::fmt"],[258,"sp_core::crypto"],[259,"core::option"],[260,"sp_core::sr25519"],[261,"core::hash"],[262,"core::marker"],[263,"core::any"],[264,"alloc::sync"],[265,"alloc::rc"],[266,"core::iter::traits::iterator"],[267,"sp_keyring::sr25519"],[268,"sp_domains"],[269,"tokio::runtime::handle"],[270,"sc_network::config"],[271,"alloc::vec"],[272,"sc_network_common::role"],[273,"sc_service::config"],[274,"sc_chain_spec"],[275,"sc_service::config"],[276,"sp_core::sr25519"],[277,"core::any"],[278,"evm_domain_test_runtime"],[279,"domain_service"],[280,"sp_api"],[281,"serde::de"],[282,"parity_scale_codec::codec"],[283,"parity_scale_codec::codec"],[284,"core::fmt"],[285,"subspace_test_service"],[286,"substrate_test_client"],[287,"substrate_test_client"],[288,"sp_domains"],[289,"core::future::future"],[290,"core::fmt"]],"d":["","","","","","","","","","","","","","The domain id of the genesis domain","","Set of test accounts.","","","","","Chain specification for the domain test runtime.","","","Construct an extrinsic that can be applied to the test …","Construct a generic extrinsic signed by custom key","Construct an unsigned extrinsic that can be applied to the …","","","Utilities used for testing with the domain.","","","","","","","","","","","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Returns an iterator over all test accounts.","","Set of test accounts.","Create a domain node <code>Configuration</code>.","Create a crypto <code>Pair</code> from a numeric value.","Get account id of a <code>numeric</code> account.","","","","","","","","","","","","","","","","","","","Create chain spec","The backend type used by the test service.","A generic domain node instance used for testing.","A builder to create a <code>DomainNode</code>.","Domain executor for the test service.","The evm domain client","The evm domain node","Trait for convert keyring to account id","Get the nonce of the node account","The <code>MultiaddrWithPeerId</code> to this node. This is useful if …","The <code>MultiaddrWithPeerId</code> to this node. This is useful if …","Client backend.","Client backend.","","","","","Build a evm domain node","Client’s instance.","Client’s instance.","Code executor.","Code executor.","Make the node connect to the given domain node.","Construct an extrinsic with the current nonce of the node …","Construct an extrinsic with the given nonce and tip for …","Construct an extrinsic.","Construct an extrinsic with the given transaction tip.","","","","","The domain id","The domain id","","","Instruct the node to exclusively connect to registered …","Get the free balance of the given account","Returns the argument unchanged.","Returns the argument unchanged.","Convert keyring to account id","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Returns the open XDM channel for given chain","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The node’s account key","The node’s account key","","Network service.","Network service.","Create a new instance of <code>Self</code>.","Domain oeprator.","Domain oeprator.","RPCHandlers to make RPC queries.","RPCHandlers to make RPC queries.","Send an extrinsic to this node.","Sends an system.remark extrinsic to the pool.","Skip empty bundle production when there is no non-empty …","Sync service.","Sync service.","TaskManager’s instance.","TaskManager’s instance.","","","","","","","","Sink to the node’s tx pool","Sink to the node’s tx pool","","","","","","","","","","","Wait for <code>count</code> blocks to be imported in the node and then …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","","","","","","","Return key pair.","Return public key.","Sign <code>msg</code>.","Return account id","","Return seed string.","","","","","","","",""],"i":[3,3,3,3,3,3,3,3,0,3,3,3,3,0,3,0,3,3,3,3,0,3,3,0,0,0,3,3,0,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,69,69,82,69,82,69,80,69,80,80,69,82,69,82,80,69,69,69,69,69,80,69,80,69,82,69,80,80,69,69,80,79,69,69,80,80,69,69,80,80,69,69,80,69,80,69,80,80,69,80,69,80,69,80,69,80,69,82,95,69,82,80,69,82,69,82,69,69,80,69,82,69,82,95,69,80,69,80,69,80,69,82,69,80,69,80,69,80,69,80,69,80,69,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":"`````````````````{{cb}d{}}{ce{}{}}0`{ff}{{ce}d{}{}}{{eghjl}{{Bd{nA`{Bb{{Ab{i}}{Ad{i}}{Af{i}}{Ah{i}}{Aj{i}}{Al{i}}{An{i}}{B`{i}}}}}}}{{Bh{Bf}}}{{Bj{c}}}Bl{{Cb{}{{Bn{C`}}}}CdCfCh}}{{egCjjl}{{Bd{nA`{Bb{{Ab{i}}{Ad{i}}{Af{i}}{Ah{i}}{Aj{i}}{Al{i}}{An{i}}{B`{i}}}}}}}{{Bh{Bf}}}{{Bj{c}}}Bl{{Cb{}{{Bn{C`}}}}CdCfCh}}{c{{Bd{nA`{Bb{{Ab{e}}{Ad{e}}{Af{e}}{Ah{e}}{Aj{e}}{Al{e}}{An{e}}{B`{e}}}}}}}Bl{{Cb{}{{Bn{C`}}}}CdCfCh}}{Clc{}}0`{Cld}{{ff}j}{{ce}j{}{}}0000`{{fCn}{{Db{dD`}}}}0{cc{}}{Dd{{Df{f}}}}{C`{{Df{f}}}}2={Dh{{Df{f}}}}{{{Dl{Dj}}}{{Df{f}}}}?4{Dn{{Db{f}}}}{{ce}E`{EbEd}Ef}{{fc}dEh}{{}Cl}{ce{}{}}{{{Ej{c}}}{{Ej{El}}}{}}{{{En{c}}}{{En{El}}}{}}{{{F`{c}}}{{F`{El}}}{}}333{{}{{`{{Fd{}{{Fb{f}}}}}}}}{{}Ff}`{{FhFjh{Fn{Fl}}jG`Gb{Ej{Gd}}}{{Db{GfGh}}}}{ClGj}{ClDd}{fGj}{fDh}{{f{Gl{Dj}}}Gn}{fDd}{fC`}={f{{Dl{Dj}}}}{f{{Fn{Dj}}}}{fH`}{cH`{}}{c{{Db{e}}}{}{}}00{cHb{}}{cDn{}}{ce{}{}}00{Hd{{Hh{Hf}}}}```````{{{Hj{ceg}}}l{{Cb{}{{Bn{C`}}}}CdCfCh}{{Hn{BfHl}}CfCh}{I`IbIdIfIhIjIlChCfIn}}````2222{{J`G`FhJb}Jd}````{{J`Fl}J`}{{{Hj{ceg}}i}{{Db{JfJh}}}{{Cb{}{{Bn{C`}}}}CdCfCh}{{Hn{BfHl}}CfCh}{I`IbIdIfIhIjIlChCfIn}Bl}{{{Hj{ceg}}li}{{Db{JfJh}}}{{Cb{}{{Bn{C`}}}}CdCfCh}{{Hn{BfHl}}CfCh}{I`IbIdIfIhIjIlChCfIn}Bl}{{{Hj{ceg}}li}{{Bd{nA`{Bb{{Ab{c}}{Ad{c}}{Af{c}}{Ah{c}}{Aj{c}}{Al{c}}{An{c}}{B`{c}}}}}}}{{Cb{}{{Bn{C`}}}}CdCfCh}{{Hn{BfHl}}CfCh}{I`IbIdIfIhIjIlChCfIn}Bl}0{Clc{}}000``{Cld}0{J`J`}{{{Hj{ceg}}g}Jj{{Cb{}{{Bn{C`}}}}CdCfCh}{{Hn{BfHl}}CfCh}{I`IbIdIfIhIjIlChCfIn}}{cc{}}0{hIn}=11=1=1={{{Hj{ceg}}Jl}{{Df{Jn}}}{{Cb{}{{Bn{C`}}}}CdCfCh}{{Hn{BfHl}}CfCh}{I`IbIdIfIhIjIlChCfIn}}{{}Cl}0??{{{Ej{c}}}{{Ej{El}}}{}}0{{{En{c}}}{{En{El}}}{}}{{{F`{c}}}{{F`{El}}}{}}0{ce{}{}}00000`````{{FjhGb}J`}````{{{Hj{ceg}}i}{{Db{JfJh}}}{{Cb{}{{Bn{C`}}}}CdCfCh}{{Hn{BfHl}}CfCh}{I`IbIdIfIhIjIlChCfIn}{{Bl{K`}}}}{{{Hj{ceg}}}d{{Cb{}{{Bn{C`}}}}CdCfCh}{{Hn{BfHl}}CfCh}{I`IbIdIfIhIjIlChCfIn}}<`````{c{{Db{e}}}{}{}}00000``{cHb{}}0{cDn{}}0666666{{{Hj{ceg}}Cl}{{`{{Kd{}{{Kb{d}}}}}}}{{Cb{}{{Bn{C`}}}}CdCfCh}{{Hn{BfHl}}CfCh}{I`IbIdIfIhIjIlChCfIn}}`````````{{cb}d{}}88{hh}{{ce}d{}{}}{Clc{}}0{Cld}{{hh}j}{{ce}j{}{}}0000{{hCn}Kf}{cc{}}0{ce{}{}}01{{ce}E`{EbEd}Ef}{{hc}dEh}{{}Cl}3{{{Ej{c}}}{{Ej{El}}}{}}{{{En{c}}}{{En{El}}}{}}{{{F`{c}}}{{F`{El}}}{}}666{hCj}{hKh}{{h{Gl{Dj}}}Kj}{hKl}:{hH`}{c{{Db{e}}}{}{}}00{cHb{}}{cDn{}}>>>","c":[],"p":[[5,"Private",237],[1,"unit"],[6,"Sr25519Keyring",0],[6,"Keyring",184],[1,"bool"],[1,"u32"],[8,"Address",238],[8,"Signature",238],[5,"CheckNonZeroSender",239],[5,"CheckSpecVersion",240],[5,"CheckTxVersion",241],[5,"CheckGenesis",242],[5,"CheckMortality",243],[5,"CheckNonce",244],[5,"CheckWeight",245],[5,"ChargeTransactionPayment",246],[1,"tuple"],[5,"UncheckedExtrinsic",247],[8,"Block",248],[10,"HeaderBackend",249],[10,"AsRef",250],[10,"Into",250],[17,"Hash"],[5,"H256",251],[10,"Config",252],[10,"Config",253],[10,"Send",254],[10,"Sync",254],[5,"Pair",255],[1,"usize"],[5,"Formatter",256],[5,"Error",256],[6,"Result",257],[5,"AccountId32",258],[6,"Option",259],[5,"Public",260],[1,"u8"],[1,"array"],[1,"str"],[1,"u64"],[10,"Hash",261],[10,"Sized",254],[10,"BuildHasher",261],[10,"Hasher",261],[5,"Box",262],[10,"Any",263],[5,"Arc",264],[5,"Rc",265],[17,"Item"],[10,"Iterator",266],[5,"KeyringIter",267],[5,"DomainId",268],[5,"Handle",269],[5,"MultiaddrWithPeerId",270],[5,"Vec",271],[6,"Role",272],[5,"BasePath",273],[10,"ChainSpec",274],[5,"Configuration",273],[6,"Error",275],[5,"Pair",260],[1,"slice"],[5,"Signature",260],[5,"String",276],[5,"TypeId",263],[5,"RawGenesis",277],[5,"RuntimeGenesisConfig",238],[5,"ChainSpec",278],[5,"DomainNode",84],[8,"FullClient",279],[10,"ConstructRuntimeApi",280],[10,"DeserializeOwned",281],[10,"Encode",282],[10,"Decode",282],[10,"Clone",283],[10,"Debug",256],[10,"Display",256],[10,"FromStr",284],[10,"FromKeyring",84],[5,"DomainNodeBuilder",84],[5,"MockConsensusNode",285],[8,"EvmDomainNode",84],[5,"RpcTransactionOutput",286],[5,"RpcTransactionError",286],[8,"Balance",287],[6,"ChainId",268],[8,"ChannelId",268],[5,"OpaqueExtrinsic",288],[17,"Output"],[10,"Future",289],[8,"Result",256],[5,"Public",255],[5,"Signature",255],[5,"AccountId20",290],[8,"DomainOperator",84]],"b":[[37,"impl-Display-for-AccountKeyring"],[38,"impl-Debug-for-AccountKeyring"],[59,"impl-AccountKeyring"],[60,"impl-IntoEnumIterator-for-AccountKeyring"]]}],\
["evm_domain_runtime",{"doc":"","t":"IIPPIIIIPPPIIPPIFIIPFFIIFFIFFFFIPPPIIIFSIPPPPIIIPPFFFFSFIIPGPPSFFIPPPPFGIPFFGFFFFIFPFFFFFGGGGFGGFGGFIIFIIIFIPPPIFIPPPIIPFIPIIPPPFISFPSSSFNNNNNNNNNNNNNNNNOOOOOONNNONNNCNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNCONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNONNNNNNNNNNNNNNOOOOPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHIIIPIPFNNNNNNNNNNNNNNNNNONNNNNNNNNOONNNNNNNNNONNNNNNNOONNONNNNNNNNNNNNNNN","n":["AccountId","Address","Address20","Address32","AllPalletsWithSystem","AllPalletsWithoutSystem","Balance","Balances","Balances","Balances","Balances","BalancesConfig","BaseFee","BaseFee","BaseFee","BaseFeeConfig","BaseFeeThreshold","Block","BlockFees","BlockFees","BlockGasLimit","BlockHashCount","BlockId","BlockNumber","BoundDivision","ChannelReserveFee","CheckedExtrinsic","DefaultBaseFeePerGas","DefaultElasticity","DomainChainByteFee","DustRemovalHandler","EVM","EVM","EVM","EVM","EVMChainId","EVMChainIdConfig","EVMConfig","EVMCurrencyAdapter","EXISTENTIAL_DEPOSIT","Ethereum","Ethereum","Ethereum","Ethereum","Ethereum","EthereumConfig","Executive","ExecutivePallet","ExecutivePallet","ExecutivePallet","ExistentialDeposit","ExtrinsicStorageFees","FinalDomainTransactionByteFee","FindAuthorTruncated","GAS_PER_SECOND","GasLimitPovSizeRatio","GenesisConfig","Hash","Hash","HoldIdentifier","Id","Index","MAXIMUM_BLOCK_WEIGHT","MaxLocks","MaxReserves","Messenger","Messenger","Messenger","Messenger","Messenger","MmrProofVerifier","MultiAddress","Nonce","Number","OnXDMRewards","OperationalFeeMultiplier","OriginCaller","PalletInfo","Perbill","Permill","PostOnlyBlockHash","Precompiles","PrecompilesValue","Raw","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeBlockLength","RuntimeBlockWeights","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","RuntimeTask","SelfChainId","SelfDomainId","SelfDomainIdConfig","SessionKeys","Signature","SignedBlock","SignedExtra","StorageKeys","Sudo","Sudo","Sudo","Sudo","SudoConfig","SuicideQuickClearLimit","System","System","System","System","SystemConfig","Timestamp","Timestamp","TransactionConverter","TransactionPayment","TransactionPayment","TransactionPaymentConfig","Transporter","Transporter","Transporter","Transporter","TransporterEndpointId","UncheckedExtrinsic","VERSION","Version","Void","WASM_BINARY","WASM_BINARY_BLOATY","WEIGHT_PER_GAS","WeightPerGas","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_config","_config","_marker","_marker","_marker","_marker","account_basic","account_code_at","account_nonce","accounts","add","add","add_filter","api","api_version","apply_extrinsic","apply_extrinsic_with_post_state_root","apply_self_contained","as_system_ref","assimilate_storage","author","balances","balances","balances","base_fee","base_fee","base_fee_per_gas","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block","block_digest","block_fees","block_messages","block_weight","block_weights","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_config","call","caller","chain_id","chain_id","check_extrinsics_and_do_pre_dispatch","check_inherents","check_self_contained","checked_add","checked_add","checked_mul","checked_mul","checked_sub","checked_sub","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","confirmed_domain_block_storage_key","confirmed_domain_block_storage_key","construct_consensus_chain_byte_fee_extrinsic","construct_domain_update_chain_allowlist_extrinsic","construct_runtime_api","construct_set_code_extrinsic","construct_timestamp_extrinsic","convert_transaction","convert_transaction","convert_transaction","correct_and_deposit_fee","crate_version","create","create_default_config","current_all","current_block","current_receipts","current_transaction_statuses","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_extrinsic","decode_from","decode_from","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_sub","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dispatch","dispatch_bypass_filter","div","div","div","div","domain_chains_allowlist_update","domain_id","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elasticity","elasticity","encode","encode","encode","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","ethereum","ethereum","evm","evm","evm_chain_id","evm_chain_id","execute_block","execute_in_transaction","extract_proof","extract_signer","extract_signer","extract_signer","extrinsic_era","extrinsic_filter","extrinsic_weight","extrinsics","filter_call","finalize_block","find_author","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_fd","from_filelike","from_float","from_float","from_float","from_float","from_into_filelike","from_into_socketlike","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_percent","from_percent","from_perthousand","from_perthousand","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","function","gas_limit_multiplier_support","gas_price","generate","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_endpoint_handler","get_hash","get_module_names","get_raw","has_api","has_api_with","hash","header","ideal","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response_message_unsigned","inbox_response_storage_key","inbox_responses_storage_key","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","initialize_block_with_post_state_root","int_div","int_div","int_mul","int_mul","intermediate_roots","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_clear","is_clear","is_feeless","is_inherent_extrinsic","is_one","is_one","is_self_contained","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_valid","is_within_tx_range","is_xdm_valid","is_zero","is_zero","is_zero","is_zero","iter","justifications","key","key_ids","lower","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","max_value","max_value","maximum_block_length","messenger_channel","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","min_value","min_value","min_value","min_value","module_name","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_floor","mul_floor","multiplier","name","name_hash","none","none","offchain_worker","on_nonzero_unbalanced","on_storage_fees_charged","on_xdm_rewards","one","one","one","one","opaque","operator","outbox_message_unsigned","outbox_storage_key","outbox_storage_key","partial_cmp","partial_cmp","partial_cmp","pay_priority_fee","pending_block","phantom","pow","pow","pre_dispatch","pre_dispatch_self_contained","proof_recorder","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","register_extension","reset_filter","root","root","run","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_sub","saturating_sub","saturating_sub","saturating_sub","self_domain_id","self_domain_id","serialize","serialize","serialize","serialize","set_call_context","set_caller_from","should_relay_inbox_message_response","should_relay_outbox_message","signed","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","square","square","storage_at","sub","sub","sudo","sudo","system","system","system","task_index","tcmp","tcmp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_payment","transaction_payment","transfers","transfers_storage_key","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upper","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate_self_contained","validate_transaction","validate_unsigned","verify_proof_and_extract_consensus_state_root","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","withdraw_fee","zero","zero","zero","zero","dispatch","AccountId","Block","BlockId","Hash","Header","Number","UncheckedExtrinsic","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","digest","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics","extrinsics_root","fmt","from","from","from","from_bytes","from_mut","from_mut","from_ref","from_ref","header","identity","init","into","into_key","into_mut","into_ref","is_clear","number","parent_hash","serialize","size_hint","state_root","to_keyed_vec","to_owned","try_from","try_into","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","using_encoded","vzip"],"q":[[0,"evm_domain_runtime"],[2139,"evm_domain_runtime::api"],[2140,"evm_domain_runtime::opaque"],[2213,"dyn_clone::sealed"],[2214,"primitive_types"],[2215,"evm::backend"],[2216,"alloc::vec"],[2217,"core::ops::function"],[2218,"core::option"],[2219,"sp_api"],[2220,"core::result"],[2221,"sp_runtime::traits"],[2222,"sp_api"],[2223,"sp_runtime::traits"],[2224,"sp_storage"],[2225,"alloc::string"],[2226,"sp_runtime::generic::digest"],[2227,"sp_domains"],[2228,"sp_messenger::messages"],[2229,"sp_weights::weight_v2"],[2230,"frame_system::limits"],[2231,"sp_genesis_builder"],[2232,"primitive_types"],[2233,"sp_runtime"],[2234,"sp_inherents"],[2235,"sp_inherents"],[2236,"core::clone"],[2237,"core::cmp"],[2238,"sp_domains"],[2239,"ethereum::transaction"],[2240,"frame_support::traits::metadata"],[2241,"fp_evm"],[2242,"ethereum::receipt"],[2243,"fp_rpc"],[2244,"parity_scale_codec::error"],[2245,"parity_scale_codec::codec"],[2246,"parity_scale_codec::codec"],[2247,"domain_runtime_primitives"],[2248,"serde::de"],[2249,"frame_support::dispatch"],[2250,"parity_scale_codec::codec"],[2251,"frame_support::dispatch"],[2252,"sp_runtime"],[2253,"core::fmt"],[2254,"core::fmt"],[2255,"pallet_ethereum::pallet"],[2256,"frame_support::dispatch"],[2257,"pallet_balances::pallet"],[2258,"pallet_sudo::pallet"],[2259,"pallet_transporter::pallet"],[2260,"pallet_evm::pallet"],[2261,"pallet_ethereum::pallet"],[2262,"pallet_balances::pallet"],[2263,"pallet_transaction_payment::pallet"],[2264,"pallet_sudo::pallet"],[2265,"io_lifetimes::portability"],[2266,"io_lifetimes::portability"],[2267,"core::convert"],[2268,"sp_arithmetic::per_things"],[2269,"core::convert"],[2270,"pallet_ethereum"],[2271,"frame_support::traits::metadata"],[2272,"core::hash"],[2273,"core::hash"],[2274,"subspace_core_primitives"],[2275,"sp_domains"],[2276,"frame_metadata"],[2277,"sp_arithmetic::per_things"],[2278,"frame_support::traits::tokens::fungible::imbalance"],[2279,"sp_runtime::traits"],[2280,"pallet_transaction_payment::types"],[2281,"sp_arithmetic::per_things"],[2282,"sp_core::traits"],[2283,"core::convert"],[2284,"scale_info::ty"],[2285,"sp_runtime::transaction_validity"],[2286,"sp_mmr_primitives"],[2287,"sp_runtime::traits"]],"d":["Some way of identifying an account on the chain. We …","The address format for describing accounts.","Its a 20 byte representation.","It’s a 32 byte representation.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","Balance of an account.","","","","","","","","","","","Block type as expected by this runtime.","","","EVM block gas limit is set to maximum to allow all the …","","BlockId type as expected by this runtime.","An index to a block.","","","Extrinsic type that has already been checked.","","","","<code>DustRemovalHandler</code> used to collect all the SSC dust left …","","","","","","","","","The existential deposit. Same with the one on primary …","","","","","","","Executive: handles dispatch to the various modules.","","","","","","","","Current approximation of the gas/s consumption considering …","","","A hash of some data used by the chain.","Identify by block header hash.","Hold identifier for balances for this runtime.","It’s an account ID (pubkey).","It’s an account index.","Maximum total block weight.","","","","","","","","","A multi-format address wrapper for on-chain accounts.","Index of a transaction in the chain.","Identify by block number.","","","","Provides an implementation of <code>PalletInfo</code> to provide …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","","Precompiles we use for EVM","","It’s some arbitrary raw bytes.","","","Implements all runtime apis for the client side.","","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","An aggregation of all <code>Task</code> enums across all pallets …","","","","","Alias to 512-bit hash when used in the context of a …","A Block signed with a Justification","The SignedExtension to the basic transaction logic.","","","","","","","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtime.","","","","","","Approximate ratio of the amount of Weight per Gas. u64 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Full blockecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","","","","","","","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</codehe accompanying extrinsics.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert to runtime origin, using as filter: …","","Convert to runtime origin with caller being system signed …","Convert to runtime origin using […","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","","","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","The function that should be called.","","","Generate a set of keys with optionally using the given …","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","","","","","","","The block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","","","","","","","","","","","","","","","","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","Block justification.","The <code>AccountId</code> of the sudo key.","","","","","","","","","","","","","","","Maximum block length for all dispatches.","","","","","","","","","","","","","","","","","","","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","","","","","Create with system none origin and …","","","","","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","Opaque types. These are used by the CLI to instantiate …","Primarily used for adding the operator signing key into …","","","","","","","","","","","","","","","","","","","","","","","Create with system root origin and …","","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","","","","","","","","Create with system signed origin and …","Who this purports to be from and the number of extrinsics …","","","","","","","","","","See <code>PerThing::square</code>.","See <code>PerThing::square</codeee <code>PerThing::zero</code>.","","","See <code>PerThing::zero</code>.","","Opaque account identifier type.","Opaque block type.","Opaque block identifier type.","Identify by block header hash.","Opaque block header type.","Identify by block number.","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","A chain-specific digest of data useful for light clients …","","","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","","","Returns the argument unchanged.","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","The block header.","","","Calls <code>U::from(self)</code>.","","","","","The block number.","The parent hash.","","","The state trie merkle root","","","","","","","","","","","","","","",""],"i":[0,0,61,61,0,0,0,0,23,78,59,0,0,23,59,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,23,78,59,0,0,0,0,0,0,23,26,78,59,0,0,0,23,59,0,0,0,0,0,0,0,0,192,0,61,61,0,0,0,0,52,23,78,59,0,0,0,192,0,0,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,78,59,0,0,0,23,78,59,0,0,23,0,0,59,0,0,23,78,59,0,0,0,0,26,0,0,0,0,51,52,11,53,54,55,56,57,58,23,26,59,9,60,10,61,193,194,195,196,197,198,60,60,60,196,9,10,11,0,15,60,60,23,26,28,60,199,200,28,200,28,198,51,52,54,55,56,57,58,23,26,78,59,9,10,61,51,52,54,55,56,57,58,23,26,78,59,9,10,61,51,52,54,55,56,57,58,23,26,78,59,9,10,61,201,60,60,60,60,0,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,28,60,60,11,60,197,60,60,23,9,10,9,10,9,10,9,10,51,52,11,53,54,55,56,57,58,23,26,59,9,60,10,61,51,52,11,53,54,55,56,57,58,23,26,59,9,60,10,61,52,9,10,52,9,10,207,60,60,60,233,60,60,53,53,60,209,232,60,60,60,60,60,60,51,52,54,55,56,57,58,23,26,78,59,9,10,61,51,52,54,55,56,57,58,23,26,78,59,9,10,61,51,52,54,55,56,57,58,23,26,78,59,9,10,61,60,9,10,51,60,51,52,54,55,56,57,58,23,26,78,59,9,10,61,9,9,10,10,53,28,9,10,52,9,10,52,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,52,9,10,52,9,10,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,51,28,9,10,23,23,9,9,10,10,60,234,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,60,198,51,9,10,9,10,51,52,23,26,78,59,9,10,61,60,51,52,54,55,56,57,58,23,26,59,9,60,10,61,51,51,51,51,51,52,52,52,52,52,54,54,54,54,54,55,55,55,55,55,56,56,56,56,56,57,57,57,57,57,58,58,58,58,58,23,23,23,23,23,26,26,26,26,26,59,59,59,59,59,9,9,9,9,9,60,60,60,60,60,10,10,10,10,10,61,61,61,61,61,200,28,200,28,200,28,60,15,15,0,204,60,60,60,60,47,11,60,208,51,52,11,54,55,56,57,58,23,26,78,59,9,60,10,61,61,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,11,11,11,11,53,233,15,54,55,56,57,28,58,23,23,23,23,23,23,23,23,23,23,23,23,26,26,26,78,78,78,78,78,78,78,78,59,59,59,59,59,59,59,59,59,59,59,9,9,60,10,10,61,61,61,78,61,61,9,9,10,10,61,61,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,51,51,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,52,52,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,11,11,53,53,233,233,15,15,54,54,55,55,56,56,57,57,28,28,58,58,23,23,26,26,78,78,59,59,9,9,60,60,10,10,61,61,9,9,10,10,9,10,9,10,9,10,9,10,9,10,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,51,51,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,52,52,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,11,11,53,53,233,233,15,15,54,54,55,55,56,56,57,57,28,28,58,58,23,23,26,26,78,78,59,59,9,9,60,60,10,10,61,61,61,235,60,60,51,60,203,211,211,211,212,212,212,213,213,213,214,214,214,215,215,215,216,216,216,217,217,217,218,218,218,219,219,219,220,220,220,221,221,221,222,222,222,223,223,223,224,224,224,225,225,225,226,226,226,227,227,227,228,228,228,229,229,229,230,230,230,231,231,231,23,23,23,60,61,23,51,15,15,61,47,210,51,52,54,55,56,57,58,23,26,78,59,9,10,61,60,60,207,232,60,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,60,60,9,10,9,10,60,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,11,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,51,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,15,26,9,10,23,60,9,10,23,23,23,23,23,23,23,23,23,23,23,23,58,60,60,9,9,10,10,58,201,236,51,210,52,54,55,56,57,26,9,10,9,9,10,10,0,52,60,60,60,60,60,60,9,9,10,10,232,9,9,9,10,10,10,9,10,9,10,194,232,232,11,11,60,202,204,205,9,9,10,10,0,51,60,207,60,52,9,10,209,60,234,9,10,60,23,15,60,60,60,60,15,15,11,11,11,58,9,9,10,10,9,10,9,10,9,10,9,10,9,10,9,10,9,9,10,10,200,28,51,28,9,10,15,11,60,60,11,11,235,51,52,23,26,78,59,9,10,61,9,10,60,9,10,200,28,200,28,26,58,9,10,51,52,54,55,56,57,58,23,26,78,59,9,10,61,51,52,11,53,54,55,56,57,58,23,26,59,9,60,10,61,61,200,28,60,60,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,78,78,78,78,78,78,78,59,59,59,59,59,59,59,59,59,59,59,9,60,10,61,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,11,51,52,54,55,56,57,58,23,26,78,59,9,10,61,51,52,54,55,56,57,58,23,26,78,59,9,10,61,51,52,54,55,56,57,58,23,26,78,59,9,10,61,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,51,52,54,55,56,57,58,23,26,78,59,9,60,10,61,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,9,10,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,210,51,51,52,54,55,56,57,58,23,26,59,9,9,10,10,61,23,60,60,206,60,202,203,204,205,206,207,208,209,210,51,211,212,213,214,215,216,217,218,219,220,52,221,222,223,224,225,226,227,228,229,230,231,232,11,53,233,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,58,209,9,9,10,10,0,0,0,0,237,0,237,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,238,70,70,70,70,70,70,70,70,70,239,238,70,70,70,70,70,70,70,70,70,239,70,70,70,70,70,70,70,238,238,70,70,238,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}000000000000000``````{fh}{f{{l{j}}}}{nA`}`{{AbAb}}{{AdAd}}{{Afe}d{}{{Al{c}{{Ah{Aj}}}}}}`{{{An{ce}}}{{Bf{{Bb{B`}}Bd}}}Bh{{Bj{c}}}}{{}Bl}{{}{{l{j}}}}{{Bnc}{{Bb{{Cb{{C`{Bn}}}}}}}{}}{Cd{{Bb{Cf}}}}{{ChCj}{{Bf{dCl}}}}{{}f}``````{c{{Cn{j}}}{}}0000000000000{c{{l{j}}}{}}000000000000011111111111111`{{}D`}{{}{{Dd{Db}}}}{{}Df}{{}Dh}{{}Dj}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Chd}{{{l{j}}}Dl}{{ff{l{j}}DnDn{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}Aj{Bb{{l{{Eb{f{l{E`}}}}}}}}}{{Bf{EdEf}}}}{Afc{}}{{}Eh}`{{lEj}{{Bf{dEl}}}}{{EnF`}Fb}{Bn{{Bb{{Bf{cFd}}}}}{}}{{AbAb}{{Bb{Ab}}}}{{AdAd}{{Bb{Ad}}}}1010{{}c{}}0{FfFf}{FhFh}{AfAf}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{GdGd}{BnBn}{CdCd}{GfGf}{AbAb}{GhGh}{AdAd}{{{Gj{ce}}}{{Gj{ce}}}GlGl}{{ce}d{}{}}000000000000000{{FhFh}Gn}{{AbAb}Gn}{{AdAd}Gn}{{ce}Gn{}{}}00{H`{{Bb{{l{j}}}}}}{H`{{l{j}}}}{Db}{Hb}{e{{Hd{g}}}Bh{{Bj{c}}}{}}{{{l{j}}}{{l{j}}}}{Hf}{{FjHh}Hj}{{FjHh}Hl}{Hh}{{fDnDnc}c{}}{{}{{Bb{Hn}}}}{{f{l{j}}DnDn{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}Aj{Bb{{l{{Eb{f{l{E`}}}}}}}}}{{Bf{I`Ef}}}}{{}{{l{j}}}}{{}{{Eb{{Bb{Ib}}{Bb{{l{Id}}}}{Bb{{l{If}}}}}}}}{{}{{Bb{Ib}}}}{{}{{Bb{{l{Id}}}}}}{{}{{Bb{{l{If}}}}}}{c{{Bf{FfIh}}}Ij}{c{{Bf{FhIh}}}Ij}{c{{Bf{FlIh}}}Ij}{c{{Bf{FnIh}}}Ij}{c{{Bf{G`Ih}}}Ij}{c{{Bf{GbIh}}}Ij}{c{{Bf{GdIh}}}Ij}{c{{Bf{BnIh}}}Ij}{c{{Bf{CdIh}}}Ij}{c{{Bf{IlIh}}}Ij}{c{{Bf{GfIh}}}Ij}{c{{Bf{AbIh}}}Ij}{c{{Bf{AdIh}}}Ij}{c{{Bf{{Gj{eg}}Ih}}}IjInJ`}{{{Jb{j}}}{{Bf{cIh}}}{}}0000000000000{{B`{Jb{j}}}{{Bf{cIh}}}{}}0000000000000{Hl{{Bf{Jd}}}}{{}{{Bf{AbIh}}}}{{}{{Bf{AdIh}}}}{{{Jb{j}}}{{Bb{{l{{Eb{{l{j}}Jf}}}}}}}}{{{l{j}}}{{Bb{{l{{Eb{{l{j}}Jf}}}}}}}}{{B`c}{{Bf{eIh}}}Ij{}}0000000000000{AbB`}{Ab}{Ad}{AdB`}{{}Fj}{{}Ch}{{}Ab}{{}Ad}{{ce}e{}{}}00000{{ce}d{}{}}011{cd{}}000221122222222{Jhc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{c{{Bf{Ff}}}Jj}{c{{Bf{Ch}}}Jj}{c{{Bf{Ab}}}Jj}{c{{Bf{Ad}}}Jj}{{BnAf}Jl}0{{AbAb}}{{Abc}{}{}}{{Adc}{}{}}{{AdAd}}{H`{{Bb{Hb}}}}`{Jhd}00000000000000000000000000000000000000000000000000{{}{{Bb{Ab}}}}`{Ff{{l{j}}}}{Ab{{l{j}}}}{Ad{{l{j}}}}{Ab}{Ad}{{Ffc}d{JnK`}}{{Fhc}d{JnK`}}{{Bnc}d{JnK`}}{{Cdc}d{JnK`}}{{Ilc}d{JnK`}}{{Gfc}d{JnK`}}{{Abc}d{JnK`}}{{Adc}d{JnK`}}{{{Gj{ce}}g}dKbJ`{JnK`}}{{}{{Bf{dB`}}}}{{FfFf}Aj}{{FhFh}Aj}{{FlFl}Aj}{{FnFn}Aj}{{G`G`}Aj}{{GbGb}Aj}{{GdGd}Aj}{{BnBn}Aj}{{CdCd}Aj}{{GfGf}Aj}{{AbAb}Aj}{{GhGh}Aj}{{AdAd}Aj}{{{Gj{ce}}{Gj{ce}}}AjKdKd}{{ce}Aj{}{}}000000000000000000000000000000000000000000000000000000000000000000000``````{End}{{{An{ce}}i}gBh{{Bj{c}}}{}{{Kh{{An{ce}}}{{Ah{{Kf{g}}}}}}}}{{{An{ce}}}{{Bb{Kj}}}Bh{{Bj{c}}}}{{{l{Hj}}}{{l{{Eb{{Bb{Kl}}Hj}}}}}}{Hj{{Eb{{Bb{n}}Kn}}}}{l{{l{{Eb{{Bb{Kl}}}}}}}}{{}{{Bb{L`}}}}{l{{l{Hh}}}}{{}Dh}`{{Afc}Aj{}}{{}}{c{{Bb{f}}}{{Lf{}{{Lb{{Eb{Ld{Jb{j}}}}}}}}}}{{FfLh}Lj}{{FhLh}Lj}{{AfLh}{{Bf{dLl}}}}{{FlLh}Lj}{{FnLh}Lj}{{G`Lh}Lj}{{GbLh}Lj}{{GdLh}Lj}{{BnLh}Lj}{{CdLh}Lj}{{IlLh}Lj}{{GfLh}Lj}{{AbLh}{{Bf{dLl}}}}{{GhLh}Lj}{{AdLh}{{Bf{dLl}}}}{{{Gj{ce}}Lh}{{Bf{dLl}}}LnLn}0{cc{}}000000000000000000000000000000000{{{M`{Gh}}}Af}{CdAf}{BbAf}{MbAf}444444444{{{Mf{MdGh}}}Bn}{{{Mf{MhGh}}}Bn}{{{Mf{MjGh}}}Bn}{{{Mf{MlGh}}}Bn}{{{Mf{MnGh}}}Bn}{{{Mf{N`Gh}}}Bn}{{{Mf{NbGh}}}Bn}{{{Mf{NdGh}}}Bn}<{{{Mf{NfGh}}}Bn}{{{Mf{NhGh}}}Bn}{{{Mf{NjGh}}}Bn}{MbCd}{cc{}}{{{M`{Gh}}}Cd}{{{Nl{Gh}}}Il}2{{{Nn{Gh}}}Il}{{{O`{Gh}}}Il}{{{Ob{Gh}}}Il}{{{Od{Gh}}}Il}{{{Of{Gh}}}Il}{{{Oh{Gh}}}Il}{{{Oj{Gh}}}Gf}9{OlGf}{OnGf}{{{A`{Gh}}}Gf}{{{Ab{Gh}}}Gf}{{{Ad{Gh}}}Gf}{{{Af{Gh}}}Gf}{{{Ah{Gh}}}Gf}{{{Aj{Gh}}}Gf}{{{Al{Gh}}}Gf}{{{An{Ab}}}Ab}{cc{}}0{{{An{Ad}}}Ad}11{c{{Gj{ce}}}{}{}}{AA`c{}}{Ef{{Bb{Il}}}}{AAbc{}}0{AAdAb}0{AAdAd}0{ceAAf{}}{ceAAh{}}9{ce{}{}}:0:0:00:0::0:0:00::00:0:0::00:0::00:0::0:0:00:0::0:00::00:0:0:0:0::00:0:0:0:0:0::0:0:0:00:0:0::0:0:0{B`Ab}{{}Ab}{{}Ad}{B`Ad}3030{{cc}Ab{AAj{AAl{B`}}{AAl{Eh}}}}{{cc}Ad{AAj{AAl{B`}}{AAl{Eh}}}}10{{ccAAn}{{Bf{Abd}}}{}}{{ccAAn}{{Bf{Add}}}{}}{cc{}}99090090990900990099090909090900909090909099009099009090909090990099009909009909090090990090990090909>`{{}d}{{}Dn}{{{Bb{{l{j}}}}}{{l{j}}}}0{{}Db}{{}c{{ABb{AB`}}}}{{}AB`}0{{}Ej}0{{}c{{ABb{Ej}}}}{{}ABd}0{{}c{{ABb{ABd}}}}{{}Dj}{{}c{{ABb{Dj}}}}18{{}c{{ABb{Db}}}}9{{}B`}{{}c{{ABb{B`}}}}1101{{}c{{ABb{j}}}}{{}j}0=4={{}ABf}0{{}c{{ABb{ABf}}}}??6{{}ABh}{{}c{{ABb{ABh}}}}1{{}Dn}0{{}c{{ABb{Dn}}}}{{}ABj}{{}c{{ABb{ABj}}}}1{{}c{{ABb{Dh}}}}{{}Dh}0{{}Eh}{{}c{{ABb{Eh}}}}1?>?{{}ABl}{{}c{{ABb{ABl}}}}1998989{{}Ab}{{}c{{ABb{Ab}}}}1{BnABn}{AC`{{Jb{AC`}}}}{BnKn}{ACb{{Bb{{ACf{ACd}}}}}}{{ce}Eh{AChK`}ACj}{{}{{Jb{AC`}}}}{{FfJf}{{Jb{j}}}}{{{An{ce}}}{{Bf{AjBd}}}Bh{{Bj{c}}}}{{{An{ce}}g}{{Bf{AjBd}}}Bh{{Bj{c}}}{{Al{B`}{{Ah{Aj}}}}}}{{{Gj{ce}}g}dAChAChACl}`;{c{{l{j}}}{}}0000000000000{ACnBb}{AD`{{l{j}}}}{{ABfAD`}{{Bb{{l{j}}}}}}{{}{{Bb{Jh}}}}{F`l}{{}Jh}00000000000000000000000000000000000000000000000000{{}d}{{}{{l{j}}}}{{AbAb}B`}{{AdAd}B`}{{AbB`}Ab}{{AdB`}Ad}{{}{{l{{Cn{j}}}}}}{ce{}{}}00000000000000000000000000000000000000000000000000{Afc{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{Ff{{l{{Eb{{l{j}}Jf}}}}}}222222222222222222222222222222222222222222222222222{{{An{ce}}g}{{Bf{{ADb{c}}Cl}}}Bh{{Bj{c}}}{{ADf{{ADd{c}}}}}}{Cd{{Bb{Cf}}}}{cAj{}}0{{Bnc}Aj{}}{{}Aj}{AbAj}{AdAj}{BnAj}{Bn{{Bb{{Mf{MhGh}}}}}}{Bn{{Bb{{Mf{NjGh}}}}}}{Bn{{Bb{{Mf{MlGh}}}}}}{Bn{{Bb{{Mf{NfGh}}}}}}{Bn{{Bb{{Mf{MjGh}}}}}}{Bn{{Bb{{Mf{MdGh}}}}}}{Bn{{Bb{{Mf{NbGh}}}}}}{Bn{{Bb{{Mf{NhGh}}}}}}{Bn{{Bb{{Mf{NdGh}}}}}}{Bn{{Bb{{Mf{MnGh}}}}}}{Bn{{Bb{{Mf{N`Gh}}}}}}{GdAj}{{ADhADh}Aj}{{{l{j}}}{{Bb{Aj}}}}{AbAj}0{AdAj}0{{}c{}}``{{}{{Jb{Jf}}}}{{}Ab}{{}Jh}000000031{{}Ad}4{{}ABd}{{ABfADj}Fh}{{}ADl}{{}ADn}{B`{{Bb{ADl}}}}0{{}{{l{B`}}}}0:8:6{{}{{Bb{AC`}}}}{{AbAb}}{{Abc}{}{}}{{AbDh}Dh}{{AdAd}}{{AdDh}Dh}{{Adc}{}{}}{{Abc}c{AE`{AEb{B`}}}}{{Adc}c{AE`{AEb{B`}}}}10`8{{}{{Bb{{Cn{j}}}}}}{{}Af}0{{}d}{{{AEd{nMh}}}d}{{DbB`}d}{Dbd}{{}Ab}0{{}Ad}0``{ACnBb}{{ABfAD`}{{Bb{{l{j}}}}}}{AD`{{l{j}}}}{{FhFh}{{Bb{Gn}}}}{{AbAb}{{Bb{Gn}}}}{{AdAd}{{Bb{Gn}}}}{cd{}}{l{{Eb{{Bb{Ib}}{Bb{{l{If}}}}}}}}`{{AbJh}}{{AdJh}}{c{{Bf{dFd}}}{}}{{Bnc{AEf{Bn}}Jh}{{Bb{{Bf{dFd}}}}}{}}{{{An{ce}}}{{Bb{{AEh{c}}}}}Bh{{Bj{c}}}}{B`{{AEj{Db}}}}{B`{{AEl{Db}}}}{B`Db}{DhDb}{{{An{ce}}}dBh{{Bj{c}}}}{{{An{ce}}g}dBh{{Bj{c}}}AEn}{Afd}{{}Af}0{Gd{{Bf{dEf}}}}{{AbAb}Ab}0{{AdAd}Ad}0{{AbAbAAn}Ab}{{AdAdAAn}Ad}32{{AbJh}Ab}{{AdJh}Ad}{{Abc}c{AF`{AEb{B`}}}}{{Adc}c{AF`{AEb{B`}}}}10107766``{{Ffc}BfAFb}{{Chc}BfAFb}{{Abc}BfAFb}{{Adc}BfAFb}{{{An{ce}}AFd}dBh{{Bj{c}}}}{{Afc}d{{AFf{Af}}}}{{ABfAFh}Aj}0{cAf{}}{{}Af}`{FfJh}{FhJh}{BnJh}{CdJh}{IlJh}{GfJh}{AbJh}{AdJh}{{{Gj{ce}}}JhKbJ`}{AbAb}{AdAd}{{fDn}E`}{{AbAb}}{{AdAd}}`````{GdB`}{{cee}Gn{}{}}0{{c{Jb{j}}}{{l{j}}}{}}0000000000000{ce{}{}}000000000000000{cCl{}}``{{}{{AFj{Db}}}}{{}{{l{j}}}}{c{{Bf{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Il{{Bf{{Ob{Gh}}c}}}{}}{Il{{Bf{{Nn{Gh}}c}}}{}}{Il{{Bf{{Od{Gh}}c}}}{}}{Il{{Bf{{Nl{Gh}}c}}}{}}{Il{{Bf{{Of{Gh}}c}}}{}}{Il{{Bf{{O`{Gh}}c}}}{}}6{Il{{Bf{{Oh{Gh}}c}}}{}}{Gf{{Bf{{Aj{Gh}}c}}}{}}{Gf{{Bf{Olc}}}{}}{Gf{{Bf{{Af{Gh}}c}}}{}}{Gf{{Bf{{Ad{Gh}}c}}}{}}{Gf{{Bf{{Ah{Gh}}c}}}{}}{Gf{{Bf{{Oj{Gh}}c}}}{}}{Gf{{Bf{{Ab{Gh}}c}}}{}}{Gf{{Bf{{A`{Gh}}c}}}{}}{Gf{{Bf{Onc}}}{}}{c{{Bf{e}}}{}{}}{Gf{{Bf{{Al{Gh}}c}}}{}}1111111111111111111111111111111111111111111111111111111{{Afg}{{Bf{eAf}}}{}{}{{Kh{c}{{Ah{{Bf{ec}}}}}}}}{c{{Cn{j}}}{}}000000000000000000000000000{c{{l{j}}}{}}0000000000000{cAFl{}}00000000000000000000000000000000000000000000000000{{}AFn}00000000000000{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}Ab}{{cgAj}e{}{}{{Kh{{Jb{j}}}{{Ah{e}}}}}}{{Ffe}c{}{{Kh{{Jb{j}}}{{Ah{c}}}}}}111111111{{Abe}c{}{{Kh{{Jb{j}}}{{Ah{c}}}}}}22{{Ade}c{}{{Kh{{Jb{j}}}{{Ah{c}}}}}}3{{Bnc{AEf{Bn}}Jh}{{Bb{AG`}}}{}}{AGbAG`}{{AGbc}AG`{}}{{AGdAGf}{{Bb{AGh}}}}{{}AB`}:::::::::::::::::::::::::::::::::::::::::::::::::::{GdDh}{{fDn}{{Bf{c{Od{Gh}}}}}{}};;{{}Ad}0{{AC`{Jb{j}}}{{Bb{{l{j}}}}}}```````{{cb}d{}}{c{{Cn{j}}}{}}{c{{l{j}}}{}}1{ce{}{}}0{{}c{}}{HlHl}{{ce}d{}{}}{c{{Bf{HlIh}}}Ij}{{{Jb{j}}}{{Bf{cIh}}}{}}{{B`{Jb{j}}}{{Bf{cIh}}}{}}{{B`c}{{Bf{eIh}}}Ij{}}{{}Hl}{Jhc{}}0{c{{Bf{Hl}}}Jj}`{Jhd}{Hl{{l{j}}}}{{Hlc}d{JnK`}}{{HlHl}Aj}{{ce}Aj{}{}}0000``{{HlLh}{{Bf{dLl}}}}{{{AGj{cegi}}}HlKbKbKbAGl}{{{AGn{cegi}}}HlKbKbKbAGl}{cc{}}{{{Jb{j}}}{{Bf{HlIh}}}}{ce{}{}}220`{c{{l{j}}}{}}{{}Jh}2222{cAj{}}``{{Hlc}BfAFb}{HlJh}`{{c{Jb{j}}}{{l{j}}}{}}6{c{{Bf{e}}}{}{}}00{c{{Cn{j}}}{}}07{cAFl{}}{{}AFn}::{{cgAj}e{}{}{{Kh{{Jb{j}}}{{Ah{e}}}}}}{{Hle}c{}{{Kh{{Jb{j}}}{{Ah{c}}}}}}<","c":[56,1010,1011],"p":[[5,"Private",2213],[1,"unit"],[5,"H160",2214],[5,"Basic",2215],[1,"u8"],[5,"Vec",2216],[8,"AccountId",0],[8,"Nonce",0],[5,"Permill",0],[5,"Perbill",0],[5,"RuntimeOrigin",0],[17,"Output"],[1,"bool"],[10,"Fn",2217],[5,"RuntimeApiImpl",0],[1,"u32"],[6,"Option",2218],[6,"ApiError",2219],[6,"Result",2220],[10,"Block",2221],[10,"CallApiAt",2219],[8,"ApplyExtrinsicResult",2222],[6,"RuntimeCall",0],[8,"PostDispatchInfoOf",2221],[8,"DispatchResultWithInfo",2222],[6,"OriginCaller",0],[6,"RawOrigin",2223],[5,"RuntimeGenesisConfig",0],[5,"Storage",2224],[5,"String",2225],[1,"array"],[5,"Digest",2226],[8,"Balance",0],[5,"BlockFees",2227],[5,"BlockMessagesWithStorageKey",2228],[5,"Weight",2229],[5,"BlockWeights",2230],[8,"Result",2231],[5,"U256",2214],[5,"H256",2214],[1,"tuple"],[8,"CallInfo",2232],[6,"DispatchError",2222],[1,"u64"],[8,"BlockNumber",0],[5,"CheckExtrinsicsValidityError",2233],[8,"Block",0],[5,"InherentData",2234],[5,"CheckInherentsResult",2234],[6,"TransactionValidityError",2235],[5,"SessionKeys",0],[6,"HoldIdentifier",0],[5,"TransactionConverter",0],[6,"RuntimeSlashReason",0],[6,"RuntimeLockId",0],[6,"RuntimeHoldReason",0],[6,"RuntimeFreezeReason",0],[6,"RuntimeTask",0],[6,"RuntimeEvent",0],[5,"Runtime",0],[6,"MultiAddress",0],[10,"Clone",2236],[6,"Ordering",2237],[5,"DomainId",2227],[5,"DomainAllowlistUpdates",2227],[5,"ApiRef",2219],[8,"Moment",2238],[6,"TransactionV2",2239],[8,"UncheckedExtrinsic",0],[5,"UncheckedExtrinsic",2140],[5,"CrateVersion",2240],[8,"CreateInfo",2232],[8,"BlockV2",2241],[6,"ReceiptV3",2242],[5,"TransactionStatus",2243],[5,"Error",2244],[10,"Input",2245],[6,"RuntimeError",0],[10,"Decode",2245],[10,"HasCompact",2246],[1,"slice"],[5,"DecodeExtrinsicError",2233],[5,"KeyTypeId",2247],[1,"usize"],[10,"Deserializer",2248],[8,"DispatchResultWithPostInfo",2223],[10,"Output",2245],[10,"Sized",2249],[10,"Encode",2245],[10,"PartialEq",2237],[6,"TransactionOutcome",2222],[10,"FnOnce",2217],[5,"StorageProof",2250],[8,"AccountId",2140],[5,"DispatchInfo",2223],[6,"Era",2251],[17,"Item"],[8,"ConsensusEngineId",2222],[10,"IntoIterator",2252],[5,"Formatter",2253],[8,"Result",2253],[5,"Error",2253],[10,"Debug",2253],[8,"Origin",2254],[8,"Origin",2255],[8,"Ethereum",0],[8,"CallableCallFor",2223],[8,"Balances",0],[8,"BlockFees",0],[8,"Transporter",0],[8,"EVM",0],[8,"System",0],[8,"Timestamp",0],[8,"Messenger",0],[8,"Sudo",0],[8,"ExecutivePallet",0],[8,"BaseFee",0],[6,"Error",2256],[6,"Error",2257],[6,"Error",2258],[6,"Error",2259],[6,"Error",2260],[6,"Error",2255],[6,"Error",2254],[6,"Event",2256],[6,"Event",2255],[6,"Event",2261],[6,"Event",2257],[6,"Event",2262],[6,"Event",2263],[6,"Event",2258],[6,"Event",2260],[6,"Event",2254],[6,"Event",2259],[5,"Compact",2246],[1,"never"],[5,"OwnedFd",2264],[1,"f64"],[10,"IntoFilelike",2265],[10,"IntoSocketlike",2265],[10,"RationalArg",2266],[10,"TryInto",2267],[6,"Rounding",2266],[5,"RuntimeVersion",2268],[10,"From",2267],[5,"BlockLength",2230],[6,"ChainId",2227],[8,"EndpointId",2269],[8,"Precompiles",0],[6,"PostLogContent",2270],[5,"CallMetadata",2240],[1,"str"],[6,"Endpoint",2269],[10,"EndpointHandler",2269],[5,"Box",2271],[10,"Hash",2272],[10,"BuildHasher",2272],[10,"Hasher",2272],[5,"CrossDomainMessage",2228],[8,"MessageKey",2228],[8,"StorageChanges",2219],[8,"HashingFor",2221],[10,"Backend",2273],[5,"U256",2274],[8,"ChannelId",2227],[5,"OpaqueMetadata",2275],[5,"RuntimeMetadataPrefixed",2276],[10,"MultiplyArg",2266],[10,"UniqueSaturatedInto",2277],[8,"Credit",2278],[8,"DispatchInfoOf",2221],[8,"ProofRecorder",2219],[5,"FeeDetails",2279],[5,"RuntimeDispatchInfo",2279],[10,"Extension",2280],[10,"ReciprocalArg",2266],[10,"Serializer",2281],[6,"CallContext",2282],[10,"Into",2267],[8,"MessageId",2228],[5,"Transfers",2227],[5,"TypeId",2283],[5,"Type",2284],[8,"TransactionValidity",2235],[6,"TransactionSource",2235],[5,"EncodableOpaqueLeaf",2285],[5,"Proof",2285],[8,"Hash",0],[5,"UncheckedExtrinsic",2286],[10,"SignedExtension",2221],[5,"UncheckedExtrinsic",2287],[8,"BlockId",0],[8,"SystemConfig",0],[8,"TransactionPaymentConfig",0],[8,"EthereumConfig",0],[8,"EVMConfig",0],[8,"EVMChainIdConfig",0],[8,"BaseFeeConfig",0],[8,"BalancesConfig",0],[8,"GenesisConfig",0],[8,"SignedBlock",0],[5,"DustRemovalHandler",0],[5,"FinalDomainTransactionByteFee",0],[5,"ExtrinsicStorageFees",0],[5,"OnXDMRewards",0],[5,"MmrProofVerifier",0],[5,"StorageKeys",0],[5,"FindAuthorTruncated",0],[5,"EVMCurrencyAdapter",0],[5,"BaseFeeThreshold",0],[5,"Version",0],[5,"BlockHashCount",0],[5,"RuntimeBlockLength",0],[5,"RuntimeBlockWeights",0],[5,"ExistentialDeposit",0],[5,"MaxLocks",0],[5,"MaxReserves",0],[5,"OperationalFeeMultiplier",0],[5,"DomainChainByteFee",0],[5,"SelfChainId",0],[5,"ChannelReserveFee",0],[5,"TransporterEndpointId",0],[5,"BlockGasLimit",0],[5,"PrecompilesValue",0],[5,"WeightPerGas",0],[5,"GasLimitPovSizeRatio",0],[5,"SuicideQuickClearLimit",0],[5,"PostOnlyBlockHash",0],[5,"BoundDivision",0],[5,"DefaultBaseFeePerGas",0],[5,"DefaultElasticity",0],[5,"PalletInfo",0],[5,"RuntimeApi",0],[8,"SelfDomainIdConfig",0],[8,"CheckedExtrinsic",0],[8,"SudoConfig",0],[8,"BlockId",2140],[8,"Header",2140],[8,"Block",2140]],"b":[[392,"impl-ConvertTransaction%3CUncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E-for-TransactionConverter"],[393,"impl-ConvertTransaction%3COpaqueExtrinsic%3E-for-TransactionConverter"],[464,"impl-Permill"],[465,"impl-PerThing-for-Permill"],[466,"impl-PerThing-for-Perbill"],[467,"impl-Perbill"],[606,"impl-Div-for-Permill"],[607,"impl-Div%3CN%3E-for-Permill"],[608,"impl-Div%3CN%3E-for-Perbill"],[609,"impl-Div-for-Perbill"],[798,"impl-Debug-for-MultiAddress%3CAccountId,+AccountIndex%3E"],[799,"impl-Display-for-MultiAddress%3CAccountId,+AccountIndex%3E"],[834,"impl-From%3CRawOrigin%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[835,"impl-From%3COriginCaller%3E-for-RuntimeOrigin"],[836,"impl-From%3COption%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[837,"impl-From%3CRawOrigin%3E-for-RuntimeOrigin"],[847,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[848,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[849,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[850,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[851,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[852,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[853,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[854,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[856,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[857,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[858,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[859,"impl-From%3CRawOrigin%3E-for-OriginCaller"],[861,"impl-From%3CRawOrigin%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-OriginCaller"],[862,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[864,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[865,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[866,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[867,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[868,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[869,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[870,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[872,"impl-From%3CEvent%3E-for-RuntimeEvent"],[873,"impl-From%3CEvent%3E-for-RuntimeEvent"],[874,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[875,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[876,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[877,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[878,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[879,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[880,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[892,"impl-Permill"],[893,"impl-PerThing-for-Permill"],[894,"impl-Perbill"],[895,"impl-PerThing-for-Perbill"],[1000,"impl-Permill"],[1001,"impl-PerThing-for-Permill"],[1002,"impl-PerThing-for-Perbill"],[1003,"impl-Perbill"],[1123,"impl-Get%3C_I%3E-for-Version"],[1124,"impl-Version"],[1125,"impl-TypedGet-for-Version"],[1126,"impl-BlockHashCount"],[1127,"impl-TypedGet-for-BlockHashCount"],[1128,"impl-Get%3C_I%3E-for-BlockHashCount"],[1129,"impl-TypedGet-for-RuntimeBlockLength"],[1130,"impl-RuntimeBlockLength"],[1131,"impl-Get%3C_I%3E-for-RuntimeBlockLength"],[1132,"impl-TypedGet-for-RuntimeBlockWeights"],[1133,"impl-Get%3C_I%3E-for-RuntimeBlockWeights"],[1134,"impl-RuntimeBlockWeights"],[1135,"impl-TypedGet-for-ExistentialDeposit"],[1136,"impl-Get%3C_I%3E-for-ExistentialDeposit"],[1137,"impl-ExistentialDeposit"],[1138,"impl-TypedGet-for-MaxLocks"],[1139,"impl-Get%3C_I%3E-for-MaxLocks"],[1140,"impl-MaxLocks"],[1141,"impl-TypedGet-for-MaxReserves"],[1142,"impl-Get%3C_I%3E-for-MaxReserves"],[1143,"impl-MaxReserves"],[1144,"impl-Get%3C_I%3E-for-OperationalFeeMultiplier"],[1145,"impl-TypedGet-for-OperationalFeeMultiplier"],[1146,"impl-OperationalFeeMultiplier"],[1147,"impl-TypedGet-for-DomainChainByteFee"],[1148,"impl-Get%3C_I%3E-for-DomainChainByteFee"],[1149,"impl-DomainChainByteFee"],[1150,"impl-TypedGet-for-SelfChainId"],[1151,"impl-SelfChainId"],[1152,"impl-Get%3C_I%3E-for-SelfChainId"],[1153,"impl-TypedGet-for-ChannelReserveFee"],[1154,"impl-ChannelReserveFee"],[1155,"impl-Get%3C_I%3E-for-ChannelReserveFee"],[1156,"impl-TypedGet-for-TransporterEndpointId"],[1157,"impl-Get%3C_I%3E-for-TransporterEndpointId"],[1158,"impl-TransporterEndpointId"],[1159,"impl-BlockGasLimit"],[1160,"impl-TypedGet-for-BlockGasLimit"],[1161,"impl-Get%3C_I%3E-for-BlockGasLimit"],[1162,"impl-PrecompilesValue"],[1163,"impl-Get%3C_I%3E-for-PrecompilesValue"],[1164,"impl-TypedGet-for-PrecompilesValue"],[1165,"impl-Get%3C_I%3E-for-WeightPerGas"],[1166,"impl-TypedGet-for-WeightPerGas"],[1167,"impl-WeightPerGas"],[1168,"impl-GasLimitPovSizeRatio"],[1169,"impl-Get%3C_I%3E-for-GasLimitPovSizeRatio"],[1170,"impl-TypedGet-for-GasLimitPovSizeRatio"],[1171,"impl-SuicideQuickClearLimit"],[1172,"impl-Get%3C_I%3E-for-SuicideQuickClearLimit"],[1173,"impl-TypedGet-for-SuicideQuickClearLimit"],[1174,"impl-TypedGet-for-PostOnlyBlockHash"],[1175,"impl-Get%3C_I%3E-for-PostOnlyBlockHash"],[1176,"impl-PostOnlyBlockHash"],[1177,"impl-TypedGet-for-BoundDivision"],[1178,"impl-BoundDivision"],[1179,"impl-Get%3C_I%3E-for-BoundDivision"],[1180,"impl-TypedGet-for-DefaultBaseFeePerGas"],[1181,"impl-Get%3C_I%3E-for-DefaultBaseFeePerGas"],[1182,"impl-DefaultBaseFeePerGas"],[1183,"impl-TypedGet-for-DefaultElasticity"],[1184,"impl-Get%3C_I%3E-for-DefaultElasticity"],[1185,"impl-DefaultElasticity"],[1490,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1491,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1492,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1493,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1494,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1495,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1496,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1497,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1498,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1499,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1500,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1504,"impl-Zero-for-Permill"],[1505,"impl-Permill"],[1506,"impl-Zero-for-Perbill"],[1507,"impl-Perbill"],[1527,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1528,"impl-Runtime"],[1529,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1530,"impl-Runtime"],[1531,"impl-Runtime"],[1532,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1538,"impl-Mul-for-Permill"],[1539,"impl-Mul%3CN%3E-for-Permill"],[1540,"impl-Mul%3CWeight%3E-for-Permill"],[1541,"impl-Mul-for-Perbill"],[1542,"impl-Mul%3CWeight%3E-for-Perbill"],[1543,"impl-Mul%3CN%3E-for-Perbill"],[1551,"impl-OriginTrait-for-RuntimeOrigin"],[1552,"impl-RuntimeOrigin"],[1557,"impl-One-for-Permill"],[1558,"impl-Permill"],[1559,"impl-One-for-Perbill"],[1560,"impl-Perbill"],[1584,"impl-OriginTrait-for-RuntimeOrigin"],[1585,"impl-RuntimeOrigin"],[1587,"impl-SaturatingAdd-for-Permill"],[1588,"impl-Saturating-for-Permill"],[1589,"impl-SaturatingAdd-for-Perbill"],[1590,"impl-Saturating-for-Perbill"],[1603,"impl-Saturating-for-Permill"],[1604,"impl-SaturatingSub-for-Permill"],[1605,"impl-SaturatingSub-for-Perbill"],[1606,"impl-Saturating-for-Perbill"],[1617,"impl-OriginTrait-for-RuntimeOrigin"],[1618,"impl-RuntimeOrigin"],[1773,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1774,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1775,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1776,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1777,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1778,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1780,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1781,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1782,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[1783,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1784,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1785,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1786,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1787,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1788,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1789,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[1791,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2135,"impl-Permill"],[2136,"impl-Zero-for-Permill"],[2137,"impl-Zero-for-Perbill"],[2138,"impl-Perbill"],[2177,"impl-From%3CUncheckedExtrinsic%3CAddress,+Call,+Signature,+Extra%3E%3E-for-OpaqueExtrinsic"],[2178,"impl-From%3CUncheckedExtrinsic%3CAddress,+Call,+Signature,+Extra%3E%3E-for-OpaqueExtrinsic"]]}],\
["evm_domain_test_runtime",{"doc":"","t":"IIPPIIIIPPPIIPPIFIIPFFIIFFFIFFFFIPPPIIIFIPPPPIIIPPFFFFSIIPIGPPFFIPPPPFGIPFFGFFFFIFPFFFFFGGGGFGGFGGFIIFIIIFIPPPIFIPPPIIPFIPIIPPPFISFPSSSFNNNNNNNNNNNNNNNNNNOOOOOONNNONNNCNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNHNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNCONNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNONNNNNNNNNNNNNONNNOOOOPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHIIIPIPFNNNNNNNNNNNNNNNNNONNNNNNNNNOONNNNNNNNNONNNNNNNOONNONNNNNNNNNNNNNNN","n":["AccountId","Address","Address20","Address32","AllPalletsWithSystem","AllPalletsWithoutSystem","Balance","Balances","Balances","Balances","Balances","BalancesConfig","BaseFee","BaseFee","BaseFee","BaseFeeConfig","BaseFeeThreshold","Block","BlockFees","BlockFees","BlockGasLimit","BlockHashCount","BlockId","BlockNumber","BoundDivision","ChannelReserveFee","CheckExtrinsicsValidityError","CheckedExtrinsic","DecodeExtrinsicError","DefaultBaseFeePerGas","DefaultElasticity","DomainChainByteFee","EVM","EVM","EVM","EVM","EVMChainId","EVMChainIdConfig","EVMConfig","EVMCurrencyAdapter","Ethereum","Ethereum","Ethereum","Ethereum","Ethereum","EthereumConfig","Executive","ExecutivePallet","ExecutivePallet","ExecutivePallet","ExistentialDeposit","ExtrinsicStorageFees","FinalDomainTransactionByteFee","FindAuthorTruncated","GAS_PER_SECOND","GenesisConfig","Hash","Hash","Header","HoldIdentifier","Id","Index","MaxLocks","MaxReserves","Messenger","Messenger","Messenger","Messenger","Messenger","MmrProofVerifier","MultiAddress","Nonce","Number","OnXDMRewards","OperationalFeeMultiplier","OriginCaller","PalletInfo","Perbill","Permill","PostOnlyBlockHash","Precompiles","PrecompilesValue","Raw","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeBlockLength","RuntimeBlockWeights","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","RuntimeTask","SelfChainId","SelfDomainId","SelfDomainIdConfig","SessionKeys","Signature","SignedBlock","SignedExtra","StorageKeys","Sudo","Sudo","Sudo","Sudo","SudoConfig","SuicideQuickClearLimit","System","System","System","System","SystemConfig","Timestamp","Timestamp","TransactionConverter","TransactionPayment","TransactionPayment","TransactionPaymentConfig","Transporter","Transporter","Transporter","Transporter","TransporterEndpointId","UncheckedExtrinsic","VERSION","Version","Void","WASM_BINARY","WASM_BINARY_BLOATY","WEIGHT_PER_GAS","WeightPerGas","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_config","_config","_marker","_marker","_marker","_marker","account_basic","account_code_at","account_nonce","accounts","add","add","add_filter","api","api_version","apply_extrinsic","apply_extrinsic_with_post_state_root","apply_self_contained","as_system_ref","assimilate_storage","author","balances","balances","balances","base_fee","base_fee","base_fee_per_gas","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block","block_digest","block_fees","block_messages","block_weight","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_config","call","caller","chain_id","chain_id","check_extrinsics_and_do_pre_dispatch","check_inherents","check_self_contained","checked_add","checked_add","checked_mul","checked_mul","checked_sub","checked_sub","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","confirmed_domain_block_storage_key","confirmed_domain_block_storage_key","consensus_chain_byte_fee","construct_consensus_chain_byte_fee_extrinsic","construct_domain_update_chain_allowlist_extrinsic","construct_runtime_api","construct_set_code_extrinsic","construct_timestamp_extrinsic","convert_transaction","convert_transaction","convert_transaction","correct_and_deposit_fee","crate_version","create","create_default_config","current_all","current_block","current_receipts","current_transaction_statuses","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_extrinsic","decode_from","decode_from","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_sub","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","digest","dispatch","dispatch_bypass_filter","div","div","div","div","domain_chains_allowlist_update","domain_id","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elasticity","elasticity","encode","encode","encode","encode","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","ethereum","ethereum","evm","evm","evm_chain_id","evm_chain_id","execute_block","execute_in_transaction","extract_proof","extract_signer","extract_signer","extract_signer","extrinsic_era","extrinsic_filter","extrinsic_index","extrinsic_weight","extrinsics","extrinsics_root","filter_call","finalize_block","find_author","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_balance","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_fd","from_filelike","from_float","from_float","from_float","from_float","from_into_filelike","from_into_socketlike","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_percent","from_percent","from_perthousand","from_perthousand","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","function","gas_limit_multiplier_support","gas_price","generate","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_endpoint_handler","get_hash","get_module_names","get_open_channel_for_chain","get_raw","has_api","has_api_with","hash","header","ideal","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response_message_unsigned","inbox_response_storage_key","inbox_responses_storage_key","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","initialize_block_with_post_state_root","int_div","int_div","int_mul","int_mul","intermediate_roots","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_clear","is_clear","is_feeless","is_inherent_extrinsic","is_one","is_one","is_self_contained","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_valid","is_within_tx_range","is_xdm_valid","is_zero","is_zero","is_zero","is_zero","iter","justifications","key","key_ids","lower","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","max_value","max_value","messenger_channel","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","min_value","min_value","min_value","min_value","module_name","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_floor","mul_floor","multiplier","name","name_hash","none","none","number","offchain_worker","on_storage_fees_charged","on_xdm_rewards","one","one","one","one","opaque","operator","outbox_message_unsigned","outbox_storage_key","outbox_storage_key","parent_hash","partial_cmp","partial_cmp","partial_cmp","pay_priority_fee","pending_block","phantom","pow","pow","pre_dispatch","pre_dispatch_self_contained","proof_recorder","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","record_proof","register_extension","reset_filter","root","root","run","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_sub","saturating_sub","saturating_sub","saturating_sub","self_domain_id","self_domain_id","serialize","serialize","serialize","serialize","set_call_context","set_caller_from","should_relay_inbox_message_response","should_relay_outbox_message","signed","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","square","square","state_root","storage_at","sub","sub","sudo","sudo","system","system","system","task_index","tcmp","tcmp","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_payment","transaction_payment","transaction_validity_error","transfers","transfers_storage_key","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upper","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate_self_contained","validate_transaction","validate_unsigned","verify_proof_and_extract_consensus_state_root","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","withdraw_fee","zero","zero","zero","zero","dispatch","AccountId","Block","BlockId","Hash","Header","Number","UncheckedExtrinsic","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","digest","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics","extrinsics_root","fmt","from","from","from","from_bytes","from_mut","from_mut","from_ref","from_ref","header","identity","init","into","into_key","into_mut","into_ref","is_clear","number","parent_hash","serialize","size_hint","state_root","to_keyed_vec","to_owned","try_from","try_into","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","using_encoded","vzip"],"q":[[0,"evm_domain_test_runtime"],[2199,"evm_domain_test_runtime::api"],[2200,"evm_domain_test_runtime::opaque"],[2273,"dyn_clone::sealed"],[2274,"primitive_types"],[2275,"evm::backend"],[2276,"alloc::vec"],[2277,"core::ops::function"],[2278,"core::option"],[2279,"sp_api"],[2280,"core::result"],[2281,"sp_runtime::traits"],[2282,"sp_api"],[2283,"sp_runtime::traits"],[2284,"sp_storage"],[2285,"alloc::string"],[2286,"sp_runtime::generic::digest"],[2287,"sp_domains"],[2288,"sp_messenger::messages"],[2289,"sp_weights::weight_v2"],[2290,"sp_genesis_builder"],[2291,"primitive_types"],[2292,"sp_runtime"],[2293,"sp_inherents"],[2294,"core::clone"],[2295,"core::cmp"],[2296,"sp_domains"],[2297,"ethereum::transaction"],[2298,"frame_support::traits::metadata"],[2299,"fp_evm"],[2300,"ethereum::receipt"],[2301,"fp_rpc"],[2302,"parity_scale_codec::error"],[2303,"parity_scale_codec::codec"],[2304,"parity_scale_codec::codec"],[2305,"sp_core::crypto"],[2306,"serde::de"],[2307,"frame_support::dispatch"],[2308,"parity_scale_codec::codec"],[2309,"frame_support::dispatch"],[2310,"sp_runtime"],[2311,"core::fmt"],[2312,"core::fmt"],[2313,"pallet_ethereum::pallet"],[2314,"frame_support::dispatch"],[2315,"pallet_sudo::pallet"],[2316,"pallet_transporter::pallet"],[2317,"pallet_ethereum::pallet"],[2318,"pallet_balances::pallet"],[2319,"frame_system::pallet"],[2320,"pallet_transporter::pallet"],[2321,"pallet_ethereum::pallet"],[2322,"frame_system::pallet"],[2323,"io_lifetimes::portability"],[2324,"io_lifetimes::portability"],[2325,"core::convert"],[2326,"sp_arithmetic::per_things"],[2327,"core::convert"],[2328,"frame_system::limits"],[2329,"pallet_ethereum"],[2330,"frame_support::traits::metadata"],[2331,"core::hash"],[2332,"core::hash"],[2333,"subspace_core_primitives"],[2334,"frame_metadata"],[2335,"sp_core"],[2336,"sp_arithmetic::per_things"],[2337,"sp_runtime::traits"],[2338,"pallet_transaction_payment::types"],[2339,"sp_arithmetic::per_things"],[2340,"sp_core::traits"],[2341,"core::convert"],[2342,"scale_info::ty"],[2343,"sp_runtime::transaction_validity"],[2344,"sp_mmr_primitives"],[2345,"sp_runtime::traits"]],"d":["Some way of identifying an account on the chain. We …","The address format for describing accounts.","Its a 20 byte representation.","It’s a 32 byte representation.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","Balance of an account.","","","","","","","","","","","Block type as expected by this runtime.","","","EVM block gas limit is set to maximum to allow all the …","","BlockId type as expected by this runtime.","An index to a block.","","","","Extrinsic type that has already been checked.","","","","","","","","","","","","","","","","","","","Executive: handles dispatch to the various modules.","","","","","","","","Current approximation of the gas/s consumption considering …","","A hash of some data used by the chain.","Identify by block header hash.","Opaque block header type.","Balance hold identifier for this runtime.","It’s an account ID (pubkey).","It’s an account index.","","","","","","","","","A multi-format address wrapper for on-chain accounts.","Index of a transaction in the chain.","Identify by block number.","","","","Provides an implementation of <code>PalletInfo</code> to provide …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","","Precompiles we use for EVM","","It’s some arbitrary raw bytes.","","","Implements all runtime apis for the client side.","","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","An aggregation of all <code>Task</code> enums across all pallets …","","","","","Alias to 512-bit hash when used in the context of a …","A Block signed with a Justification","The SignedExtension to the basic transaction logic.","","","","","","","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtime.","","","","","","Approximate ratio of the amount of Weight per Gas. u64 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Full blockecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","","","","","","","","","","","","","","","","","","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A chain-specific digest of data useful for light clients …he accompanying extrinsics.","The merkle root of the extrinsics.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert to runtime origin with caller being system signed …","","Convert to runtime origin, using as filter: …","Convert to runtime origin using […","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","","","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","The function that should be called.","","","Generate a set of keys with optionally using the given …","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","","","","","","","","","","The block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","","","","","","","","","","","","","","","","See <code>PerThing::is_zero</code>.","","","See <code>PerThing::is_zero</code>.","","Block justification.","The <code>AccountId</code> of the sudo key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","","","","","Create with system none origin and …","The block number.","","","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","","Opaque types. These are used by the CLI to instantiate …","Primarily used for adding the operator signing key into …","","","","The parent hash.","","","","","","","","","","","","","","","","","","","","Create with system root origin and …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","","","","","","","","Create with system signed origin and …","Who this purports to be from and the number of extrinsics …","","","","","","","","","","","","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","The state trie merkle rootee <code>PerThing::zero</code>.","","See <code>PerThing::zero</code>.","","Opaque account identifier type.","Opaque block type.","Opaque block identifier type.","Identify by block header hash.","Opaque block header type.","Identify by block number.","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","A chain-specific digest of data useful for light clients …","","","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","","Returns the argument unchanged.","","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","The block header.","","","Calls <code>U::from(self)</code>.","","","","","The block number.","The parent hash.","","","The state trie merkle root","","","","","","","","","","","","","","",""],"i":[0,0,61,61,0,0,0,0,23,78,59,0,0,23,59,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,23,78,59,0,0,0,0,0,23,26,78,59,0,0,0,23,59,0,0,0,0,0,0,0,191,0,0,61,61,0,0,0,52,23,78,59,0,0,0,191,0,0,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,78,59,0,0,0,23,78,59,0,0,23,0,0,59,0,0,23,78,59,0,0,0,0,26,0,0,0,0,45,50,51,52,11,53,54,55,56,57,58,23,26,59,9,60,10,61,192,193,194,195,196,197,60,60,60,195,9,10,11,0,15,60,60,23,26,28,60,198,199,28,199,28,197,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,200,60,60,60,60,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,28,60,60,11,60,196,60,60,23,9,10,9,10,9,10,9,10,45,50,51,52,11,53,54,55,56,57,58,23,26,59,9,60,10,61,45,50,51,52,11,53,54,55,56,57,58,23,26,59,9,60,10,61,52,9,10,52,9,10,205,60,60,60,60,230,60,60,53,53,60,207,229,60,60,60,60,60,60,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,60,9,10,51,60,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,9,9,10,10,53,28,9,10,52,9,10,52,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,52,9,10,52,9,10,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,51,28,9,10,231,23,23,9,9,10,10,60,232,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,60,197,50,51,9,10,9,10,45,50,51,52,23,26,78,59,9,10,61,60,45,50,51,52,54,55,56,57,58,23,26,59,9,60,10,61,45,45,45,45,45,50,50,50,50,50,51,51,51,51,51,52,52,52,52,52,54,54,54,54,54,55,55,55,55,55,56,56,56,56,56,57,57,57,57,57,58,58,58,58,58,23,23,23,23,23,26,26,26,26,26,59,59,59,59,59,9,9,9,9,9,60,60,60,60,60,10,10,10,10,10,61,61,61,61,61,199,28,199,28,199,28,60,15,15,0,202,60,60,60,45,60,46,231,11,60,206,45,50,51,52,11,54,55,56,57,58,23,26,78,59,9,60,10,61,61,60,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,11,11,11,11,53,230,15,54,55,56,57,28,58,23,23,23,23,23,23,23,23,23,23,23,23,26,26,26,78,78,78,78,78,78,78,78,59,59,59,59,59,59,59,59,59,59,59,9,9,60,10,10,61,61,61,78,61,61,9,9,10,10,61,61,45,45,50,50,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,51,51,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,52,52,219,219,220,220,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,11,11,53,53,230,230,15,15,54,54,55,55,56,56,57,57,28,28,58,58,23,23,26,26,78,78,59,59,9,9,60,60,10,10,61,61,9,9,10,10,9,10,9,10,9,10,9,10,9,10,45,45,50,50,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,51,51,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,52,52,219,219,220,220,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,11,11,53,53,230,230,15,15,54,54,55,55,56,56,57,57,28,28,58,58,23,23,26,26,78,78,59,59,9,9,60,60,10,10,61,61,61,233,60,60,51,60,201,209,209,209,210,210,210,211,211,211,212,212,212,213,213,213,214,214,214,215,215,215,216,216,216,217,217,217,218,218,218,219,219,219,220,220,220,221,221,221,222,222,222,223,223,223,224,224,224,225,225,225,226,226,226,227,227,227,228,228,228,23,23,23,60,61,23,60,51,15,15,61,46,208,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,60,60,205,229,60,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,60,60,9,10,9,10,60,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,11,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,51,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,15,26,9,10,23,60,9,10,23,23,23,23,23,23,23,23,23,23,23,23,58,60,60,9,9,10,10,58,200,234,51,208,52,54,55,56,57,26,9,10,9,9,10,10,52,60,60,60,60,60,60,9,9,10,10,229,9,9,9,10,10,10,9,10,9,10,193,229,229,11,11,231,60,202,203,9,9,10,10,0,51,60,205,60,231,52,9,10,207,60,232,9,10,60,23,15,60,60,60,60,15,15,11,11,11,58,9,9,10,10,9,10,9,10,9,10,9,10,9,10,9,10,9,9,10,10,199,28,51,28,9,10,15,11,60,60,11,11,233,45,50,51,52,23,26,78,59,9,10,61,9,10,231,60,9,10,199,28,199,28,26,58,9,10,60,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,45,50,51,52,11,53,54,55,56,57,58,23,26,59,9,60,10,61,61,199,28,45,60,60,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,78,78,78,78,78,78,78,59,59,59,59,59,59,59,59,59,59,59,9,60,10,61,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,11,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,45,50,51,52,54,55,56,57,58,23,26,78,59,9,10,61,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,45,50,51,52,54,55,56,57,58,23,26,78,59,9,60,10,61,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,9,10,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,208,45,50,50,51,51,52,54,55,56,57,58,23,26,59,9,9,10,10,61,23,60,60,204,60,45,50,201,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,52,219,220,221,222,223,224,225,226,227,228,229,11,53,230,15,54,55,56,57,28,58,23,26,78,59,9,60,10,61,58,207,9,9,10,10,0,0,0,0,235,0,235,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,231,69,69,69,69,69,69,69,69,69,236,231,69,69,69,69,69,69,69,69,69,236,69,69,69,69,69,69,69,231,231,69,69,231,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}00000000000000000``````{fh}{f{{l{j}}}}{nA`}`{{AbAb}}{{AdAd}}{{Afe}d{}{{Al{c}{{Ah{Aj}}}}}}`{{{An{ce}}}{{Bf{{Bb{B`}}Bd}}}Bh{{Bj{c}}}}{{}Bl}{{}{{l{j}}}}{{Bnc}{{Bb{{Cb{{C`{Bn}}}}}}}{}}{Cd{{Bb{Cf}}}}{{ChCj}{{Bf{dCl}}}}{{}f}``````{c{{Cn{j}}}{}}000000000000000{c{{l{j}}}{}}0000000000000001111111111111111`{{}D`}{{}{{Dd{Db}}}}{{}Df}{{}Dh}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Chd}{{{l{j}}}Dj}{{ff{l{j}}DlDl{Bb{Dl}}{Bb{Dl}}{Bb{Dl}}Aj{Bb{{l{{E`{f{l{Dn}}}}}}}}}{{Bf{EbEd}}}}{Afc{}}{{}Ef}`{{lEh}{{Bf{dEj}}}}{{ElEn}F`}{Bn{{Bb{{Bf{cFb}}}}}{}}{{AbAb}{{Bb{Ab}}}}{{AdAd}{{Bb{Ad}}}}1010{{}c{}}0{EjEj}{FdFd}{FfFf}{FhFh}{AfAf}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{GdGd}{BnBn}{CdCd}{GfGf}{AbAb}{GhGh}{AdAd}{{{Gj{ce}}}{{Gj{ce}}}GlGl}{{ce}d{}{}}00000000000000000{{FhFh}Gn}{{AbAb}Gn}{{AdAd}Gn}{{ce}Gn{}{}}00{H`{{Bb{{l{j}}}}}}{H`{{l{j}}}}{{}Db}{Db}{Hb}{e{{Hd{g}}}Bh{{Bj{c}}}{}}{{{l{j}}}{{l{j}}}}{Hf}{{FjHh}Hj}{{FjHh}Hl}{Hh}{{fDlDlc}c{}}{{}{{Bb{Hn}}}}{{f{l{j}}DlDl{Bb{Dl}}{Bb{Dl}}{Bb{Dl}}Aj{Bb{{l{{E`{f{l{Dn}}}}}}}}}{{Bf{I`Ed}}}}{{}{{l{j}}}}{{}{{E`{{Bb{Ib}}{Bb{{l{Id}}}}{Bb{{l{If}}}}}}}}{{}{{Bb{Ib}}}}{{}{{Bb{{l{Id}}}}}}{{}{{Bb{{l{If}}}}}}{c{{Bf{EjIh}}}Ij}{c{{Bf{FdIh}}}Ij}{c{{Bf{FfIh}}}Ij}{c{{Bf{FhIh}}}Ij}{c{{Bf{FlIh}}}Ij}{c{{Bf{FnIh}}}Ij}{c{{Bf{G`Ih}}}Ij}{c{{Bf{GbIh}}}Ij}{c{{Bf{GdIh}}}Ij}{c{{Bf{BnIh}}}Ij}{c{{Bf{CdIh}}}Ij}{c{{Bf{IlIh}}}Ij}{c{{Bf{GfIh}}}Ij}{c{{Bf{AbIh}}}Ij}{c{{Bf{AdIh}}}Ij}{c{{Bf{{Gj{eg}}Ih}}}IjInJ`}{{{Jb{j}}}{{Bf{cIh}}}{}}000000000000000{{B`{Jb{j}}}{{Bf{cIh}}}{}}000000000000000{Hj{{Bf{Fd}}}}{{}{{Bf{AbIh}}}}{{}{{Bf{AdIh}}}}{{{Jb{j}}}{{Bb{{l{{E`{{l{j}}Jd}}}}}}}}{{{l{j}}}{{Bb{{l{{E`{{l{j}}Jd}}}}}}}}{{B`c}{{Bf{eIh}}}Ij{}}000000000000000{Ab}{AbB`}{Ad}{AdB`}{{}Fj}{{}Ch}{{}Ab}{{}Ad}{{ce}e{}{}}00000{{ce}d{}{}}011{cd{}}000221122222222{Jfc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{c{{Bf{Ff}}}Jh}{c{{Bf{Ch}}}Jh}{c{{Bf{Ab}}}Jh}{c{{Bf{Ad}}}Jh}`{{BnAf}Jj}0{{AbAb}}{{Abc}{}{}}{{AdAd}}{{Adc}{}{}}{H`{{Bb{Hb}}}}`{Jfd}00000000000000000000000000000000000000000000000000{{}{{Bb{Ab}}}}`{Fd{{l{j}}}}{Ff{{l{j}}}}{Ab{{l{j}}}}{Ad{{l{j}}}}{Ab}{Ad}{{Ejc}d{JlJn}}{{Fdc}d{JlJn}}{{Ffc}d{JlJn}}{{Fhc}d{JlJn}}{{Bnc}d{JlJn}}{{Cdc}d{JlJn}}{{Ilc}d{JlJn}}{{Gfc}d{JlJn}}{{Abc}d{JlJn}}{{Adc}d{JlJn}}{{{Gj{ce}}g}dK`J`{JlJn}}{{}{{Bf{dB`}}}}{{EjEj}Aj}{{FdFd}Aj}{{FfFf}Aj}{{FhFh}Aj}{{FlFl}Aj}{{FnFn}Aj}{{G`G`}Aj}{{GbGb}Aj}{{GdGd}Aj}{{BnBn}Aj}{{CdCd}Aj}{{GfGf}Aj}{{AbAb}Aj}{{GhGh}Aj}{{AdAd}Aj}{{{Gj{ce}}{Gj{ce}}}AjKbKb}{{ce}Aj{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000``````{Eld}{{{An{ce}}i}gBh{{Bj{c}}}{}{{Kf{{An{ce}}}{{Ah{{Kd{g}}}}}}}}{{{An{ce}}}{{Bb{Kh}}}Bh{{Bj{c}}}}{{{l{Hl}}}{{l{{E`{{Bb{Kj}}Hl}}}}}}{Hl{{E`{{Bb{n}}Kl}}}}{l{{l{{E`{{Bb{Kj}}}}}}}}{{}{{Bb{Kn}}}}{l{{l{Hh}}}}`{{}Dh}``{{Afc}Aj{}}{{}}{c{{Bb{f}}}{{Ld{}{{L`{{E`{Lb{Jb{j}}}}}}}}}}{{EjLf}{{Bf{dLh}}}}{{FdLf}{{Bf{dLh}}}}{{FfLf}Lj}{{FhLf}Lj}{{AfLf}{{Bf{dLh}}}}{{FlLf}Lj}{{FnLf}Lj}{{G`Lf}Lj}{{GbLf}Lj}{{GdLf}Lj}{{BnLf}Lj}{{CdLf}Lj}{{IlLf}Lj}{{GfLf}Lj}{{AbLf}{{Bf{dLh}}}}{{GhLf}Lj}{{AdLf}{{Bf{dLh}}}}{{{Gj{ce}}Lf}{{Bf{dLh}}}LlLl}0{nDb}{cc{}}000000000000000000000000000000000{BbAf}{CdAf}{{{Ln{Gh}}}Af}{M`Af}444444444{{{Md{MbGh}}}Bn}{{{Md{MfGh}}}Bn}{{{Md{MhGh}}}Bn}{{{Md{MjGh}}}Bn}{{{Md{MlGh}}}Bn}{{{Md{MnGh}}}Bn}{{{Md{N`Gh}}}Bn}{{{Md{NbGh}}}Bn}{{{Md{NdGh}}}Bn}={{{Md{NfGh}}}Bn}{{{Md{NhGh}}}Bn}{{{Ln{Gh}}}Cd}{M`Cd}{cc{}}{{{Nj{Gh}}}Il}{{{Nl{Gh}}}Il}{{{Nn{Gh}}}Il}{{{O`{Gh}}}Il}{{{Ob{Gh}}}Il}{{{Od{Gh}}}Il}6{{{Of{Gh}}}Il}{{{Oh{Gh}}}Gf}{{{Oj{Gh}}}Gf}{{{Ol{Gh}}}Gf}{OnGf};{{{A`{Gh}}}Gf}{{{Ab{Gh}}}Gf}{{{Ad{Gh}}}Gf}{{{Af{Gh}}}Gf}{AhGf}{{{Aj{Gh}}}Gf}{{{Al{Ab}}}Ab}{cc{}}0{{{Al{Ad}}}Ad}1{c{{Gj{ce}}}{}{}}2{Anc{}}{Ed{{Bb{Il}}}}{AA`c{}}0{AAbAb}0{AAbAd}0{ceAAd{}}{ceAAf{}}{ce{}{}}::0:0:0:0:00:0::0:00:0:0:0::00::0:0:00::00::00::00::00:0:0::00::00::00:0:0:0::00::0:0:00::00::00:0::0{B`Ab}{{}Ab}{B`Ad}{{}Ad}3131{{cc}Ab{AAh{AAj{B`}}{AAj{Ef}}}}{{cc}Ad{AAh{AAj{B`}}{AAj{Ef}}}}10{{ccAAl}{{Bf{Abd}}}{}}{{ccAAl}{{Bf{Add}}}{}}8{cc{}}0909909009090990090909099009090990099009900990909009090909909009900909099009909009909090909009900909>`{{}d}{{}Dl}{{{Bb{{l{j}}}}}{{l{j}}}}0{{}Db}{{}AAn}{{}c{{AB`{AAn}}}}1{{}Eh}0{{}c{{AB`{Eh}}}}{{}ABb}0{{}c{{AB`{ABb}}}}{{}c{{AB`{ABd}}}}{{}ABd}08{{}c{{AB`{Db}}}}9{{}c{{AB`{B`}}}}{{}B`}0100{{}j}0{{}c{{AB`{j}}}}4=={{}ABf}{{}c{{AB`{ABf}}}}1??6{{}c{{AB`{ABh}}}}{{}ABh}0{{}c{{AB`{Dl}}}}{{}Dl}0{{}ABj}0{{}c{{AB`{ABj}}}}{{}Dh}0{{}c{{AB`{Dh}}}}=<<{{}c{{AB`{ABl}}}}{{}ABl}0766667{{}Ab}0{{}c{{AB`{Ab}}}}{BnABn}{AC`{{Jb{AC`}}}}{BnKl}{ACb{{Bb{{ACf{ACd}}}}}}{{ce}Ef{AChJn}ACj}{{}{{Jb{AC`}}}}{ABf{{Bb{ACl}}}}{{FfJd}{{Jb{j}}}}{{{An{ce}}}{{Bf{AjBd}}}Bh{{Bj{c}}}}{{{An{ce}}g}{{Bf{AjBd}}}Bh{{Bj{c}}}{{Al{B`}{{Ah{Aj}}}}}}{{{Gj{ce}}g}dAChAChACn}`<{c{{l{j}}}{}}000000000000000{AD`Bb}{ADb{{l{j}}}}{{ABfADb}{{Bb{{l{j}}}}}}{{}{{Bb{Jf}}}}{Enl}{{}Jf}00000000000000000000000000000000000000000000000000{{}d}{{}{{l{j}}}}{{AbAb}B`}{{AdAd}B`}{{AbB`}Ab}{{AdB`}Ad}{{}{{l{{Cn{j}}}}}}{ce{}{}}00000000000000000000000000000000000000000000000000{Afc{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{Ff{{l{{E`{{l{j}}Jd}}}}}}222222222222222222222222222222222222222222222222222{{{An{ce}}g}{{Bf{{ADd{c}}Cl}}}Bh{{Bj{c}}}{{ADh{{ADf{c}}}}}}{Cd{{Bb{Cf}}}}{cAj{}}0{{Bnc}Aj{}}{{}Aj}{AbAj}{AdAj}{BnAj}{Bn{{Bb{{Md{NfGh}}}}}}{Bn{{Bb{{Md{N`Gh}}}}}}{Bn{{Bb{{Md{NdGh}}}}}}{Bn{{Bb{{Md{MfGh}}}}}}{Bn{{Bb{{Md{NhGh}}}}}}{Bn{{Bb{{Md{NbGh}}}}}}{Bn{{Bb{{Md{MhGh}}}}}}{Bn{{Bb{{Md{MlGh}}}}}}{Bn{{Bb{{Md{MnGh}}}}}}{Bn{{Bb{{Md{MbGh}}}}}}{Bn{{Bb{{Md{MjGh}}}}}}{GdAj}{{ADjADj}Aj}{{{l{j}}}{{Bb{Aj}}}}{AbAj}0{AdAj}0{{}c{}}``{{}{{Jb{Jd}}}}{{}Ab}{{}Jf}0000000133{{}Ad}{{ABfACl}Fh}{{}ADl}{{}ADn}{B`{{Bb{ADn}}}}0{{}{{l{B`}}}}09759{{}{{Bb{AC`}}}}{{AbDh}Dh}{{Abc}{}{}}{{AbAb}}{{AdDh}Dh}{{Adc}{}{}}{{AdAd}}{{Abc}c{AE`{AEb{B`}}}}{{Adc}c{AE`{AEb{B`}}}}10`8{{}{{Bb{{Cn{j}}}}}}{{}Af}0`{{}d}{{DbB`}d}{Dbd}{{}Ab}0{{}Ad}0``{AD`Bb}{{ABfADb}{{Bb{{l{j}}}}}}{ADb{{l{j}}}}`{{FhFh}{{Bb{Gn}}}}{{AbAb}{{Bb{Gn}}}}{{AdAd}{{Bb{Gn}}}}{cd{}}{l{{E`{{Bb{Ib}}{Bb{{l{If}}}}}}}}`{{AbJf}}{{AdJf}}{c{{Bf{dFb}}}{}}{{Bnc{AEd{Bn}}Jf}{{Bb{{Bf{dFb}}}}}{}}{{{An{ce}}}{{Bb{{AEf{c}}}}}Bh{{Bj{c}}}}{B`{{AEh{Db}}}}{B`{{AEj{Db}}}}{B`Db}{DhDb}{{{An{ce}}}dBh{{Bj{c}}}}{{{An{ce}}g}dBh{{Bj{c}}}AEl}{Afd}{{}Af}0{Gd{{Bf{dEd}}}}{{AbAb}Ab}0{{AdAd}Ad}0{{AbAbAAl}Ab}{{AdAdAAl}Ad}32{{AbJf}Ab}{{AdJf}Ad}{{Abc}c{AEn{AEb{B`}}}}{{Adc}c{AEn{AEb{B`}}}}10107766``{{Ffc}BfAF`}{{Chc}BfAF`}{{Abc}BfAF`}{{Adc}BfAF`}{{{An{ce}}AFb}dBh{{Bj{c}}}}{{Afc}d{{AFd{Af}}}}{{ABfAFf}Aj}0{cAf{}}{{}Af}`{EjJf}{FdJf}{FfJf}{FhJf}{BnJf}{CdJf}{IlJf}{GfJf}{AbJf}{AdJf}{{{Gj{ce}}}JfK`J`}{AbAb}{AdAd}`{{fDl}Dn}{{AbAb}}{{AdAd}}`````{GdB`}{{cee}Gn{}{}}0{{}Hf}{{c{Jb{j}}}{{l{j}}}{}}000000000000000{ce{}{}}00000000000000000{cCl{}}```{{}{{AFh{Db}}}}{{}{{l{j}}}}{c{{Bf{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Il{{Bf{{Od{Gh}}c}}}{}}1{Il{{Bf{{Ob{Gh}}c}}}{}}{Il{{Bf{{Nl{Gh}}c}}}{}}{Il{{Bf{{O`{Gh}}c}}}{}}{Il{{Bf{{Nn{Gh}}c}}}{}}{Il{{Bf{{Of{Gh}}c}}}{}}{Il{{Bf{{Nj{Gh}}c}}}{}}{Gf{{Bf{{A`{Gh}}c}}}{}}8{Gf{{Bf{{Ad{Gh}}c}}}{}}{Gf{{Bf{{Af{Gh}}c}}}{}}{Gf{{Bf{{Oh{Gh}}c}}}{}}{Gf{{Bf{{Aj{Gh}}c}}}{}}{Gf{{Bf{{Oj{Gh}}c}}}{}}{Gf{{Bf{Ahc}}}{}}{Gf{{Bf{{Ab{Gh}}c}}}{}}{Gf{{Bf{{Ol{Gh}}c}}}{}}{Gf{{Bf{Onc}}}{}}{c{{Bf{e}}}{}{}}000000000000000000000000000000000000000000000000000000{{Afg}{{Bf{eAf}}}{}{}{{Kf{c}{{Ah{{Bf{ec}}}}}}}}{c{{Cn{j}}}{}}0000000000000000000000000000000{c{{l{j}}}{}}000000000000000{cAFj{}}00000000000000000000000000000000000000000000000000{{}AFl}0000000000000000{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}Ab}{{cgAj}e{}{}{{Kf{{Jb{j}}}{{Ah{e}}}}}}{{Fde}c{}{{Kf{{Jb{j}}}{{Ah{c}}}}}}1{{Ffe}c{}{{Kf{{Jb{j}}}{{Ah{c}}}}}}2222222222{{Abe}c{}{{Kf{{Jb{j}}}{{Ah{c}}}}}}33{{Ade}c{}{{Kf{{Jb{j}}}{{Ah{c}}}}}}4{{Bnc{AEd{Bn}}Jf}{{Bb{AFn}}}{}}{AG`AFn}{{AG`c}AFn{}}{{AGbAGd}{{Bb{AGf}}}}{{}AAn};;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{GdDh}{{fDl}{{Bf{c{Nj{Gh}}}}}{}}<<{{}Ad}0{{AC`{Jb{j}}}{{Bb{{l{j}}}}}}```````{{cb}d{}}{c{{Cn{j}}}{}}{c{{l{j}}}{}}1{ce{}{}}0{{}c{}}{HjHj}{{ce}d{}{}}{c{{Bf{HjIh}}}Ij}{{{Jb{j}}}{{Bf{cIh}}}{}}{{B`{Jb{j}}}{{Bf{cIh}}}{}}{{B`c}{{Bf{eIh}}}Ij{}}{{}Hj}{Jfc{}}0{c{{Bf{Hj}}}Jh}`{Jfd}{Hj{{l{j}}}}{{Hjc}d{JlJn}}{{HjHj}Aj}{{ce}Aj{}{}}0000``{{HjLf}{{Bf{dLh}}}}{{{AGh{cegi}}}HjK`K`K`AGj}{cc{}}{{{AGl{cegi}}}HjK`K`K`AGj}{{{Jb{j}}}{{Bf{HjIh}}}}{ce{}{}}303`{c{{l{j}}}{}}{{}Jf}2222{cAj{}}``{{Hjc}BfAF`}{HjJf}`{{c{Jb{j}}}{{l{j}}}{}}6{c{{Bf{e}}}{}{}}00{c{{Cn{j}}}{}}07{cAFj{}}{{}AFl}::{{Hje}c{}{{Kf{{Jb{j}}}{{Ah{c}}}}}}{{cgAj}e{}{}{{Kf{{Jb{j}}}{{Ah{e}}}}}}<","c":[55,1050,1051],"p":[[5,"Private",2273],[1,"unit"],[5,"H160",2274],[5,"Basic",2275],[1,"u8"],[5,"Vec",2276],[8,"AccountId",0],[8,"Nonce",0],[5,"Permill",0],[5,"Perbill",0],[5,"RuntimeOrigin",0],[17,"Output"],[1,"bool"],[10,"Fn",2277],[5,"RuntimeApiImpl",0],[1,"u32"],[6,"Option",2278],[6,"ApiError",2279],[6,"Result",2280],[10,"Block",2281],[10,"CallApiAt",2279],[8,"ApplyExtrinsicResult",2282],[6,"RuntimeCall",0],[8,"PostDispatchInfoOf",2281],[8,"DispatchResultWithInfo",2282],[6,"OriginCaller",0],[6,"RawOrigin",2283],[5,"RuntimeGenesisConfig",0],[5,"Storage",2284],[5,"String",2285],[1,"array"],[5,"Digest",2286],[8,"Balance",0],[5,"BlockFees",2287],[5,"BlockMessagesWithStorageKey",2288],[5,"Weight",2289],[8,"Result",2290],[5,"U256",2274],[5,"H256",2274],[1,"tuple"],[8,"CallInfo",2291],[6,"DispatchError",2282],[1,"u64"],[8,"BlockNumber",0],[5,"CheckExtrinsicsValidityError",0],[8,"Block",0],[5,"InherentData",2292],[5,"CheckInherentsResult",2292],[6,"TransactionValidityError",2293],[5,"DecodeExtrinsicError",0],[5,"SessionKeys",0],[6,"HoldIdentifier",0],[5,"TransactionConverter",0],[6,"RuntimeSlashReason",0],[6,"RuntimeLockId",0],[6,"RuntimeHoldReason",0],[6,"RuntimeFreezeReason",0],[6,"RuntimeTask",0],[6,"RuntimeEvent",0],[5,"Runtime",0],[6,"MultiAddress",0],[10,"Clone",2294],[6,"Ordering",2295],[5,"DomainId",2287],[5,"DomainAllowlistUpdates",2287],[5,"ApiRef",2279],[8,"Moment",2296],[6,"TransactionV2",2297],[5,"UncheckedExtrinsic",2200],[8,"UncheckedExtrinsic",0],[5,"CrateVersion",2298],[8,"CreateInfo",2291],[8,"BlockV2",2299],[6,"ReceiptV3",2300],[5,"TransactionStatus",2301],[5,"Error",2302],[10,"Input",2303],[6,"RuntimeError",0],[10,"Decode",2303],[10,"HasCompact",2304],[1,"slice"],[5,"KeyTypeId",2305],[1,"usize"],[10,"Deserializer",2306],[8,"DispatchResultWithPostInfo",2283],[10,"Output",2303],[10,"Sized",2307],[10,"Encode",2303],[10,"PartialEq",2295],[6,"TransactionOutcome",2282],[10,"FnOnce",2277],[5,"StorageProof",2308],[8,"AccountId",2200],[5,"DispatchInfo",2283],[6,"Era",2309],[17,"Item"],[8,"ConsensusEngineId",2282],[10,"IntoIterator",2310],[5,"Formatter",2311],[5,"Error",2311],[8,"Result",2311],[10,"Debug",2311],[8,"Origin",2312],[8,"Origin",2313],[8,"System",0],[8,"CallableCallFor",2283],[8,"EVM",0],[8,"Messenger",0],[8,"Balances",0],[8,"Ethereum",0],[8,"Timestamp",0],[8,"BaseFee",0],[8,"BlockFees",0],[8,"Transporter",0],[8,"ExecutivePallet",0],[8,"Sudo",0],[6,"Error",2314],[6,"Error",2315],[6,"Error",2316],[6,"Error",2313],[6,"Error",2317],[6,"Error",2318],[6,"Error",2312],[6,"Event",2319],[6,"Event",2316],[6,"Event",2320],[6,"Event",2313],[6,"Event",2314],[6,"Event",2315],[6,"Event",2318],[6,"Event",2317],[6,"Event",2321],[6,"Event",2312],[5,"Compact",2304],[1,"never"],[5,"OwnedFd",2322],[1,"f64"],[10,"IntoFilelike",2323],[10,"IntoSocketlike",2323],[10,"RationalArg",2324],[10,"TryInto",2325],[6,"Rounding",2324],[5,"RuntimeVersion",2326],[10,"From",2325],[5,"BlockLength",2327],[5,"BlockWeights",2327],[6,"ChainId",2287],[8,"EndpointId",2328],[8,"Precompiles",0],[6,"PostLogContent",2329],[5,"CallMetadata",2298],[1,"str"],[6,"Endpoint",2328],[10,"EndpointHandler",2328],[5,"Box",2330],[10,"Hash",2331],[10,"BuildHasher",2331],[8,"ChannelId",2287],[10,"Hasher",2331],[5,"CrossDomainMessage",2288],[8,"MessageKey",2288],[8,"StorageChanges",2279],[8,"HashingFor",2281],[10,"Backend",2332],[5,"U256",2333],[5,"RuntimeMetadataPrefixed",2334],[5,"OpaqueMetadata",2335],[10,"MultiplyArg",2324],[10,"UniqueSaturatedInto",2336],[8,"DispatchInfoOf",2281],[8,"ProofRecorder",2279],[5,"FeeDetails",2337],[5,"RuntimeDispatchInfo",2337],[10,"Extension",2338],[10,"ReciprocalArg",2324],[10,"Serializer",2339],[6,"CallContext",2340],[10,"Into",2325],[8,"MessageId",2288],[5,"Transfers",2287],[5,"TypeId",2341],[5,"Type",2342],[8,"TransactionValidity",2293],[6,"TransactionSource",2293],[5,"EncodableOpaqueLeaf",2343],[5,"Proof",2343],[8,"Hash",0],[5,"UncheckedExtrinsic",2344],[10,"SignedExtension",2281],[5,"UncheckedExtrinsic",2345],[8,"BlockId",0],[8,"SystemConfig",0],[8,"TransactionPaymentConfig",0],[8,"EthereumConfig",0],[8,"EVMConfig",0],[8,"EVMChainIdConfig",0],[8,"BaseFeeConfig",0],[8,"BalancesConfig",0],[8,"GenesisConfig",0],[8,"SignedBlock",0],[5,"FinalDomainTransactionByteFee",0],[5,"ExtrinsicStorageFees",0],[5,"OnXDMRewards",0],[5,"MmrProofVerifier",0],[5,"StorageKeys",0],[5,"FindAuthorTruncated",0],[5,"EVMCurrencyAdapter",0],[5,"BaseFeeThreshold",0],[5,"Version",0],[5,"BlockHashCount",0],[5,"RuntimeBlockLength",0],[5,"RuntimeBlockWeights",0],[5,"ExistentialDeposit",0],[5,"MaxLocks",0],[5,"MaxReserves",0],[5,"OperationalFeeMultiplier",0],[5,"DomainChainByteFee",0],[5,"SelfChainId",0],[5,"ChannelReserveFee",0],[5,"TransporterEndpointId",0],[5,"BlockGasLimit",0],[5,"PrecompilesValue",0],[5,"WeightPerGas",0],[5,"SuicideQuickClearLimit",0],[5,"PostOnlyBlockHash",0],[5,"BoundDivision",0],[5,"DefaultBaseFeePerGas",0],[5,"DefaultElasticity",0],[5,"PalletInfo",0],[5,"RuntimeApi",0],[8,"Header",2200],[8,"SelfDomainIdConfig",0],[8,"CheckedExtrinsic",0],[8,"SudoConfig",0],[8,"BlockId",2200],[8,"Block",2200]],"b":[[403,"impl-ConvertTransaction%3COpaqueExtrinsic%3E-for-TransactionConverter"],[404,"impl-ConvertTransaction%3CUncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E-for-TransactionConverter"],[483,"impl-PerThing-for-Permill"],[484,"impl-Permill"],[485,"impl-PerThing-for-Perbill"],[486,"impl-Perbill"],[626,"impl-Div-for-Permill"],[627,"impl-Div%3CN%3E-for-Permill"],[628,"impl-Div-for-Perbill"],[629,"impl-Div%3CN%3E-for-Perbill"],[837,"impl-Debug-for-MultiAddress%3CAccountId,+AccountIndex%3E"],[838,"impl-Display-for-MultiAddress%3CAccountId,+AccountIndex%3E"],[874,"impl-From%3COption%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[875,"impl-From%3COriginCaller%3E-for-RuntimeOrigin"],[876,"impl-From%3CRawOrigin%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[877,"impl-From%3CRawOrigin%3E-for-RuntimeOrigin"],[887,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[888,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[889,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[890,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[891,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[892,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[893,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[894,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[895,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[897,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[898,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[899,"impl-From%3CRawOrigin%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-OriginCaller"],[900,"impl-From%3CRawOrigin%3E-for-OriginCaller"],[902,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[903,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[904,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[905,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[906,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[907,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[909,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[910,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[911,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[912,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[913,"impl-From%3CEvent%3E-for-RuntimeEvent"],[915,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[916,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[917,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[918,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[919,"impl-From%3CEvent%3E-for-RuntimeEvent"],[920,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[932,"impl-Permill"],[933,"impl-PerThing-for-Permill"],[934,"impl-PerThing-for-Perbill"],[935,"impl-Perbill"],[1040,"impl-Permill"],[1041,"impl-PerThing-for-Permill"],[1042,"impl-Perbill"],[1043,"impl-PerThing-for-Perbill"],[1163,"impl-Version"],[1164,"impl-Get%3C_I%3E-for-Version"],[1165,"impl-TypedGet-for-Version"],[1166,"impl-BlockHashCount"],[1167,"impl-TypedGet-for-BlockHashCount"],[1168,"impl-Get%3C_I%3E-for-BlockHashCount"],[1169,"impl-TypedGet-for-RuntimeBlockLength"],[1170,"impl-RuntimeBlockLength"],[1171,"impl-Get%3C_I%3E-for-RuntimeBlockLength"],[1172,"impl-Get%3C_I%3E-for-RuntimeBlockWeights"],[1173,"impl-TypedGet-for-RuntimeBlockWeights"],[1174,"impl-RuntimeBlockWeights"],[1175,"impl-TypedGet-for-ExistentialDeposit"],[1176,"impl-Get%3C_I%3E-for-ExistentialDeposit"],[1177,"impl-ExistentialDeposit"],[1178,"impl-Get%3C_I%3E-for-MaxLocks"],[1179,"impl-TypedGet-for-MaxLocks"],[1180,"impl-MaxLocks"],[1181,"impl-Get%3C_I%3E-for-MaxReserves"],[1182,"impl-MaxReserves"],[1183,"impl-TypedGet-for-MaxReserves"],[1184,"impl-OperationalFeeMultiplier"],[1185,"impl-TypedGet-for-OperationalFeeMultiplier"],[1186,"impl-Get%3C_I%3E-for-OperationalFeeMultiplier"],[1187,"impl-Get%3C_I%3E-for-DomainChainByteFee"],[1188,"impl-TypedGet-for-DomainChainByteFee"],[1189,"impl-DomainChainByteFee"],[1190,"impl-TypedGet-for-SelfChainId"],[1191,"impl-Get%3C_I%3E-for-SelfChainId"],[1192,"impl-SelfChainId"],[1193,"impl-TypedGet-for-ChannelReserveFee"],[1194,"impl-ChannelReserveFee"],[1195,"impl-Get%3C_I%3E-for-ChannelReserveFee"],[1196,"impl-Get%3C_I%3E-for-TransporterEndpointId"],[1197,"impl-TypedGet-for-TransporterEndpointId"],[1198,"impl-TransporterEndpointId"],[1199,"impl-Get%3C_I%3E-for-BlockGasLimit"],[1200,"impl-BlockGasLimit"],[1201,"impl-TypedGet-for-BlockGasLimit"],[1202,"impl-TypedGet-for-PrecompilesValue"],[1203,"impl-PrecompilesValue"],[1204,"impl-Get%3C_I%3E-for-PrecompilesValue"],[1205,"impl-TypedGet-for-WeightPerGas"],[1206,"impl-WeightPerGas"],[1207,"impl-Get%3C_I%3E-for-WeightPerGas"],[1208,"impl-Get%3C_I%3E-for-SuicideQuickClearLimit"],[1209,"impl-TypedGet-for-SuicideQuickClearLimit"],[1210,"impl-SuicideQuickClearLimit"],[1211,"impl-Get%3C_I%3E-for-PostOnlyBlockHash"],[1212,"impl-TypedGet-for-PostOnlyBlockHash"],[1213,"impl-PostOnlyBlockHash"],[1214,"impl-Get%3C_I%3E-for-BoundDivision"],[1215,"impl-TypedGet-for-BoundDivision"],[1216,"impl-BoundDivision"],[1217,"impl-DefaultBaseFeePerGas"],[1218,"impl-TypedGet-for-DefaultBaseFeePerGas"],[1219,"impl-Get%3C_I%3E-for-DefaultBaseFeePerGas"],[1220,"impl-DefaultElasticity"],[1221,"impl-TypedGet-for-DefaultElasticity"],[1222,"impl-Get%3C_I%3E-for-DefaultElasticity"],[1530,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1531,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1532,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1533,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1534,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1535,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1536,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1537,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1538,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1539,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1540,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1544,"impl-Permill"],[1545,"impl-Zero-for-Permill"],[1546,"impl-Zero-for-Perbill"],[1547,"impl-Perbill"],[1566,"impl-Runtime"],[1567,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1568,"impl-Runtime"],[1569,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1570,"impl-Runtime"],[1571,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3C%3C%3CEthereumSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+RuntimeCall,+EthereumSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1577,"impl-Mul%3CWeight%3E-for-Permill"],[1578,"impl-Mul%3CN%3E-for-Permill"],[1579,"impl-Mul-for-Permill"],[1580,"impl-Mul%3CWeight%3E-for-Perbill"],[1581,"impl-Mul%3CN%3E-for-Perbill"],[1582,"impl-Mul-for-Perbill"],[1590,"impl-OriginTrait-for-RuntimeOrigin"],[1591,"impl-RuntimeOrigin"],[1596,"impl-Permill"],[1597,"impl-One-for-Permill"],[1598,"impl-Perbill"],[1599,"impl-One-for-Perbill"],[1624,"impl-OriginTrait-for-RuntimeOrigin"],[1625,"impl-RuntimeOrigin"],[1627,"impl-Saturating-for-Permill"],[1628,"impl-SaturatingAdd-for-Permill"],[1629,"impl-SaturatingAdd-for-Perbill"],[1630,"impl-Saturating-for-Perbill"],[1643,"impl-Saturating-for-Permill"],[1644,"impl-SaturatingSub-for-Permill"],[1645,"impl-SaturatingSub-for-Perbill"],[1646,"impl-Saturating-for-Perbill"],[1657,"impl-OriginTrait-for-RuntimeOrigin"],[1658,"impl-RuntimeOrigin"],[1822,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1824,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1825,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1826,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1827,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1828,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1829,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1830,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1832,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1833,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1834,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1835,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1836,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1837,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[1838,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1839,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1840,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[2195,"impl-Zero-for-Permill"],[2196,"impl-Permill"],[2197,"impl-Zero-for-Perbill"],[2198,"impl-Perbill"],[2237,"impl-From%3CUncheckedExtrinsic%3CAddress,+Call,+Signature,+Extra%3E%3E-for-OpaqueExtrinsic"],[2239,"impl-From%3CUncheckedExtrinsic%3CAddress,+Call,+Signature,+Extra%3E%3E-for-OpaqueExtrinsic"]]}],\
["orml_vesting",{"doc":"Vesting Module","t":"SFKNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOOONONNNNNNNNNNNNNMMNPRGPKRGGFPRPRIFRIPRPIPRPPNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPONNNNNNNNOOOOOOOOOOOHHHHFNNNNNNNNNNNNNNNNNNNNNN","n":["VESTING_LOCK_ID","VestingSchedule","WeightInfo","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","claim","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","end","eq","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_key","into_mut","into_ref","locked_amount","max_encoded_len","module","per_period","period","period_count","size_hint","start","to_keyed_vec","to_owned","total_amount","try_from","try_into","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","update_vesting_schedules","vested_transfer","vzip","AmountLow","BlockNumberProvider","Call","Claimed","Config","Currency","Error","Event","GenesisConfig","InsufficientBalanceToLock","MaxVestingSchedules","MaxVestingSchedulesExceeded","MinVestedTransfer","Module","Pallet","RuntimeEvent","ScheduledItem","TooManyVestingSchedules","VestedTransferOrigin","VestingScheduleAdded","VestingSchedules","VestingSchedulesUpdated","WeightInfo","ZeroVestingPeriod","ZeroVestingPeriodCount","__clone_box","__clone_box","__clone_box","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","claim","claim","claim_for","claim_for","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_feeless","module_name","name","name_hash","new_call_variant_claim","new_call_variant_claim_for","new_call_variant_update_vesting_schedules","new_call_variant_vested_transfer","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","serialize","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_vesting_schedules","update_vesting_schedules","vested_transfer","vested_transfer","vesting","vesting_schedules","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","dest","dest","schedule","vesting_schedules","who","amount","from","to","vesting_schedule","who","who","claim","claim_for","update_vesting_schedules","vested_transfer","VestingSchedules","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"orml_vesting"],[61,"orml_vesting::module"],[320,"orml_vesting::module::Call"],[325,"orml_vesting::module::Event"],[331,"orml_vesting::module::dispatchables"],[335,"orml_vesting::module::storage_types"],[358,"dyn_clone::sealed"],[359,"alloc::vec"],[360,"sp_weights::weight_v2"],[361,"core::clone"],[362,"parity_scale_codec::max_encoded_len"],[363,"parity_scale_codec::compact"],[364,"parity_scale_codec::error"],[365,"core::result"],[366,"parity_scale_codec::codec"],[367,"parity_scale_codec::codec"],[368,"core::option"],[369,"sp_arithmetic::traits"],[370,"core::marker"],[371,"core::fmt"],[372,"core::fmt"],[373,"scale_info::ty"],[374,"sp_storage"],[375,"alloc::string"],[376,"frame_system::pallet_prelude"],[377,"sp_runtime"],[378,"frame_support::traits::metadata"],[379,"serde::de"],[380,"frame_support::dispatch"],[381,"frame_support::dispatch"],[382,"frame_support::traits::storage"],[383,"bounded_collections::bounded_vec"],[384,"parity_scale_codec::encode_like"],[385,"sp_storage"]],"d":["","The vesting schedule.","Weight functions needed for orml_vesting.","","","","","","","","","","","","","","","","","","Returns the end of all periods, <code>None</code> if calculation …","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","Returns locked amount for a given <code>time</code>.","","The <code>pallet</code> module in each FRAME pallet hosts the most …","Amount of tokens to release per vest","Number of blocks between vest","Number of vest","","Vesting starting block","","","Returns all locked amount, <code>None</code> if calculation overflows.","","","","","","","","","","","","","","The vested transfer amount is too low","","Contains a variant per dispatchable extrinsic that this …","Claimed vesting.","Configuration trait of this pallet.","","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Can be used to configure the genesis state of this pallet.","Insufficient amount of balance to lock","The maximum vesting schedules","Failed because the maximum vesting schedules was exceeded","The minimum amount transferred to call <code>vested_transfer</code>.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","","This account have too many vesting schedules","Required origin for vested transfer.","Added new vesting schedule.","Vesting schedules of an account.","Updated vesting schedules.","Weight information for extrinsics in this module.","Vesting period is zero","Number of vests is zero","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::claim</code>.","","See <code>Pallet::claim_for</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>claim</code>.","Create a call with the variant <code>claim_for</code>.","Create a call with the variant <code>update_vesting_schedules</code>.","Create a call with the variant <code>vested_transfer</code>.","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::update_vesting_schedules</code>.","","See <code>Pallet::vested_transfer</code>.","","An auto-generated getter for <code>VestingSchedules</code>.","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Vesting schedules of an account.","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,8,8,8,8,8,8,56,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,56,56,8,41,34,0,37,0,34,0,0,0,41,34,41,34,0,0,34,0,41,34,37,0,37,34,41,41,37,38,39,31,38,41,37,39,41,37,39,41,37,39,41,37,31,38,39,41,37,31,38,39,31,38,39,38,39,37,38,39,37,38,39,38,38,38,41,37,39,41,37,39,41,37,39,41,37,39,31,41,37,31,38,39,41,37,31,38,39,31,39,0,41,37,31,38,39,41,37,39,37,38,39,37,37,37,38,38,38,39,39,39,41,37,38,39,41,37,31,38,39,41,41,37,37,31,31,38,38,39,39,41,41,37,37,31,31,38,38,39,39,39,39,39,39,39,41,37,39,38,38,41,37,31,38,39,38,41,37,31,38,39,41,37,31,38,39,41,37,31,38,39,41,37,31,38,39,39,38,38,38,39,39,39,39,38,38,38,38,38,38,38,31,41,37,39,38,0,41,37,39,37,38,39,41,37,31,38,39,41,37,31,38,39,41,37,31,38,39,0,0,0,41,37,39,41,37,39,41,37,39,41,37,31,38,39,41,37,39,41,37,31,38,39,41,37,31,38,39,38,39,38,39,31,38,41,37,31,38,39,38,41,57,58,57,59,59,60,61,61,61,60,62,0,0,0,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63],"f":"```{{cb}d{}}{c{{h{f}}}{}}{c{{j{f}}}{}}1{ce{}{}}0{ln}{{{A`{ce}}}{{A`{ce}}}Ab{AbAdAf}}{{ce}d{}{}}{c{{Aj{{A`{eg}}Ah}}}AlAn{AfAdAf}}{{{B`{f}}}{{Aj{cAh}}}{}}{{l{B`{f}}}{{Aj{cAh}}}{}}{{lc}{{Aj{eAh}}}Al{}}{Bbc{}}0{Bbd}{{{A`{ce}}g}dBd{AfAdAf}{BfBh}}{{{A`{ce}}}{{Bj{c}}}{BlBn}{BlAdBn}}{{{A`{ce}}{A`{ce}}}C`Cb{CbAdAf}}{{ce}C`{}{}}00{{{A`{ce}}Cd}CfCh{ChAdAf}}{cc{}}?00?{c{{j{f}}}{}}{{}Bb}{ce{}{}}000{{{A`{ce}}c}e{BlBn}{BlAdBn}}2````{{{A`{ce}}}BbBd{AfAdAf}}`{{c{B`{f}}}{{j{f}}}{}}3{{{A`{ce}}}{{Bj{e}}}{BlBn}{BlAdBn}}{c{{Aj{e}}}{}{}}00{c{{h{f}}}{}}08{cCj{}}{{}Cl}88{ln}{{}n}:`````````````````````````{{cb}d{}}00{{{Cn{c}}D`}{{Aj{dDb}}}Dd}2666>>>666<<<<<<<<<<{{{Cn{c}}}dDd}{{{Df{c}}}DhDd}`0`{{{Dj{c}}}{{Dj{c}}}Dd}{{{Dl{c}}}{{Dl{c}}}{}}{{{Dn{c}}}{{Dn{c}}}Dd}{{ce}d{}{}}00{{}Bb}{{}E`}{{}c{}}{c{{Aj{{Eb{e}}Ah}}}Al{}}{c{{Aj{{Dj{e}}Ah}}}AlDd}{c{{Aj{{Dn{e}}Ah}}}AlDd}{{{B`{f}}}{{Aj{cAh}}}{}}00{{l{B`{f}}}{{Aj{cAh}}}{}}00{{lc}{{Aj{eAh}}}Al{}}00{{}{{Cn{c}}}Dd}{Bbc{}}000000000{c{{Aj{{Cn{e}}}}}EdDd}{{{Dn{c}}e}EfDd{}}`{Bbd}0000{{{Eb{c}}e}d{}{BfBh}}{{{Dj{c}}e}dDd{BfBh}}{{{Dn{c}}e}dDd{BfBh}}{{{Dj{c}}{Dj{c}}}C`Dd}{{{Dl{c}}{Dl{c}}}C`{}}{{{Dn{c}}{Dn{c}}}C`Dd}{{ce}C`{}{}}00000000{{{Eb{c}}Cd}CfDd}{{{Dj{c}}Cd}CfDd}{{{Dl{c}}Cd}Cf{}}{{{Dn{c}}Cd}CfDd}{cc{}}00000{ce{}{}}101001101001100101{{{Dn{c}}}fDd}{{}{{B`{f}}}}{{{Dn{c}}}EhDd}{{}{{B`{Eh}}}}{{{Dn{c}}}EjDd}{c{{j{f}}}{}}00{{}Bb}{{}{{j{El}}}}11111{{}d}99999999999999999999{{{Dn{c}}e}C`Dd{}}{{}Eh}0{{}{{h{f}}}}{{}{{Dn{c}}}Dd}0{{{j{{A`{{En{c}}}}}}}{{Dn{c}}}Dd}{{{A`{{En{c}}}}}{{Dn{c}}}Dd}{{{En{c}}}dDd}{{}F`}18{{{En{c}}n}nDd}{{{En{c}}}nDd}{{}n}{{{Cn{c}}e}AjDdFb}{{{Eb{c}}}Bb{}}{{{Dj{c}}}BbDd}{{{Dn{c}}}BbDd}{{}{{j{Fd}}}}`{{c{B`{f}}}{{j{f}}}{}}00{ce{}{}}00{c{{Aj{e}}}{}{}}00000000000000```{c{{h{f}}}{}}00000{c{{j{f}}}{}}00{cCj{}}0000{{}Cl}005555555555{{{Df{c}}{j{{A`{{En{c}}}}}}}DhDd}`{{{Df{c}}{A`{{En{c}}}}}DhDd}``{c{{Ff{{A`{{En{e}}}}}}}FhDd}88888{{}{{j{Fj}}}}{{cn}{{Fn{Fl}}}{}}```````````{{}d}0{{{j{{A`{{En{c}}}}}}}dDd}{{{A`{{En{c}}}}}dDd}`=={Bbc{}}0{Bbd}{cc{}}0{ce{}{}}10{{}Bb}1111{c{{Aj{e}}}{}{}}00?222","c":[74],"p":[[5,"Private",358],[1,"unit"],[1,"u8"],[1,"array"],[5,"Vec",359],[1,"u32"],[5,"Weight",360],[5,"VestingSchedule",0],[10,"Clone",361],[10,"MaxEncodedLen",362],[10,"HasCompact",363],[5,"Error",364],[6,"Result",365],[10,"Input",366],[10,"Decode",366],[1,"slice"],[1,"usize"],[10,"Encode",366],[10,"Output",366],[10,"Sized",367],[6,"Option",368],[10,"AtLeast32Bit",369],[10,"Copy",367],[1,"bool"],[10,"PartialEq",370],[5,"Formatter",371],[8,"Result",371],[10,"Debug",371],[5,"TypeId",372],[5,"Type",373],[5,"GenesisConfig",61],[5,"Storage",374],[5,"String",375],[10,"Config",61],[8,"OriginFor",376],[8,"DispatchResult",377],[6,"Event",61],[5,"Pallet",61],[6,"Call",61],[5,"CrateVersion",378],[6,"Error",61],[10,"Deserializer",379],[8,"DispatchResultWithPostInfo",380],[1,"str"],[5,"DispatchInfo",380],[5,"PalletInfoData",378],[8,"BlockNumberFor",376],[5,"StorageVersion",378],[10,"Serializer",381],[5,"StorageInfo",382],[5,"BoundedVec",383],[10,"EncodeLike",384],[5,"TrackedStorageKey",374],[5,"PostDispatchInfo",380],[5,"DispatchErrorWithPostInfo",377],[10,"WeightInfo",0],[15,"vested_transfer",320],[15,"claim_for",320],[15,"update_vesting_schedules",320],[15,"Claimed",325],[15,"VestingScheduleAdded",325],[15,"VestingSchedulesUpdated",325],[5,"VestingSchedules",335]],"b":[]}],\
["pallet_auto_id",{"doc":"Pallet AutoID","t":"FPGGFGPPPKPGGPIPPPPIPPFGGPPRFRPPPFNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNONPNPOOONNNNNNNNNNNNCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOOOOOOOOOOOOHHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AutoId","AutoIdDeactivated","Call","Certificate","CertificateAction","CertificateActionType","CertificateRevoked","CertificateRevoked","CertificateSerialAlreadyIssued","Config","DeactivateAutoId","Error","Event","ExpiredCertificate","Identifier","IdentifierOverflow","InvalidCertificate","InvalidSignature","Leaf","Module","NewAutoIdRegistered","NonceOverflow","Pallet","RegisterAutoId","RegisterAutoIdX509","RevokeCertificate","Root","RuntimeEvent","Signature","Time","UnknownIssuer","X509","X509","X509Certificate","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","action_type","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","deactivate_auto_id","deactivate_auto_id","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","id","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","index","infos","init","init","init","init","init","init","init","init","init","init","init","init","integrity_test","into","into","into","into","into","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_feeless","issued_serials","issuer_id","module_name","name","name_hash","new_call_variant_deactivate_auto_id","new_call_variant_register_auto_id","new_call_variant_revoke_certificate","nonce","nonce","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","raw","register_auto_id","register_auto_id","revoke_certificate","revoke_certificate","revoked","serial","signature_algorithm","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","storage_info","storage_types","subject","subject_public_key_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","validity","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","auto_id_identifier","auto_id_identifier","req","signature","signature","certificate","certificate","issuer_id","signature","signature","signature_algorithm","signature_algorithm","deactivate_auto_id","register_auto_id","revoke_certificate","AutoIds","NextAutoIdIdentifier","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"pallet_auto_id"],[621,"pallet_auto_id::Call"],[626,"pallet_auto_id::RegisterAutoIdX509"],[633,"pallet_auto_id::dispatchables"],[636,"pallet_auto_id::storage_types"],[682,"dyn_clone::sealed"],[683,"sp_weights::weight_v2"],[684,"alloc::vec"],[685,"frame_support::traits::metadata"],[686,"frame_system::pallet_prelude"],[687,"frame_support::dispatch"],[688,"parity_scale_codec::error"],[689,"core::result"],[690,"parity_scale_codec::codec"],[691,"frame_support::dispatch"],[692,"core::fmt"],[693,"core::fmt"],[694,"core::any"],[695,"scale_info::ty"],[696,"core::ops::function"],[697,"sp_storage"],[698,"frame_support::dispatch"]],"d":["A representation of AutoId","Emits when an AutoId is deactivated.","Contains a variant per dispatchable extrinsic that this …","Certificate associated with AutoId.","Signing data used to verify the certificate action.","Specific action type taken by the subject of the …","Certificate revoked.","Emits when a Certificate associated with AutoId is revoked.","Certificate serial already issued.","Configuration trait of this pallet.","","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Certificate expired.","Unique AutoId identifier.","AutoId identifier overflow.","Certificate is invalid,","Invalid signature.","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Emits when a new AutoId is registered.","Nonce overflow.","The <code>Pallet</code> struct, the main type that implements traits …","Request to register a new AutoId.","Type holds X509 certificate details used to register an …","","","","Signature holds algorithm used and the signature value.","","Issuer auto id does not exist.","","","X509 certificate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Certificate associated with this AutoId.","","","","","","","","","","","","","","","","","","","","","","","","","","Deactivates a given AutoId.","See <code>Pallet::deactivate_auto_id</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of all certificate serials issues by the subject. …","Issuer identifier of this certificate.","","","","Create a call with the variant <code>deactivate_auto_id</code>.","Create a call with the variant <code>register_auto_id</code>.","Create a call with the variant <code>revoke_certificate</code>.","Certificate action nonce.","","","","","","","","","Der encoded full X509 certificate.","Registers a new AutoId after validating the provided …","See <code>Pallet::register_auto_id</code>.","Revokes a certificate associated with given AutoId.","See <code>Pallet::revoke_certificate</code>.","Signifies if the certificate is revoked.","Serial number for this certificate","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","Der encoded certificate’s subject.","Der encoded certificate’s subject’s public key info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validity of the certificate","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deactivates a given AutoId.","Registers a new AutoId after validating the provided …","Revokes a certificate associated with given AutoId.","Stores the auto id identifier against an AutoId.","Stores the next auto id identifier.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,16,0,0,0,0,27,16,27,0,13,0,0,27,0,27,27,27,10,0,16,27,0,0,0,13,10,17,0,17,27,8,12,0,7,8,9,10,11,12,13,14,15,16,18,14,15,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,9,7,8,9,10,11,12,13,14,15,16,18,7,8,9,10,11,12,13,14,15,16,18,15,15,15,15,18,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,18,0,7,8,9,10,11,12,13,14,15,27,16,18,9,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,15,16,18,7,7,7,8,8,8,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,18,18,18,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,27,27,16,16,18,18,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,27,27,16,16,18,18,18,18,18,18,18,14,7,8,9,10,11,12,13,14,27,16,18,15,15,7,8,9,10,11,12,13,14,15,27,16,18,15,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,18,7,7,15,15,15,18,18,18,7,14,15,15,15,15,15,15,15,7,15,18,15,18,7,7,11,7,8,9,10,11,12,13,14,27,16,18,15,0,7,7,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,15,16,18,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,0,0,0,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,7,8,9,10,11,12,13,14,15,27,16,18,9,7,11,7,8,9,10,11,12,13,14,15,27,16,18,15,27,49,50,51,49,50,52,53,53,52,53,52,53,0,0,0,0,0,54,55,54,55,54,55,54,55,54,55,54,55,54,54,55,55,54,54,55,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55],"f":"``````````````````````````````````{{cb}d{}}0000000000`{{}f}{c{{j{h}}}{}}0000000000{c{{l{h}}}{}}000000000011111111111{ce{}{}}00000000000000000000000`{nn}{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{{{An{c}}}{{An{c}}}{}}{{{B`{c}}}{{B`{c}}}Bb}{{{Bd{c}}}{{Bd{c}}}Bb}{{ce}d{}{}}0000000000{{}Bf}{{}Bh}{{}c{}}{{{Bj{c}}BlAf}BnBb}`{c{{Cb{nC`}}}Cd}{c{{Cb{A`C`}}}Cd}{c{{Cb{AbC`}}}Cd}{c{{Cb{AdC`}}}Cd}{c{{Cb{AfC`}}}Cd}{c{{Cb{AhC`}}}Cd}{c{{Cb{AjC`}}}Cd}{c{{Cb{AlC`}}}Cd}{c{{Cb{{Cf{e}}C`}}}Cd{}}{c{{Cb{{B`{e}}C`}}}CdBb}{c{{Cb{{Bd{e}}C`}}}CdBb}{{{Ch{h}}}{{Cb{cC`}}}{}}0000000000{{Cj{Ch{h}}}{{Cb{cC`}}}{}}0000000000{{Cjc}{{Cb{eC`}}}Cd{}}0000000000{Bfc{}}00000000000000000000000{{{Bd{c}}e}ClBb{}}`{Bfd}00000000000{Ab{{l{h}}}}{{nc}d{CnD`}}{{A`c}d{CnD`}}{{Abc}d{CnD`}}{{Adc}d{CnD`}}{{Afc}d{CnD`}}{{Ahc}d{CnD`}}{{Ajc}d{CnD`}}{{Alc}d{CnD`}}{{{Cf{c}}e}d{}{CnD`}}{{{B`{c}}e}dBb{CnD`}}{{{Bd{c}}e}dBb{CnD`}}{{nn}Db}{{A`A`}Db}{{AbAb}Db}{{AdAd}Db}{{AfAf}Db}{{AhAh}Db}{{AjAj}Db}{{AlAl}Db}{{{An{c}}{An{c}}}Db{}}{{{B`{c}}{B`{c}}}DbBb}{{{Bd{c}}{Bd{c}}}DbBb}{{ce}Db{}{}}00000000000000000000000000000000{{nDd}Df}{{A`Dd}Df}{{AbDd}Df}{{AdDd}Df}{{AfDd}Df}{{AhDd}Df}{{AjDd}Df}{{AlDd}Df}{{{An{c}}Dd}Df{}}{{{Cf{c}}Dd}DfBb}{{{B`{c}}Dd}DfBb}{{{Bd{c}}Dd}DfBb}{cc{}}000000000000{ce{}{}}0110101010101010011001100110100101011010101001{{{Bd{c}}}hBb}{{}{{Ch{h}}}}{{{Bd{c}}}DhBb}{{}{{Ch{Dh}}}}{{{Bd{c}}}DjBb}`{c{{l{h}}}{}}0000000000{{}Bf}{{}{{l{Dl}}}}111111111111{{}d}999999999999999999999999999999999999999999999999{{{Bd{c}}e}DbBb{}}``{{}Dh}0{{}{{j{h}}}}{{BlAf}{{Bd{c}}}Bb}{Ah{{Bd{c}}}Bb}1``{{{Dn{c}}}dBb}{{}E`}17{{{Dn{c}}f}fBb}{{{Dn{c}}}fBb}{{}f}`{{{Bj{c}}Ah}BnBb}`{{{Bj{c}}BlAf}BnBb}````{nBf}{A`Bf}{AbBf}{AdBf}{AfBf}{AhBf}{AjBf}{AlBf}{{{Cf{c}}}Bf{}}{{{B`{c}}}BfBb}{{{Bd{c}}}BfBb}{{}{{l{Eb}}}}```{{c{Ch{h}}}{{l{h}}}{}}0000000000{ce{}{}}0000000000{c{{Cb{e}}}{}{}}00000000000000000000000000000000000```{c{{j{h}}}{}}000000000000000000000{c{{l{h}}}{}}0000000000{cEd{}}00000000000{{}Ef}0000000000555555555555555555555555{{Abe}c{}{{Ej{{Ch{h}}}{{Eh{c}}}}}}``666666666666{{}{{l{El}}}}{{cf}{{F`{En}}}{}}````````````{{BlAf}d}{Ahd}1``::::{Bfc{}}000{Bfd}0{cc{}}00==00==0{{}Bf}0>>>>>>>>======::>>>>>>","c":[19],"p":[[5,"Private",682],[1,"unit"],[5,"Weight",683],[1,"u8"],[1,"array"],[5,"Vec",684],[5,"X509Certificate",0],[6,"Certificate",0],[5,"AutoId",0],[6,"RegisterAutoIdX509",0],[5,"Signature",0],[6,"RegisterAutoId",0],[6,"CertificateActionType",0],[5,"CertificateAction",0],[5,"Pallet",0],[6,"Event",0],[10,"Config",0],[6,"Call",0],[1,"usize"],[5,"CrateVersion",685],[8,"OriginFor",686],[8,"Identifier",0],[8,"DispatchResult",687],[5,"Error",688],[6,"Result",689],[10,"Input",690],[6,"Error",0],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",687],[10,"Output",690],[10,"Sized",691],[1,"bool"],[5,"Formatter",692],[8,"Result",692],[1,"str"],[5,"DispatchInfo",687],[5,"PalletInfoData",685],[8,"BlockNumberFor",686],[5,"StorageVersion",685],[5,"StorageInfo",693],[5,"TypeId",694],[5,"Type",695],[17,"Output"],[10,"FnOnce",696],[5,"TrackedStorageKey",697],[5,"PostDispatchInfo",687],[5,"DispatchErrorWithPostInfo",698],[15,"revoke_certificate",621],[15,"deactivate_auto_id",621],[15,"register_auto_id",621],[15,"Root",626],[15,"Leaf",626],[5,"NextAutoIdIdentifier",636],[5,"AutoIds",636]],"b":[]}],\
["pallet_block_fees",{"doc":"Pallet Domain Transaction Fees","t":"RGKRIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNCNNNNNNNNNEEENNNNNNNNNNNNNOHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Balance","Call","Config","DomainChainByteFee","Module","Pallet","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","check_inherent","clone","clone","clone_into","clone_into","collected_block_fees","consensus_chain_byte_fee","count","crate_version","create_inherent","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fees","final_domain_transaction_byte_fee","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","integrity_test","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","is_feeless","is_inherent","module_name","name","name_hash","new_call_variant_set_next_consensus_chain_byte_fee","note_burned_balance","note_consensus_storage_fee","note_domain_execution_fee","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","set_next_consensus_chain_byte_fee","set_next_consensus_chain_byte_fee","size_hint","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","whitelisted_storage_keys","transaction_byte_fee","set_next_consensus_chain_byte_fee","LiquidityInfo","OnChargeDomainTransaction","borrow","borrow","borrow_mut","borrow_mut","correct_and_deposit_fee","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","withdraw_fee","CollectedBlockFees","ConsensusChainByteFee","NextConsensusChainByteFee","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"pallet_block_fees"],[129,"pallet_block_fees::Call"],[130,"pallet_block_fees::dispatchables"],[131,"pallet_block_fees::fees"],[179,"pallet_block_fees::storage_types"],[248,"dyn_clone::sealed"],[249,"sp_weights::weight_v2"],[250,"alloc::vec"],[251,"sp_inherents"],[252,"core::result"],[253,"sp_domains"],[254,"frame_support::traits::metadata"],[255,"core::option"],[256,"parity_scale_codec::error"],[257,"parity_scale_codec::codec"],[258,"frame_support::dispatch"],[259,"parity_scale_codec::codec"],[260,"core::fmt"],[261,"core::fmt"],[262,"frame_support::traits::metadata"],[263,"core::any"],[264,"scale_info::ty"],[265,"sp_storage"],[266,"sp_runtime::traits"],[267,"sp_runtime::traits"]],"d":["The balance of an account.","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The domain chain byte fee","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Pallet block-fees to store the accumulated rewards of the …","","","","","","","","","","","","","","","","An auto-generated getter for <code>CollectedBlockFees</code>.","An auto-generated getter for <code>ConsensusChainByteFee</code>.","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","Return the final domain transaction byte fee, which …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Create a call with the variant …","Note burned balance on domains","Note consensus chain storage fee","Note the domain execution fee including the storage and …","","","","","","","","","","","See <code>Pallet::set_next_consensus_chain_byte_fee</code>.","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","","Implementation of …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The accumulated rewards of the current block","The consensus chain byte fee","The next consensus chain byte fee, it will take affect …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[11,0,0,11,0,0,9,10,9,10,10,10,9,10,9,10,9,9,10,9,10,9,9,9,9,9,9,10,10,10,10,9,10,9,10,10,0,9,10,10,9,10,9,9,9,10,10,10,0,9,9,10,9,10,9,9,10,10,9,9,10,10,10,10,10,10,10,10,9,9,9,10,9,9,10,9,10,9,10,9,10,10,9,9,9,9,10,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,9,0,10,9,10,9,10,9,10,9,10,0,0,0,10,10,10,9,10,10,9,10,9,10,9,10,9,40,0,0,0,41,42,41,42,42,41,42,41,42,41,42,41,42,41,41,42,42,41,41,42,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,42,0,0,0,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,43,44,44,45,45,43,43,44,44,45,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45],"f":"``````{{cb}d{}}0{{}f}{c{{j{h}}}{}}{c{{l{h}}}{}}1{ce{}{}}000{{cn}{{A`{de}}}{}{}}{{{Ab{c}}}{{Ab{c}}}{}}{{{Ad{c}}}{{Ad{c}}}Af}{{ce}d{}{}}0{{}Ah}{{}}{{}Aj}{{}Al}{n{{An{c}}}{}}{{}c{}}{c{{A`{{Ad{e}}B`}}}BbAf}{{{Bd{h}}}{{A`{cB`}}}{}}{{Bf{Bd{h}}}{{A`{cB`}}}{}}{{Bfc}{{A`{eB`}}}Bb{}}{Ajc{}}000{{{Ad{c}}e}BhAf{}}`{Ajd}0{{{Ad{c}}e}dAf{BjBl}}{{{Ab{c}}{Ab{c}}}Bn{}}{{{Ad{c}}{Ad{c}}}BnAf}{{ce}Bn{}{}}00000`?{{{Ab{c}}C`}Cb{}}{{{Ad{c}}C`}CbAf}{cc{}}00{ce{}{}}011010{{{Ad{c}}}hAf}{{}{{Bd{h}}}}{{{Ad{c}}}CdAf}{{}{{Bd{Cd}}}}{{{Ad{c}}}CfAf}{c{{l{h}}}{}}{{}Aj}{{}{{l{Ch}}}}11{{}d}99999999{{{Ad{c}}e}BnAf{}}{cBn{}}{{}Cd}0{{}{{j{h}}}}{{}{{Ad{c}}}Af}555{{{Cj{c}}}dAf}{{}Cl}117{{{Cj{c}}f}fAf}{{{Cj{c}}}fAf}0{{}f}{{{Cn{c}}}D`Af}`{{{Ad{c}}}AjAf}{{}{{l{Db}}}}`{{c{Bd{h}}}{{l{h}}}{}}{ce{}{}}0{c{{A`{e}}}{}{}}00000```{c{{j{h}}}{}}0{c{{l{h}}}{}}{cDd{}}0{{}Df}555555{{}{{l{Dh}}}}`{{}d}``7777{{DjDlcce}{{A`{dDn}}}{}{}}{Ajc{}}000{Ajd}0{cc{}}00;0;;0;0{{}Aj}0<<<<<<<<;;;;;;88<<<<<<{{Djcc}{{A`{eDn}}}{}{}}```======4444443332222==2=22==22=111============<<<<<<<<<999=========","c":[4],"p":[[5,"Private",248],[1,"unit"],[5,"Weight",249],[1,"u8"],[1,"array"],[5,"Vec",250],[5,"InherentData",251],[6,"Result",252],[5,"Pallet",0],[6,"Call",0],[10,"Config",0],[5,"BlockFees",253],[1,"usize"],[5,"CrateVersion",254],[6,"Option",255],[5,"Error",256],[10,"Input",257],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",258],[10,"Output",257],[10,"Sized",259],[1,"bool"],[5,"Formatter",260],[8,"Result",260],[1,"str"],[5,"DispatchInfo",258],[5,"PalletInfoData",254],[8,"BlockNumberFor",261],[5,"StorageVersion",254],[8,"OriginFor",261],[8,"DispatchResult",258],[5,"StorageInfo",262],[5,"TypeId",263],[5,"Type",264],[5,"TrackedStorageKey",265],[8,"DispatchInfoOf",266],[8,"PostDispatchInfoOf",266],[6,"TransactionValidityError",267],[15,"set_next_consensus_chain_byte_fee",129],[5,"LiquidityInfo",131],[5,"OnChargeDomainTransaction",131],[5,"CollectedBlockFees",179],[5,"ConsensusChainByteFee",179],[5,"NextConsensusChainByteFee",179]],"b":[[92,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[93,"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[96,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[97,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["pallet_domain_id",{"doc":"Pallet Domain Id","t":"GKFIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNCNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNN","n":["Call","Config","GenesisConfig","Module","Pallet","__clone_box","__clone_box","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","domain_id","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","init","integrity_test","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_feeless","module_name","name","name_hash","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","phantom","self_domain_id","serialize","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","SelfDomainId","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_domain_id"],[141,"pallet_domain_id::storage_types"],[164,"dyn_clone::sealed"],[165,"sp_storage"],[166,"alloc::string"],[167,"core::result"],[168,"sp_weights::weight_v2"],[169,"alloc::vec"],[170,"frame_support::traits::metadata"],[171,"parity_scale_codec::error"],[172,"parity_scale_codec::codec"],[173,"serde::de"],[174,"frame_support::dispatch"],[175,"core::fmt"],[176,"core::fmt"],[177,"frame_support::traits::metadata"],[178,"serde::ser"],[179,"frame_support::traits::storage"],[180,"core::any"],[181,"scale_info::ty"],[182,"sp_storage"]],"d":["Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Pallet domain-id to store self domain id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,12,13,3,12,13,13,13,12,3,13,12,3,13,3,12,13,12,13,12,12,12,13,13,13,13,3,12,3,13,12,3,13,3,13,0,3,12,3,13,12,13,12,12,12,13,13,13,12,13,12,3,13,12,12,3,3,13,13,12,12,3,3,13,13,13,13,13,13,13,13,12,12,12,3,13,12,12,3,13,12,3,13,12,3,13,12,3,13,13,12,12,12,12,12,12,12,12,12,12,3,12,3,12,0,13,12,13,12,3,13,12,3,13,12,3,13,0,0,0,13,13,13,12,3,13,13,12,3,13,12,3,13,12,3,13,12,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36],"f":"`````{{cb}d{}}0{{{f{c}}h}{{l{dj}}}n}{{}A`}{c{{Ad{Ab}}}{}}{c{{Af{Ab}}}{}}1{ce{}{}}00000{{{f{c}}}dn}{{{Ah{c}}}{{Ah{c}}}{}}{{{Aj{c}}}{{Aj{c}}}n}{{ce}d{}{}}0{{}Al}{{}An}{{}c{}}{c{{l{{Aj{e}}B`}}}Bbn}{{{Bd{Ab}}}{{l{cB`}}}{}}{{Bf{Bd{Ab}}}{{l{cB`}}}{}}{{Bfc}{{l{eB`}}}Bb{}}{{}{{f{c}}}{}}{Alc{}}00000{c{{l{{f{e}}}}}Bh{}}{{{Aj{c}}e}Bjn{}}``{Ald}00{{{Ah{c}}{Ah{c}}}Bl{}}{{{Aj{c}}{Aj{c}}}Bln}{{ce}Bl{}{}}00000{{{Ah{c}}Bn}C`{}}{{{Aj{c}}Bn}C`n}{cc{}}00{ce{}{}}10110100101{{{Aj{c}}}Abn}{{}{{Bd{Ab}}}}{{{Aj{c}}}Cbn}{{}{{Bd{Cb}}}}{{{Aj{c}}}Cdn}{c{{Af{Ab}}}{}}{{}Al}{{}{{Af{Cf}}}}111{{}d}999999999999{{{Aj{c}}e}Bln{}}{{}Cb}0{{}{{Ad{Ab}}}}{{{Ch{c}}}dn}{{}Cj}15{{{Ch{c}}A`}A`n}{{{Ch{c}}}A`n}{{}A`}`{{}Cl}{{{f{c}}e}l{}Cn}{{}{{Af{D`}}}}`{{c{Bd{Ab}}}{{Af{Ab}}}{}}{ce{}{}}0{c{{l{e}}}{}{}}00000000```{c{{Ad{Ab}}}{}}0{c{{Af{Ab}}}{}}{cDb{}}00{{}Dd}555555555{{}{{Af{Df}}}}`66{Alc{}}0{Ald}{cc{}}9090{{}Al}::::9996:::","c":[3],"p":[[5,"Private",164],[1,"unit"],[5,"GenesisConfig",0],[5,"Storage",165],[5,"String",166],[6,"Result",167],[10,"Config",0],[5,"Weight",168],[1,"u8"],[1,"array"],[5,"Vec",169],[5,"Pallet",0],[6,"Call",0],[1,"usize"],[5,"CrateVersion",170],[5,"Error",171],[10,"Input",172],[1,"slice"],[1,"u32"],[10,"Deserializer",173],[8,"DispatchResultWithPostInfo",174],[1,"bool"],[5,"Formatter",175],[8,"Result",175],[1,"str"],[5,"DispatchInfo",174],[5,"PalletInfoData",170],[8,"BlockNumberFor",176],[5,"StorageVersion",170],[5,"DomainId",177],[10,"Serializer",178],[5,"StorageInfo",179],[5,"TypeId",180],[5,"Type",181],[5,"TrackedStorageKey",165],[5,"SelfDomainId",141]],"b":[]}],\
["pallet_domains",{"doc":"Pallet Domains","t":"PPPPPPPPKRPIRPGRPPPPGPKRIRRPIRPRIRPRPPPRPPRRPGGIIPPGPPFKRRPPPPPPPPPPPRRRRRRRRRRPIIFPIPPPPPPPFRPPPRPIRPRGPPRRPPPFRPPRFPPRPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNCNOONONNMCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONONNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNPNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNPONNNNNNNNNNNNNONOONNNPNPNCONNPONNNNNNNNMMNMNCNPNNPNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNPNPNNNNNNNNNNNNNNNNCNNNPOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPFPPGPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHPPFPPFPGPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNNNNNNNNNNOOOOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPGPPPPPPPPFPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONNNNOFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNMNNNMNNMNMNNNNNNMNNMNNNNNMNMNMNMNMNMNNNNNNNMNMNMNMNNMN","n":["BadBundleEquivocationFraudProof","BadBundleSignature","BadExecutionReceipt","BadOperator","BadReceiptAlreadyReported","BadReceiptNotFound","BadValidBundleFraudProof","BadVrfSignature","BlockSlot","BlockSlot","BlockTree","BlockTreeNodeFor","BlockTreePruningDepth","BundleEquivocation","BundleError","BundleLongevity","BundleStorageFund","BundleStored","BundleTooHeavy","BundleTooLarge","Call","ChallengingGenesisReceipt","Config","ConfirmationDepthK","ConsensusBlockHash","ConsensusSlotProbability","Currency","DescendantsOfFraudulentERNotPruned","DomainBlockNumberFor","DomainBundleSubmitted","DomainEpochCompleted","DomainHash","DomainHashingFor","DomainHeader","DomainInstantiated","DomainInstantiationDeposit","DomainOperatorAllowListUpdated","DomainRegistry","DomainRuntimeCreated","DomainRuntimeUpgradeDelay","DomainRuntimeUpgradeScheduled","DomainRuntimeUpgraded","DomainTxRangeAdjustmentInterval","DomainsTransfersTracker","DuplicatedBundle","Error","Event","ExecutionInbox","ExecutionReceiptOf","ForceDomainEpochTransition","FraudProof","FraudProofError","FraudProofProcessed","FundsUnlocked","GenesisConfig","HoldIdentifier","HoldIdentifier","InitialDomainTxRange","InvalidBlockFeesFraudProof","InvalidBundle","InvalidBundleFraudProof","InvalidDomainBlockHashFraudProof","InvalidDomainId","InvalidExtrinsicRoot","InvalidExtrinsicRootFraudProof","InvalidOperatorId","InvalidProofOfTime","InvalidStateTransitionFraudProof","InvalidTransfersFraudProof","MaxBundlesPerBlock","MaxDomainBlockSize","MaxDomainBlockWeight","MaxDomainNameLength","MaxInitialDomainAccounts","MaxNominators","MaxPendingStakingOperation","MinInitialDomainAccountBalance","MinNominatorStake","MinOperatorStake","MissingOperator","Module","OpaqueBundleOf","OperatorConfig","OperatorDeregistered","OperatorEpochSharePrice","OperatorNominated","OperatorRegistered","OperatorRewarded","OperatorSlashed","OperatorSwitchedDomain","OperatorTaxCollected","OperatorUnlocked","Pallet","PalletId","ParentReceiptNotFound","PermissionedActionNotAllowed","PreferredOperator","Randomness","Receipt","ReceiptHashFor","RuntimeEvent","RuntimeRegistry","Share","SlashedReason","SlotInTheFuture","SlotInThePast","StakeEpochDuration","StakeWithdrawalLockingPeriod","Staking","StakingEpoch","StaleBundle","StartingEVMChainId","StorageFee","StorageFeeDeposited","ThresholdUnsatisfied","TreasuryAccount","TxRangeState","UnableToCalculateBundleLimit","UnexpectedFraudProof","WeightInfo","WithdrewStake","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_fees","block_tree","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","bundle_producer_election_params","calculate_tx_range","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","confirmed_domain_block_storage_key","consensus_block_hash","consensus_block_info","consensus_block_number","count","crate_version","current_storage_version","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deregister_operator","deregister_operator","deserialize","dispatch_bypass_filter","dispatchables","domain_best_number","domain_block_extrinsic_root","domain_block_hash","domain_block_limit","domain_block_number","domain_bundle_limit","domain_instance_data","domain_instantiation_id","domain_registry","domain_runtime_code","domain_staking_summary","domain_tx_range","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execution_receipt","execution_receipt","execution_trace","execution_trace_root","extrinsics","extrinsics_shuffling_seed","final_state_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_staking_epoch_transition","force_staking_epoch_transition","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","future_slot","genesis_domains","genesis_state_root","get","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","head_receipt_number","identity","identity","identity","identity","identity","identity","identity","identity","inboxed_bundles","index","infos","init","init","init","init","init","init","init","init","init","init","init","instantiate_domain","instantiate_domain","integrity_test","interval_blocks","interval_bundles","into","into","into","into","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_bad_er_pending_to_prune","is_clear","is_domain_owner","is_feeless","is_operator_pending_to_slash","latest_confirmed_domain_block","latest_confirmed_domain_block_number","latest_submitted_er","max_staking_epoch_transition","max_submit_bundle_weight","minimum_nominator_stake","module_name","name","name_hash","new_call_variant_deregister_operator","new_call_variant_force_staking_epoch_transition","new_call_variant_instantiate_domain","new_call_variant_nominate_operator","new_call_variant_register_domain_runtime","new_call_variant_register_operator","new_call_variant_set_permissioned_action_allowed_by","new_call_variant_submit_bundle","new_call_variant_submit_fraud_proof","new_call_variant_unlock_funds","new_call_variant_unlock_operator","new_call_variant_update_domain_operator_allow_list","new_call_variant_upgrade_domain_runtime","new_call_variant_withdraw_stake","nominate_operator","nominate_operator","nomination_tax","non_empty_er_exists","offchain_worker","oldest_unconfirmed_receipt_number","on_bundle","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","operator","operator_ids","operator_signing_key","parent_domain_block_receipt_hash","permissioned_action_allowed_by","pre_dispatch","receipt_hash","register_domain_runtime","register_domain_runtime","register_operator","register_operator","runtime_id","runtime_registry","sealed_header","serialize","set_permissioned_action_allowed_by","set_permissioned_action_allowed_by","signing_key","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_produced_after","staking_staked","storage_fund_account_balance","storage_fund_withdrawal","storage_info","storage_types","submit_bundle","submit_bundle","submit_bundle_unsigned","submit_fraud_proof","submit_fraud_proof","submit_fraud_proof_unsigned","successful_bundles","successful_fraud_proofs","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","transfers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","tx_range","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unlock_funds","unlock_funds","unlock_operator","unlock_operator","update_domain_operator_allow_list","update_domain_operator_allow_list","upgrade_domain_runtime","upgrade_domain_runtime","using_encoded","using_encoded","using_encoded","using_encoded","validate_unsigned","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weights","whitelisted_storage_keys","with_weight","withdraw_stake","withdraw_stake","amount","amount","config","domain_config","domain_id","domain_id","domain_id","fraud_proof","opaque_bundle","operator_allow_list","operator_id","operator_id","operator_id","operator_id","operator_id","permissioned_action_allowed_by","raw_genesis_storage","raw_genesis_storage","runtime_id","runtime_name","runtime_type","shares","amount","amount","bundle_author","bundle_hash","completed_epoch_index","completed_epoch_index","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","new_domain_id","new_head_receipt_number","nominator_id","nominator_id","nominator_id","nominator_id","nominator_id","old_domain_id","operator_id","operator_id","operator_id","operator_id","operator_id","operator_id","operator_id","operator_id","operator_id","operator_id","operator_id","reason","reward","runtime_id","runtime_id","runtime_id","runtime_type","scheduled_at","tax","BadGenesisReceipt","BalanceOverflow","BlockTreeNode","BuiltOnUnknownConsensusBlock","DomainTransfersTracking","Error","InFutureReceipt","InvalidDomainTransfers","InvalidExecutionTrace","InvalidExtrinsicsRoots","InvalidStateRoot","InvalidTraceRoot","MaxHeadDomainNumber","MissingDomainBlock","NewBranchReceipt","OverwritingER","PrunedReceipt","StaleReceipt","UnavailableConsensusBlockHash","UnexpectedReceiptType","UnknownParentBlockReceipt","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","execution_receipt","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","operator_ids","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","try_into_key","try_into_key","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","deregister_operator","force_staking_epoch_transition","instantiate_domain","nominate_operator","register_domain_runtime","register_operator","set_permissioned_action_allowed_by","submit_bundle","submit_fraud_proof","unlock_funds","unlock_operator","update_domain_operator_allow_list","upgrade_domain_runtime","withdraw_stake","BalanceFreeze","BundleLimitCalculationOverflow","DomainConfig","DomainNameTooLong","DomainNotFound","DomainObject","DuplicateInitialAccounts","Error","ExceedMaxDomainBlockSize","ExceedMaxDomainBlockWeight","FailedToGenerateGenesisStateRoot","FailedToGenerateRawGenesis","InitialBalanceOverflow","InsufficientFund","InvalidBundlesPerBlock","InvalidSlotProbability","MaxDomainId","MaxEVMChainId","MaxInitialDomainAccounts","MinInitialAccountBalance","NotDomainOwner","RuntimeNotFound","TransfersTracker","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bundle_slot_probability","clone","clone","clone_into","clone_into","created_at","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","domain_config","domain_name","domain_runtime_info","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_receipt_hash","identity","identity","identity","init","init","init","initial_balances","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","max_block_size","max_block_weight","operator_allow_list","owner_account_id","runtime_id","size_hint","size_hint","size_hint","target_bundles_per_block","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","AutoId","DomainRuntimeInfo","EVM","Error","FailedToDecodeRawGenesis","FailedToExtractRuntimeVersion","InvalidAccountIdType","InvalidSpecName","MaxRuntimeId","MaxScheduledBlockNumber","MissingRuntimeObject","RuntimeCodeNotFoundInRawGenesis","RuntimeObject","RuntimeUpgradeAlreadyScheduled","ScheduledRuntimeUpgrade","SpecVersionNeedsToIncrease","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","created_at","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","identity","identity","identity","identity","init","init","init","init","into","into","into","into","into_complete_raw_genesis","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_clear","raw_genesis","raw_genesis","runtime_name","runtime_type","runtime_upgrades","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","updated_at","using_encoded","using_encoded","using_encoded","version","version","vzip","vzip","vzip","vzip","chain_id","BlockTree","BlockTreeNodes","ConsensusBlockHash","Deposits","DomainRegistry","DomainStakingSummary","DomainTxRangeState","ExecutionInbox","HeadDomainNumber","HeadReceiptExtended","HeadReceiptNumber","InboxedBundleAuthor","LastEpochStakingDistribution","LatestConfirmedDomainBlock","LatestSubmittedER","NextDomainId","NextEVMChainId","NextOperatorId","NextRuntimeId","NominatorCount","OperatorEpochSharePrice","OperatorIdOwner","OperatorSigningKey","Operators","PendingOperatorSwitches","PendingSlashes","PendingStakingOperationCount","PermissionedActionAllowedBy","RuntimeRegistry","ScheduledRuntimeUpgrades","SuccessfulBundles","SuccessfulFraudProofs","Withdrawals","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","confirm_domain_block","confirm_domain_block","deref","deref_mut","deregister_operator","deregister_operator","drop","finalize_domain_epoch_staking","finalize_domain_epoch_staking","finalize_slashed_operators","finalize_slashed_operators","from","from_mut","from_mut","from_ref","from_ref","handle_bad_receipt","handle_bad_receipt","init","instantiate_domain","instantiate_domain","into","into_key","into_mut","into_ref","nominate_operator","nominate_operator","operator_reward_tax_and_restake","operator_reward_tax_and_restake","register_domain_runtime","register_domain_runtime","register_operator","register_operator","submit_bundle","submit_bundle","submit_fraud_proof","submit_fraud_proof","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","unlock_funds","unlock_funds","unlock_operator","unlock_operator","update_domain_operator_allow_list","update_domain_operator_allow_list","upgrade_domain_runtime","upgrade_domain_runtime","vzip","withdraw_stake","withdraw_stake"],"q":[[0,"pallet_domains"],[709,"pallet_domains::Call"],[731,"pallet_domains::Event"],[771,"pallet_domains::block_tree"],[882,"pallet_domains::dispatchables"],[896,"pallet_domains::domain_registry"],[1069,"pallet_domains::runtime_registry"],[1286,"pallet_domains::runtime_registry::DomainRuntimeInfo"],[1287,"pallet_domains::storage_types"],[2046,"pallet_domains::weights"],[2104,"dyn_clone::sealed"],[2105,"sp_storage"],[2106,"alloc::string"],[2107,"core::result"],[2108,"sp_weights::weight_v2"],[2109,"alloc::vec"],[2110,"sp_domains"],[2111,"sp_domains::bundle_producer_election"],[2112,"core::option"],[2113,"subspace_core_primitives"],[2114,"core::clone"],[2115,"parity_scale_codec::encode_like"],[2116,"frame_system::pallet_prelude"],[2117,"frame_support::traits::metadata"],[2118,"parity_scale_codec::error"],[2119,"parity_scale_codec::codec"],[2120,"parity_scale_codec::codec"],[2121,"serde::de"],[2122,"frame_support::dispatch"],[2123,"core::cmp"],[2124,"core::fmt"],[2125,"core::fmt"],[2126,"frame_system::pallet"],[2127,"primitive_types"],[2128,"domain_runtime_primitives"],[2129,"frame_support::dispatch"],[2130,"alloc::boxed"],[2131,"sp_domains"],[2132,"serde::ser"],[2133,"frame_support::traits::storage"],[2134,"frame_system::offchain"],[2135,"core::any"],[2136,"scale_info::ty"],[2137,"core::ops::function"],[2138,"sp_runtime::transaction_validity"],[2139,"core::cmp"]],"d":["Bad/Invalid bundle equivocation fraud proof.","Invalid signature on the bundle header.","Operator submitted bad Execution receipt.","Operator is not allowed to produce bundles in current …","The bad receipt already reported by a previous fraud proof","The targeted bad receipt not found which may already …","Bad/Invalid valid bundle fraud proof","Invalid vrf signature in the proof of election.","","The block slot","Block tree specific errors","","The block tree pruning depth.","Operator caused Bundle equivocation","","How many block a bundle should still consider as valid …","Bundle storage fund specific errors","A domain bundle was included.","Bundle weight exceeds the max bundle weight limit","Bundle size exceed the max bundle size limit in the domain …","Contains a variant per dispatchable extrinsic that this …","The genesis receipt is unchallengeable.","Configuration trait of this pallet.","Same with <code>pallet_subspace::Config::ConfirmationDepthK</code>.","The consensus block hash used to verify ER, only store the …","Consensus chain slot probability.","Currency type used by the domains for staking and other …","The descendants of the fraudulent ER is not pruned","","Post hook to notify accepted domain bundles in previous …","","Domain block hash type.","","The domain header type.","","The amount of fund to be locked up for the domain instance …","","Domain registry specific errors","","Delay before a domain runtime is upgraded.","","","Domain tx range is adjusted after every …","Transfers tracker.","This bundle duplicated with an already submitted bundle","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","A set of <code>BundleDigest</code> from all bundles that successfully …","","","Invalid fraud proof.","","","","Can be used to configure the genesis state of this pallet.","","A variation of the Identifier used for holding the funds …","Initial domain tx range value.","Invalid fraud proof since block fees are not mismatched.","Operator produced bad bundle.","Invalid bundles fraud proof","Invalid domain block hash fraud proof.","Can not find the domain for given domain id.","Bundle with an invalid extrinsic root","Invalid domain extrinsic fraud proof","Can not find the operator for given operator id.","Invalid proof of time in the proof of election","Invalid state transition fraud proof","Invalid fraud proof since transfers are not mismatched.","The maximum bundle per block limit for all domain.","The maximum block size limit for all domain.","The maximum block weight limit for all domain.","The maximum domain name length limit for all domain.","Upper limit for total initial accounts domains","The maximum number of nominators for given operator.","The maximum number of pending staking operation that can …","Minimum balance for each initial domain account","Minimum nominator stake required to nominate and operator.","Minimum operator stake required to become operator of a …","Missing operator.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","","","","Share price for the operator pool at the end of Domain …","","","","","","","","The <code>Pallet</code> struct, the main type that implements traits …","The pallet-domains’s pallet id.","Parent receipt not found.","Permissioned action is not allowed by the caller.","","Randomness source.","An invalid execution receipt found in the bundle.","","","Runtime registry specific errors","Type representing the shares in the staking protocol.","Reason for slashing an operator","The bundle is built on a slot in the future","The bundle is built on a slot in the past","Domain epoch transition interval","Minimum number of blocks after which any finalized …","Staking related errors.","Staking epoch specific errors.","The Bundle is created too long ago.","Starting EVM chain ID for evm runtimes.","Storage fee interface used to deal with bundle storage fee","","Failed to pass the threshold check.","Treasury account.","Per-domain state for tx range calculation.","Unable to calculate bundle limit","Unexpected fraud proof.","Weight information for extrinsics in this pallet.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute and Domain storage fees are shared across …","Domain block tree","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the new tx range based on the bundles produced …","","","","","","","","","","","","","The block hash corresponding to <code>consensus_block_number</code>.","An auto-generated getter for <code>ConsensusBlockHash</code>.","A pointer to the consensus block index which contains all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Pallet::deregister_operator</code>.","","","Auto-generated docs-only module listing all defined …","","Extrinsic root field of the header of domain block …","The block hash corresponding to <code>domain_block_number</code>.","Returns the domain block limit of the given domain.","The index of the current domain block that forms the basis …","Returns the domain bundle limit of the given domain","","","Domain registry for domains","","An auto-generated getter for <code>DomainStakingSummary</code>.","Returns the tx range for the domain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The full ER for this block.","List of storage roots collected during the domain block …","The Merkle root of the execution trace for the current …","The accompanying extrinsics.","","The final state root for the current domain block …","","","","","","","","","","Force staking epoch transition for a given domain","See <code>Pallet::force_staking_epoch_transition</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","Returns the best execution chain number.","","","","","","","","","All the bundles that being included in the consensus block.","","","","","","","","","","","","","","","See <code>Pallet::instantiate_domain</code>.","","Blocks in the current adjustment interval.","Bundles in the current adjustment interval.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the latest confirmed domain block number for a …","An auto-generated getter for <code>LatestSubmittedER</code>.","","","","","","","Create a call with the variant <code>deregister_operator</code>.","Create a call with the variant …","Create a call with the variant <code>instantiate_domain</code>.","Create a call with the variant <code>nominate_operator</code>.","Create a call with the variant <code>register_domain_runtime</code>.","Create a call with the variant <code>register_operator</code>.","Create a call with the variant …","Create a call with the variant <code>submit_bundle</code>.","Create a call with the variant <code>submit_fraud_proof</code>.","Create a call with the variant <code>unlock_funds</code>.","Create a call with the variant <code>unlock_operator</code>.","Create a call with the variant …","Create a call with the variant <code>upgrade_domain_runtime</code>.","Create a call with the variant <code>withdraw_stake</code>.","","See <code>Pallet::nominate_operator</code>.","","Returns if there are any ERs in the challenge period that …","","Returns the block number of the oldest existing …","Called when a bundle is added to the current block.","","","","","","","","","","A set of all operators who have committed to this ER …","An auto-generated getter for <code>OperatorSigningKey</code>.","The hash of the ER for the last domain block.","","","","","See <code>Pallet::register_domain_runtime</code>.","","See <code>Pallet::register_operator</code>.","","Runtime registry for domains","Sealed bundle header.","","Update permissioned action allowed by storage by Sudo.","See <code>Pallet::set_permissioned_action_allowed_by</code>.","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","See <code>Pallet::submit_bundle</code>.","Submits an unsigned extrinsic <code>Call::submit_bundle</code>.","","See <code>Pallet::submit_fraud_proof</code>.","Submits an unsigned extrinsic <code>Call::submit_fraud_proof</code>.","","","","","","","","","","","","","","","","List of transfers from this Domain to other chains","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current tx range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unlocks the first withdrawal given the unlocking period is …","See <code>Pallet::unlock_funds</code>.","Unlocks the operator given the unlocking period is …","See <code>Pallet::unlock_operator</code>.","Extrinsic to update domain’s operator allow list. Note:","See <code>Pallet::update_domain_operator_allow_list</code>.","","See <code>Pallet::upgrade_domain_runtime</code>.","","","","","","","","","","","","","","","","","Autogenerated weights for pallet_domains","","","","See <code>Pallet::withdraw_stake</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block tree specific errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The full ER for this block.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","A set of all operators who have committed to this ER …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Force staking epoch transition for a given domain","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Update permissioned action allowed by storage by Sudo.","Warning: Doc-Only","Warning: Doc-Only","Unlocks the first withdrawal given the unlocking period is …","Unlocks the operator given the unlocking period is …","Extrinsic to update domain’s operator allow list. Note:","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","Domain registry specific errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The probability of successful bundle in a slot (active …","","","","","The consensus chain block number when the domain first …","","","","","","","","","","","","","","","","","","","The domain config.","A user defined name for this domain, should be a …","Domain runtime specific information.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","The hash of the genesis execution receipt for this domain.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The max block size for this domain, may not exceed the …","The max block weight for this domain, may not exceed the …","Allowed operators to operate for this domain.","The address of the domain creator, used to validate …","A pointer to the <code>RuntimeRegistry</code> entry for this domain.","","","","The expected number of bundles for a domain block, must be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Domain runtime specific information to create domain raw …","","Runtime specific errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The domain block tree, map (<code>domain_id</code>, <code>domain_block_number</code>…","Mapping of block tree node hash to the node, each node …","The consensus block hash used to verify ER, only store the …","List of all deposits for given Operator.","The domain registry","Warning: Doc-Only","Warning: Doc-Only","A set of <code>BundleDigest</code> from all bundles that successfully …","The block number of the best domain block, increase by one …","Whether the head receipt have extended in the current …","The head receipt number of each domain","A mapping of <code>bundle_header_hash</code> -&gt; <code>bundle_author</code> for all …","A temporary storage to hold any previous epoch details for …","Storage to hold all the domain’s latest confirmed block.","The latest ER submitted by the operator for a given …","Stores the next domain id.","Stores the next evm chain id.","Warning: Doc-Only","Stores the next runtime id.","Tracks the nominator count under given operator. This …","Share price for the operator pool at the end of Domain …","Warning: Doc-Only","Indexes operator signing key against OperatorId.","List of all registered operators and their configuration.","Temporary hold of all the operators who decided to switch …","A list operators who were slashed during the current epoch …","The pending staking operation count of the current epoch, …","Storage for PermissionedActions for domain instantiation …","Warning: Doc-Only","Warning: Doc-Only","Bundles submitted successfully in current block.","Fraud proofs submitted successfully in current block.","List of all withdrawals for a given operatoreturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeights for pallet_domains using the Substrate node and …","Weight functions needed for pallet_domains.","","","","Storage: <code>Domains::Operators</code> (r:200 w:100) Proof: …","","","","Storage: <code>Domains::OperatorIdOwner</code> (r:1 w:0) Proof: …","","","Storage: <code>Domains::DomainStakingSummary</code> (r:1 w:1) Proof: …","","Storage: <code>Domains::PendingSlashes</code> (r:1 w:1) Proof: …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Storage: <code>Domains::BlockTree</code> (r:1 w:1) Proof: …","","","Storage: <code>Sudo::Key</code> (r:1 w:0) Proof: <code>Sudo::Key</code> (<code>max_values</code>: …","Calls <code>U::from(self)</code>.","","","","","Storage: <code>Domains::Operators</code> (r:1 w:1) Proof: …","","Storage: <code>Domains::DomainStakingSummary</code> (r:1 w:1) Proof: …","","Storage: <code>Domains::NextRuntimeId</code> (r:1 w:1) Proof: …","","Storage: <code>Domains::PendingStakingOperationCount</code> (r:1 w:1) …","","Storage: <code>Domains::HeadReceiptNumber</code> (r:1 w:1) Proof: …","","Storage: <code>Domains::HeadReceiptNumber</code> (r:1 w:1) Proof: …","","","","","","","","Storage: <code>Domains::Operators</code> (r:1 w:0) Proof: …","","Storage: <code>Domains::Operators</code> (r:1 w:1) Proof: …","","Storage: <code>Domains::DomainRegistry</code> (r:1 w:1) Proof: …","","Storage: <code>Domains::RuntimeRegistry</code> (r:1 w:0) Proof: …","","","Storage: <code>Domains::Operators</code> (r:1 w:1) Proof: …"],"i":[32,33,22,33,32,32,32,33,0,7,30,0,7,22,0,7,30,20,33,33,0,32,0,7,0,7,7,32,0,7,20,7,0,7,20,7,20,30,20,7,20,20,7,7,33,0,0,0,0,20,30,0,20,20,0,0,7,7,32,22,32,32,33,33,32,33,33,32,32,7,7,7,7,7,7,7,7,7,7,32,0,0,0,20,0,20,20,20,20,20,20,20,0,7,32,30,20,7,33,0,7,30,7,0,33,33,7,7,30,30,33,0,7,20,33,7,0,33,32,7,20,17,19,20,21,22,3,19,17,30,20,21,31,22,32,33,17,30,20,21,31,22,32,33,17,30,20,21,31,22,32,33,53,0,17,98,19,30,20,3,21,31,22,32,33,17,98,19,30,20,3,21,31,22,32,33,3,19,0,31,17,19,20,21,22,17,19,20,21,22,19,53,19,53,19,19,19,17,30,20,21,31,22,32,33,17,30,20,21,31,22,32,33,17,30,20,21,31,22,32,33,17,30,20,21,31,22,32,33,3,31,17,98,19,30,20,3,21,31,22,32,33,17,98,19,30,20,3,21,31,22,32,33,19,21,3,21,0,19,53,53,19,53,19,19,99,0,19,19,19,17,98,19,30,20,3,21,31,22,32,33,17,30,20,21,31,22,32,33,17,19,20,21,31,22,32,33,17,17,17,17,17,19,19,19,19,19,20,20,20,20,20,21,21,21,21,21,31,31,31,31,31,19,100,53,53,70,19,53,17,19,30,20,21,31,22,32,33,19,21,17,98,19,30,30,30,30,30,20,3,21,31,22,32,33,33,17,17,98,98,19,19,30,30,20,20,3,3,21,21,31,31,22,22,32,32,33,33,17,17,98,98,19,19,30,30,20,20,3,3,21,21,31,31,22,22,32,32,33,33,101,3,19,98,21,21,21,21,21,19,17,30,20,21,31,22,32,33,53,19,19,17,98,19,30,20,3,21,31,22,32,33,19,21,19,31,31,17,98,19,30,20,3,21,31,22,32,33,17,98,19,30,20,3,21,31,22,32,33,17,98,19,30,20,3,21,31,22,32,33,17,98,19,30,20,3,21,31,22,32,33,19,31,19,21,19,19,19,19,19,19,17,19,19,19,21,21,21,21,21,21,21,21,21,21,21,21,21,21,19,21,17,19,19,19,31,19,19,19,19,19,19,19,19,19,100,19,53,3,19,19,19,21,19,21,19,0,70,3,19,21,17,17,30,20,21,31,22,32,33,101,99,19,99,19,0,19,21,19,19,21,19,19,19,17,30,20,21,31,22,32,33,17,19,20,21,22,53,17,98,19,30,20,3,21,31,22,32,33,17,98,19,30,20,3,21,31,22,32,33,17,98,19,30,20,3,21,31,22,32,33,0,0,0,17,30,20,21,31,22,32,33,17,30,20,21,31,22,32,33,17,30,20,21,31,22,32,33,31,17,98,19,30,20,3,21,31,22,32,33,17,30,20,21,31,22,32,33,17,98,19,30,20,3,21,31,22,32,33,17,98,19,30,20,3,21,31,22,32,33,19,21,19,21,19,21,19,21,17,20,21,22,19,17,98,19,30,20,3,21,31,22,32,33,0,19,30,19,21,102,103,102,104,102,105,106,107,108,105,103,109,110,111,112,113,114,115,115,114,114,110,116,117,118,118,119,120,118,121,122,119,120,123,124,125,123,126,127,116,128,117,125,121,126,129,130,127,116,128,131,132,133,117,133,131,134,135,136,134,135,132,57,57,0,57,57,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,90,57,90,57,90,57,90,57,90,57,90,90,90,57,90,57,90,57,90,57,90,57,90,57,90,57,90,57,90,57,90,90,90,90,90,90,90,57,90,57,90,57,57,90,90,57,57,90,90,57,90,57,90,57,90,57,90,57,90,57,90,90,57,90,57,90,90,57,90,57,90,57,90,57,90,57,90,57,90,57,90,57,90,57,90,57,90,90,57,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,44,44,0,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,67,67,92,67,92,92,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,92,67,92,44,67,92,44,67,92,44,67,92,67,67,67,67,67,92,92,92,92,92,44,67,92,44,67,92,44,44,67,67,92,92,44,44,67,67,92,92,92,44,67,92,44,67,92,67,44,67,92,44,67,92,44,67,92,44,67,92,67,67,67,92,67,44,67,92,67,44,67,92,67,92,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,44,67,92,67,92,44,67,92,94,0,94,0,58,58,58,58,58,58,58,58,0,58,0,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,94,93,94,95,93,94,95,93,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,94,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,93,93,93,93,93,94,94,94,94,94,95,95,95,95,95,58,93,94,95,58,93,94,95,58,58,93,93,94,94,95,95,58,58,93,93,94,94,95,95,93,95,58,93,94,95,58,93,94,95,58,93,94,95,93,58,93,94,95,58,93,94,95,58,93,94,95,94,93,95,93,93,93,58,93,94,95,58,93,94,95,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,58,93,94,95,93,93,94,95,93,95,58,93,94,95,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,0,0,171,171,172,171,171,171,172,171,171,172,171,172,171,171,171,171,171,171,172,171,171,172,171,171,171,171,171,172,171,172,171,172,171,172,171,172,171,172,171,171,171,171,171,171,171,172,171,172,171,172,171,172,171,171,172,171],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}0000{{{f{c}}h}{{l{dj}}}n}{{}A`}{c{{Ad{Ab}}}{}}0000000{c{{Af{Ab}}}{}}000000011111111``{ce{}{}}000000000000000000000{{{f{c}}}dn}{Ah{{Al{Aj}}}}{{AnB`B`}An}{{}c{}}{{{Bb{c}}}{{Bb{c}}}Bd}{{{Bf{c}}}{{Bf{c}}}{}}{{{Bh{c}}}{{Bh{c}}}n}{{{Bj{c}}}{{Bj{c}}}n}{{{Bl{ce}}}{{Bl{ce}}}BdBd}{{ce}d{}{}}0000{Ah{{Af{Ab}}}}`{{cg}Al{{Bn{Ah}}}n{{Bn{{C`{e}}}}}}`{{}Cb}{{}Cd}:{c{{l{{Bb{e}}Cf}}}ChCj}{c{{l{{Cl{e}}Cf}}}Ch{}}{c{{l{{Bh{e}}Cf}}}Chn}{c{{l{{Bj{e}}Cf}}}Chn}{c{{l{CnCf}}}Ch}{c{{l{{Bl{eg}}Cf}}}ChCjCj}{c{{l{D`Cf}}}Ch}{c{{l{DbCf}}}Ch}{{{Dd{Ab}}}{{l{cCf}}}{}}0000000{{Df{Dd{Ab}}}{{l{cCf}}}{}}0000000{{Dfc}{{l{eCf}}}Ch{}}0000000{{}{{f{c}}}n}{{}Cn}{Cbc{}}000000000000000000000{{{Dh{c}}Dj}Dln}`{c{{l{{f{e}}}}}Dnn}{{{Bj{c}}e}E`n{}}`{Ah{{Al{{Eb{c}}}}}n}``{Ah{{Al{Ed}}}}`{Ah{{l{{Al{Ef}}Eh}}}}{Ah{{Al{{El{Ej{C`{c}}}}}}}n}{Ah}`{Ah{{Al{{Af{Ab}}}}}}{c{{Al{{`{Dj}}}}}{{Bn{Ah}}}}{AhAn}{Cbd}0000000000{{{Bb{c}}e}dEn{F`Fb}}{{{Cl{c}}e}d{}{F`Fb}}{{{Bh{c}}e}dn{F`Fb}}{{{Bj{c}}e}dn{F`Fb}}{{Cnc}d{F`Fb}}{{{Bl{ce}}g}dEnEn{F`Fb}}{{D`c}d{F`Fb}}{{Dbc}d{F`Fb}}{{{Bb{c}}{Bb{c}}}FdFf}{{{Bf{c}}{Bf{c}}}Fd{}}{{{Bh{c}}{Bh{c}}}Fdn}{{{Bj{c}}{Bj{c}}}Fdn}{{CnCn}Fd}{{{Bl{ce}}{Bl{ce}}}FdFfFf}{{D`D`}Fd}{{DbDb}Fd}{{ce}Fd{}{}}000000000000000000000000{{{Fh{c}}}{{Al{{Fj{c}}}}}n}````{{}}`{{{Bb{c}}Fl}FnG`}{{{Bf{c}}Fl}Fn{}}{{{Cl{c}}Fl}Fnn}{{{Bh{c}}Fl}Fnn}{{{Bj{c}}Fl}Fnn}{{CnFl}Fn}{{{Bl{ce}}Fl}FnG`G`}{{D`Fl}Fn}{{DbFl}Fn}{{{Dh{c}}Ah}E`n}`{cc{}}00{Gb{{Cl{c}}}{}}{Gd{{Cl{c}}}{}}2{D`{{Cl{c}}}{}}{Eh{{Cl{c}}}{}}444444{GfDb}55{ce{}{}}606006060606600660066006066060600660066006{{{C`{c}}}{{Al{Gh}}}Gj}`{Ah{{Al{Gl}}}}{{}Gn}{{{Bj{c}}}Abn}{{}{{Dd{Ab}}}}{{{Bj{c}}}H`n}{{}{{Dd{H`}}}}{{{Bj{c}}}Hbn}{Ah{{Eb{c}}}n}{c{{Af{Ab}}}{}}0000000`{{}Cb}{{}{{Af{Hd}}}}11111111111{{{Dh{c}}Hf}Dln}`{{}d}``>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>{{Ah{Eb{c}}}Fdn}{cFd{}}{AhFd}{{{Bj{c}}e}Fdn{}}{{AhDj}Fd}{Ah{{Al{{El{{Eb{c}}}}}}}n};{c{{Eb{e}}}{{Bn{{El{AhDj}}}}}n}{{}A`}0`{{}H`}0{{}{{Ad{Ab}}}}{Dj{{Bj{c}}}n}{Ah{{Bj{c}}}n}{Hf{{Bj{c}}}n}2{{jHh{Af{Ab}}}{{Bj{c}}}n}{{AhBb}{{Bj{c}}}n}{Hj{{Bj{c}}}n}{{{Hl{c}}}{{Bj{c}}}n}{{{I`{{Hn{{C`{c}}}}}}}{{Bj{c}}}n}77{{AhIb}{{Bj{c}}}n}{{Id{Af{Ab}}}{{Bj{c}}}n}9{{{Dh{c}}Dj}Dln}``{AhFd}{{{C`{c}}}dn}{Ah{{Al{{Eb{c}}}}}n}{Cnd}{{}If}33{{}d}{{{C`{c}}A`}A`n}{{{C`{c}}}A`n}0{{}A`}{Dj{{Al{{El{Ih}}}}}}`{c{{Al{Dj}}}{{Bn{Ih}}}}``{c{{l{dIj}}}{}}{{Ah{Eb{c}}}{{Al{{Fh{c}}}}}n}{{{Dh{c}}jHh{Af{Ab}}}Dln}`{{{Dh{c}}AhBb}Dln}`{Ah{{Al{Id}}}}``{{{f{c}}e}lnIl}{{{Dh{c}}Hj}Dln}``{{{Bb{c}}}CbEn}{{{Cl{c}}}Cb{}}{{{Bh{c}}}Cbn}{{{Bj{c}}}Cbn}{CnCb}{{{Bl{ce}}}CbEnEn}{D`Cb}{DbCb}{Gh{{Al{{C`{c}}}}}Gj}{Dj}00{{}{{Af{In}}}}`{{{Dh{c}}{Hl{c}}}E`n}`{{{Hl{c}}}d{n{J`{Bj}}}}{{{Dh{c}}{I`{{Hn{{C`{c}}}}}}}E`n}`{{{Hn{{C`{c}}}}}d{nJ`}}{Ah{{Af{Gl}}}}{AhAf}{{c{Dd{Ab}}}{{Af{Ab}}}{}}0000000{ce{}{}}0000`{c{{l{e}}}{}{}}00000000000000000000000000000000```{c{{Ad{Ab}}}{}}000000000000000{c{{Af{Ab}}}{}}0000000`{cJb{}}0000000000{{}Jd}00000005555555555555555555555{{{Dh{c}}Dj}Dln}`{{{Dh{c}}Dj}E`n}`{{{Dh{c}}AhIb}Dln}`{{{Dh{c}}Id{Af{Ab}}}Dln}`{{cgFd}e{}{}{{Jh{{Dd{Ab}}}{{Jf{e}}}}}}000{{Jjc}Jl{}};;;;;;;;;;;`{{}{{Af{Jn}}}}{{cA`}{{Kb{K`}}}{}}7````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}<<;;<<>>>>{{{Kd{cegik}}}{{Kd{cegik}}}BdBdBdBdBd}{{ce}d{}{}}{c{{l{GbCf}}}Ch}{c{{l{{Kd{egikm}}Cf}}}Ch{}{}{}{}{}}{{{Dd{Ab}}}{{l{cCf}}}{}}0{{Df{Dd{Ab}}}{{l{cCf}}}{}}0{{Dfc}{{l{eCf}}}Ch{}}0{Cbc{}}000{Cbd}0{{Gbc}d{F`Fb}}{{{Kd{cegik}}m}d{}{}{}{}{}{F`Fb}}{{GbGb}Fd}{{{Kd{cegik}}{Kd{cegik}}}FdFfFfFfFfFf}{{ce}Fd{}{}}0000`{{GbFl}Fn}{{{Kd{cegik}}Fl}FnG`G`G`G`G`}{cc{}}00{ce{}{}}010110{c{{Af{Ab}}}{}}0{{}Cb}022222222`{GbCb}{{{Kd{cegik}}}Cb{}{}{}{}{}}{{c{Dd{Ab}}}{{Af{Ab}}}{}}05{c{{l{e}}}{}{}}00000{c{{Ad{Ab}}}{}}00066{cJb{}}0{{}Jd}09999{{cgFd}e{}{}{{Jh{{Dd{Ab}}}{{Jf{e}}}}}}::{Djd}{Ahd}{Hfd}2{{jHh{Af{Ab}}}d}{{AhBb}d}{Hjd}{{{Hl{c}}}dn}{{{I`{{Hn{{C`{c}}}}}}}dn}77{{AhIb}d}{{Id{Af{Ab}}}d}9```````````````````````{{cb}d{}}0>>>{c{{Af{Ab}}}{}}00???{ce{}{}}00000`{{{Hf{ce}}}{{Hf{ce}}}{BdKf}Bd}{{{Kh{cegi}}}{{Kh{cegi}}}BdBd{BdKf}Bd}{{ce}d{}{}}0`{c{{l{EhCf}}}Ch}{c{{l{{Hf{eg}}Cf}}}ChKf{}}{c{{l{{Kh{egik}}Cf}}}ChCjCj{CjKf}{}}{{{Dd{Ab}}}{{l{cCf}}}{}}00{{Df{Dd{Ab}}}{{l{cCf}}}{}}00{{Dfc}{{l{eCf}}}Ch{}}00{Cbc{}}00000```{Cbd}00{{Ehc}d{F`Fb}}{{{Hf{ce}}g}dKf{}{F`Fb}}{{{Kh{cegi}}k}dEnEn{EnKf}{}{F`Fb}}{{EhEh}Fd}{{{Hf{ce}}{Hf{ce}}}Fd{FfKf}Ff}{{{Kh{cegi}}{Kh{cegi}}}FdFfFf{FfKf}Ff}{{ce}Fd{}{}}000000000{{EhFl}Fn}{{{Hf{ce}}Fl}Fn{G`Kf}G`}{{{Kh{cegi}}Fl}FnG`G`{G`Kf}G`}{cc{}}00{ce{}{}}10110100110`{c{{Af{Ab}}}{}}00{{}Cb}00`222222222222`````{EhCb}{{{Hf{ce}}}CbKf{}}{{{Kh{cegi}}}CbEnEn{EnKf}{}}`{{c{Dd{Ab}}}{{Af{Ab}}}{}}0066{c{{l{e}}}{}{}}00000000{c{{Ad{Ab}}}{}}00000777{cJb{}}00{{}Jd}00::::::{{cgFd}e{}{}{{Jh{{Dd{Ab}}}{{Jf{e}}}}}}0;;;````````````````{{cb}d{}}004444;;;;4444<<<<<<<<{{}c{}}{{{Kj{ce}}}{{Kj{ce}}}BdBd}{KlKl}{{{Kn{c}}}{{Kn{c}}}Bd}{{ce}d{}{}}00`{c{{l{GdCf}}}Ch}{c{{l{{Kj{eg}}Cf}}}ChCjCj}{c{{l{KlCf}}}Ch}{c{{l{{Kn{e}}Cf}}}ChCj}{{{Dd{Ab}}}{{l{cCf}}}{}}000{{Df{Dd{Ab}}}{{l{cCf}}}{}}000{{Dfc}{{l{eCf}}}Ch{}}000{{}Kl}{Cbc{}}0000000{Cbd}000{{Gdc}d{F`Fb}}{{{Kj{ce}}g}dEnEn{F`Fb}}{{Klc}d{F`Fb}}{{{Kn{c}}e}dEn{F`Fb}}{{GdGd}Fd}{{{Kj{ce}}{Kj{ce}}}FdFfFf}{{KlKl}Fd}{{{Kn{c}}{Kn{c}}}FdFf}{{ce}Fd{}{}}00000000000000{{GdFl}Fn}{{{Kj{ce}}Fl}FnG`G`}{{KlFl}Fn}{{{Kn{c}}Fl}FnG`}{cc{}}0000{ce{}{}}01010101011001``{c{{Af{Ab}}}{}}000{{}Cb}0002222{{{Kj{ce}}AhKl{Af{{El{L`}}}}}{{l{LbGd}}}{}{}}333333333333{cFd{}}`````{GdCb}{{{Kj{ce}}}CbEnEn}{KlCb}{{{Kn{c}}}CbEn}{{c{Dd{Ab}}}{{Af{Ab}}}{}}000999{c{{l{e}}}{}{}}00000000000{c{{Ad{Ab}}}{}}0000000::::{cJb{}}000{{}Jd}000========`{{cgFd}e{}{}{{Jh{{Dd{Ab}}}{{Jf{e}}}}}}00``>>>>``````````````````````````````````>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>{Cbc{}}00000000000000000000000000000000000000000000000000000000000000000{Cbd}00000000000000000000000000000000{cc{}}000000000000000000000000000000000{ce{}{}}1001100110011010010101100101100110100110010110010101100101101010010101101010011001010101010110100101011010100110101001011010100101{{}Cb}00000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999777777777777777777777777777777777111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111``11{{DfDf}A`}055{{}A`}05{DfA`}00054545003114444110011111111<<<:4411001111411","c":[80],"p":[[5,"Private",2104],[1,"unit"],[5,"GenesisConfig",0],[5,"Storage",2105],[5,"String",2106],[6,"Result",2107],[10,"Config",0],[5,"Weight",2108],[1,"u8"],[1,"array"],[5,"Vec",2109],[5,"DomainId",2110],[5,"BundleProducerElectionParams",2111],[6,"Option",2112],[5,"U256",2113],[1,"u64"],[5,"OperatorConfig",0],[10,"Clone",2114],[5,"Pallet",0],[6,"Event",0],[6,"Call",0],[6,"SlashedReason",0],[10,"EncodeLike",2115],[8,"BlockNumberFor",2116],[1,"usize"],[5,"CrateVersion",2117],[5,"Error",2118],[10,"Input",2119],[10,"Decode",2119],[6,"Error",0],[5,"TxRangeState",0],[6,"FraudProofError",0],[6,"BundleError",0],[1,"slice"],[1,"u32"],[8,"OriginFor",2116],[8,"OperatorId",2110],[8,"DispatchResult",2120],[10,"Deserializer",2121],[8,"DispatchResultWithPostInfo",2120],[8,"DomainBlockNumberFor",0],[5,"DomainBlockLimit",2110],[5,"DomainBundleLimit",2110],[6,"Error",896],[5,"DomainInstanceData",2110],[1,"tuple"],[10,"Encode",2119],[10,"Output",2119],[10,"Sized",2122],[1,"bool"],[10,"PartialEq",2123],[8,"ReceiptHashFor",0],[8,"ExecutionReceiptOf",0],[5,"Formatter",2124],[8,"Result",2124],[10,"Debug",2124],[6,"Error",771],[6,"Error",1069],[6,"ProofOfElectionError",2111],[5,"Slot",2125],[10,"Config",2126],[5,"H256",2127],[8,"EVMChainId",2128],[1,"str"],[5,"DispatchInfo",2120],[5,"PalletInfoData",2117],[5,"DomainConfig",896],[6,"RuntimeType",2110],[6,"PermissionedActionAllowedBy",2110],[8,"OpaqueBundleOf",0],[6,"FraudProof",2129],[5,"Box",2130],[6,"OperatorAllowList",2110],[8,"RuntimeId",2110],[5,"StorageVersion",2117],[8,"OperatorPublicKey",2110],[6,"TransactionValidityError",2131],[10,"Serializer",2132],[5,"StorageInfo",2133],[10,"SendTransactionTypes",2134],[5,"TypeId",2135],[5,"Type",2136],[17,"Output"],[10,"FnOnce",2137],[6,"TransactionSource",2131],[8,"TransactionValidity",2131],[5,"TrackedStorageKey",2105],[5,"PostDispatchInfo",2120],[5,"DispatchErrorWithPostInfo",2138],[5,"BlockTreeNode",771],[10,"Ord",2123],[5,"DomainObject",896],[5,"RuntimeObject",1069],[6,"DomainRuntimeInfo",1069],[5,"ScheduledRuntimeUpgrade",1069],[6,"MultiAccountId",2128],[5,"RawGenesis",2139],[5,"StartingEVMChainId",0],[10,"HoldIdentifier",0],[8,"BlockTreeNodeFor",0],[10,"BlockSlot",0],[15,"register_operator",709],[15,"nominate_operator",709],[15,"instantiate_domain",709],[15,"update_domain_operator_allow_list",709],[15,"force_staking_epoch_transition",709],[15,"submit_fraud_proof",709],[15,"submit_bundle",709],[15,"deregister_operator",709],[15,"withdraw_stake",709],[15,"unlock_funds",709],[15,"unlock_operator",709],[15,"set_permissioned_action_allowed_by",709],[15,"register_domain_runtime",709],[15,"upgrade_domain_runtime",709],[15,"FundsUnlocked",731],[15,"StorageFeeDeposited",731],[15,"BundleStored",731],[15,"DomainEpochCompleted",731],[15,"ForceDomainEpochTransition",731],[15,"OperatorRegistered",731],[15,"DomainInstantiated",731],[15,"FraudProofProcessed",731],[15,"DomainOperatorAllowListUpdated",731],[15,"OperatorSwitchedDomain",731],[15,"OperatorNominated",731],[15,"WithdrewStake",731],[15,"PreferredOperator",731],[15,"OperatorDeregistered",731],[15,"OperatorUnlocked",731],[15,"OperatorRewarded",731],[15,"OperatorTaxCollected",731],[15,"OperatorSlashed",731],[15,"DomainRuntimeCreated",731],[15,"DomainRuntimeUpgradeScheduled",731],[15,"DomainRuntimeUpgraded",731],[15,"EVM",1286],[5,"SuccessfulBundles",1287],[5,"SuccessfulFraudProofs",1287],[5,"NextRuntimeId",1287],[5,"NextEVMChainId",1287],[5,"RuntimeRegistry",1287],[5,"ScheduledRuntimeUpgrades",1287],[5,"NextOperatorId",1287],[5,"OperatorIdOwner",1287],[5,"OperatorSigningKey",1287],[5,"DomainStakingSummary",1287],[5,"Operators",1287],[5,"PendingOperatorSwitches",1287],[5,"OperatorEpochSharePrice",1287],[5,"Deposits",1287],[5,"Withdrawals",1287],[5,"NominatorCount",1287],[5,"PendingSlashes",1287],[5,"PendingStakingOperationCount",1287],[5,"NextDomainId",1287],[5,"DomainRegistry",1287],[5,"BlockTree",1287],[5,"BlockTreeNodes",1287],[5,"HeadReceiptNumber",1287],[5,"HeadReceiptExtended",1287],[5,"ConsensusBlockHash",1287],[5,"ExecutionInbox",1287],[5,"InboxedBundleAuthor",1287],[5,"HeadDomainNumber",1287],[5,"LastEpochStakingDistribution",1287],[5,"LatestConfirmedDomainBlock",1287],[5,"LatestSubmittedER",1287],[5,"PermissionedActionAllowedBy",1287],[5,"DomainTxRangeState",1287],[5,"SubstrateWeight",2046],[10,"WeightInfo",2046]],"b":[[343,"impl-From%3CError%3E-for-Error%3CT%3E"],[344,"impl-From%3CError%3E-for-Error%3CT%3E"],[346,"impl-From%3CFraudProofError%3E-for-Error%3CT%3E"],[347,"impl-From%3CError%3E-for-Error%3CT%3E"],[517,"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[518,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[521,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[522,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["pallet_feeds",{"doc":"Pallet feeds, used for storing arbitrary user-provided …","t":"GFKGGPPFPPRRPRPIPPPFRFPNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNONNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNNONPONNNNNNCNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHPPIGKNNNNNNNNNNNNNNNNNNMNNNNNNNNOOOFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Call","CallObject","Config","Error","Event","FeedClosed","FeedClosed","FeedConfig","FeedCreated","FeedDeleted","FeedId","FeedProcessorKind","FeedUpdated","MaxFeeds","MaxFeedsReached","Module","NotFeedOwner","ObjectSubmitted","OwnershipTransferred","Pallet","RuntimeEvent","TotalObjectsAndSize","UnknownFeedId","__clone_box","__clone_box","__clone_box","active","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","close","close","count","count","crate_version","create","create","current_storage_version","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_call_objects","feed_configs","feed_processor","feed_processor","feed_processor_id","feeds","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","identity","identity","index","infos","init","init","init","init","init","init","init","integrity_test","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_feeless","key","metadata","module_name","name","name_hash","new_call_variant_close","new_call_variant_create","new_call_variant_put","new_call_variant_transfer","new_call_variant_update","next_feed_id","offchain_worker","offset","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","owner","put","put","size","size_hint","size_hint","size_hint","size_hint","size_hint","storage_info","storage_types","successful_puts","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","totals","transfer","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","feed_id","feed_id","feed_id","feed_id","feed_processor_id","feed_processor_id","init_data","init_data","new_owner","object","feed_id","feed_id","feed_id","feed_id","feed_id","feed_id","metadata","new_owner","object_size","old_owner","who","who","who","who","who","close","create","put","transfer","update","Content","Custom","FeedMetadata","FeedObjectMapping","FeedProcessor","borrow","borrow_mut","delete","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into_key","into_mut","into_ref","object_mappings","put","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip","key","offset","offset","FeedConfigs","Feeds","Metadata","NextFeedId","SuccessfulPuts","Totals","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_feeds"],[355,"pallet_feeds::Call"],[365,"pallet_feeds::Event"],[380,"pallet_feeds::dispatchables"],[385,"pallet_feeds::feed_processor"],[417,"pallet_feeds::feed_processor::FeedObjectMapping"],[420,"pallet_feeds::storage_types"],[558,"dyn_clone::sealed"],[559,"sp_weights::weight_v2"],[560,"alloc::vec"],[561,"frame_system::pallet_prelude"],[562,"frame_support::dispatch"],[563,"frame_support::traits::metadata"],[564,"core::option"],[565,"parity_scale_codec::error"],[566,"core::result"],[567,"parity_scale_codec::codec"],[568,"parity_scale_codec::codec"],[569,"frame_support::dispatch"],[570,"parity_scale_codec::codec"],[571,"alloc::boxed"],[572,"bounded_collections::bounded_vec"],[573,"core::fmt"],[574,"core::fmt"],[575,"core::any"],[576,"scale_info::ty"],[577,"sp_storage"],[578,"frame_support::dispatch"],[579,"sp_runtime"]],"d":["Contains a variant per dispatchable extrinsic that this …","Mapping to the object offset within an extrinsic …","Configuration trait of this pallet.","<code>pallet-feeds</code> errors","<code>pallet-feeds</code> events","Feed was closed.","Feed was closed","","New feed was created.","Feed was deleted.","","","An existing feed was updated.","","Maximum feeds created by the caller","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Not a feed owner","New object was added.","feed ownership transferred","Pallet feeds, used for storing arbitrary user-provided …","<code>pallet-feeds</code> events","Total amount of data and number of objects stored in a feed","<code>FeedId</code> doesn’t exist","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the feed and stops accepting new feed.","See <code>Pallet::close</code>.","","Total number of objects","","Create a new feed","See <code>Pallet::create</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the call objects if an extrinsic corresponds to <code>put</code>…","An auto-generated getter for <code>FeedConfigs</code>.","Defines FeedProcessor and its types","","","An auto-generated getter for <code>Feeds</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Key to the object located at the offset.","An auto-generated getter for <code>Metadata</code>.","","","","Create a call with the variant <code>close</code>.","Create a call with the variant <code>create</code>.","Create a call with the variant <code>put</code>.","Create a call with the variant <code>transfer</code>.","Create a call with the variant <code>update</code>.","An auto-generated getter for <code>NextFeedId</code>.","","Offset of object in the encoded call.","","","","","","","","","Put a new object into a feed","See <code>Pallet::put</code>.","Total size of objects in bytes","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","An auto-generated getter for <code>Totals</code>.","Transfers feed from current owner to new owner","See <code>Pallet::transfer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the feed with init data provided.","See <code>Pallet::update</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the feed and stops accepting new feed.","Create a new feed","Put a new object into a feed","Transfers feed from current owner to new owner","Updates the feed with init data provided.","Maps the object or some data within the object at the …","Maps the object or some data within the object at the …","Metadata of a feed object as raw bytes.","Holds the offset to some portion of data within/or the …","Feed Processor","","","Signals a delete to any underlying feed data.","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Initiates a specific Feed with data transparent to …","","Calls <code>U::from(self)</code>.","","","","Returns any object mappings inside the given object","Puts a feed and returns the Metadata if any. This is …","","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,8,19,0,8,8,9,9,8,9,19,0,19,8,8,0,9,0,19,7,8,10,20,7,8,19,10,20,22,8,19,10,20,22,8,19,10,20,22,7,8,19,10,31,20,22,7,8,19,10,31,20,22,22,7,8,10,7,8,10,7,10,7,22,7,7,10,7,8,19,10,20,22,8,19,10,20,22,8,19,10,20,22,8,19,10,20,22,20,22,7,8,19,10,31,20,22,7,8,19,10,31,20,22,10,0,7,8,19,10,31,20,22,8,19,10,20,22,7,8,10,22,7,7,7,8,8,8,10,10,10,22,22,22,10,7,0,9,20,7,7,8,19,10,31,20,22,7,8,19,10,31,20,22,7,7,8,8,19,19,10,10,31,31,20,20,22,22,7,7,8,8,19,19,10,10,31,31,20,20,22,22,10,10,10,10,10,8,19,10,20,22,7,7,7,8,19,10,31,20,22,7,7,8,19,10,31,20,22,7,8,19,10,31,20,22,7,8,19,10,31,20,22,7,8,19,10,31,20,22,22,10,31,7,7,7,7,10,10,10,10,10,7,7,31,7,7,7,7,7,7,7,20,7,10,22,8,19,10,20,22,7,0,7,8,19,10,20,22,7,8,10,7,7,10,7,8,19,10,31,20,22,7,8,19,10,31,20,22,7,8,19,10,31,20,22,0,0,0,8,19,10,20,22,8,19,10,20,22,8,19,10,20,22,7,8,19,10,31,20,22,8,19,10,20,22,7,8,19,10,31,20,22,7,8,19,10,31,20,22,7,10,7,8,19,10,31,20,22,7,19,54,55,56,57,58,54,58,54,57,55,59,60,61,62,63,64,59,64,59,64,59,60,61,62,63,0,0,0,0,0,52,52,0,0,0,52,52,33,52,52,52,52,52,52,52,52,52,33,52,52,52,52,52,33,33,52,52,52,52,52,52,52,65,66,65,0,0,0,0,0,0,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,67,68,68,69,69,70,70,71,71,72,72,67,67,68,68,69,69,70,70,71,71,72,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72],"f":"```````````````````````{{cb}d{}}00`{{}f}{c{{j{h}}}{}}0000{c{{l{h}}}{}}000011111{ce{}{}}0000000000000{{}c{}}{{{n{c}}}{{n{c}}}{}}{{{A`{c}}}{{A`{c}}}Ab}{{{Ad{c}}}{{Ad{c}}}Ab}{{ce}d{}{}}00{{{Af{c}}}AhAb}`{{}Aj}`{{}Al}{{{Af{c}}{An{{l{h}}}}}AhAb}`8{c{{Bb{{A`{e}}B`}}}BdAb}{c{{Bb{{Bf{e}}B`}}}Bd{}}{c{{Bb{{Ad{e}}B`}}}BdAb}{c{{Bb{{Bh{eg}}B`}}}BdBjBj}{c{{Bb{BlB`}}}Bd}{{{Bn{h}}}{{Bb{cB`}}}{}}0000{{C`{Bn{h}}}{{Bb{cB`}}}{}}0000{{C`c}{{Bb{eB`}}}Bd{}}0000{{}{{Bh{ce}}}CbCb}{{}Bl}{Ajc{}}0000000000000{{{Ad{c}}e}CdAb{}}`{Ajd}000000{{{A`{c}}e}dAb{CfCh}}{{{Bf{c}}e}d{}{CfCh}}{{{Ad{c}}e}dAb{CfCh}}{{{Bh{ce}}g}dCjCj{CfCh}}{{Blc}d{CfCh}}{{{n{c}}{n{c}}}Cl{}}{{{A`{c}}{A`{c}}}ClAb}{{{Ad{c}}{Ad{c}}}ClAb}{{BlBl}Cl}{{ce}Cl{}{}}00000000000{{{Ad{c}}}{{l{Cn}}}Ab}{c{{An{Bh}}}D`}`{c{{Dd{Db}}}{}}`{c{{An{Df}}}D`}{{{n{c}}Dh}Dj{}}{{{A`{c}}Dh}DjAb}{{{Bf{c}}Dh}DjAb}{{{Ad{c}}Dh}DjAb}{{CnDh}Dj}{{{Bh{ce}}Dh}DjDlDl}{{BlDh}Dj}{cc{}}000000{ce{}{}}110011001010110101001010101{{{Ad{c}}}hAb}{{}{{Bn{h}}}}{{{Ad{c}}}DnAb}{{}{{Bn{Dn}}}}{{{Ad{c}}}E`Ab}{c{{l{h}}}{}}0000{{}Aj}{{}{{l{Eb}}}}1111111{{}d}9999999999999999999999999999{cCl{}}{{{Ad{c}}e}ClAb{}}`{c{{An{Ed}}}D`}{{}Dn}0{{}{{j{h}}}}{{}{{Ad{c}}}Ab}{{{An{{l{h}}}}}{{Ad{c}}}Ab}{{{l{h}}}{{Ad{c}}}Ab}21{{}}{{{Ef{c}}}dAb}`{{}Eh}1;{{{Ef{c}}f}fAb}{{{Ef{c}}}fAb}0{{}f}`{{{Af{c}}{l{h}}}AhAb}``{{{A`{c}}}AjAb}{{{Bf{c}}}Aj{}}{{{Ad{c}}}AjAb}{{{Bh{ce}}}AjCjCj}{BlAj}{{}{{l{Ej}}}}`{{}l}{{c{Bn{h}}}{{l{h}}}{}}0000{ce{}{}}00{cBlD`}{{{Af{c}}}AhAb}`{c{{Bb{e}}}{}{}}00000000000000000000```{c{{j{h}}}{}}000000000{c{{l{h}}}{}}0000{cEl{}}000000{{}En}000077777777777777{{{Af{c}}{An{{l{h}}}}}AhAb}`8888888{{}{{l{F`}}}}{{cf}{{Fd{Fb}}}{}}`````````````````````````{{}d}{{{An{{l{h}}}}}d}{{{l{h}}}d}21`````=={{Dbc}Ff{}}{Ajc{}}0{Ajd}{{FhDh}Dj}{cc{}}{ce{}{}}101{{Dbc{Bn{h}}}Ff{}}{{}Aj}2222{{Dbc{Bn{h}}}{{l{Fh}}}{}}{{Dbc{Bn{h}}}{{Bb{{An{Ed}}Fj}}}{}}{c{{Bb{e}}}{}{}}00{cEl{}}666`````````666666666666::::::::::::999999777777677676766767766767676776444444666666666666666666666666111111111111111111000000666666666666666666","c":[15],"p":[[5,"Private",558],[1,"unit"],[5,"Weight",559],[1,"u8"],[1,"array"],[5,"Vec",560],[5,"Pallet",0],[6,"Event",0],[10,"Config",0],[6,"Call",0],[8,"OriginFor",561],[8,"DispatchResult",562],[1,"usize"],[5,"CrateVersion",563],[6,"Option",564],[5,"Error",565],[6,"Result",566],[10,"Input",567],[6,"Error",0],[5,"FeedConfig",0],[10,"Decode",567],[5,"TotalObjectsAndSize",0],[1,"slice"],[1,"u32"],[10,"Default",568],[8,"DispatchResultWithPostInfo",562],[10,"Output",567],[10,"Sized",569],[10,"Encode",567],[1,"bool"],[5,"CallObject",0],[10,"EncodeLike",570],[10,"FeedProcessor",385],[5,"Box",571],[5,"BoundedVec",572],[5,"Formatter",573],[8,"Result",573],[10,"Debug",573],[1,"str"],[5,"DispatchInfo",562],[5,"PalletInfoData",563],[8,"FeedMetadata",385],[8,"BlockNumberFor",561],[5,"StorageVersion",563],[5,"StorageInfo",574],[5,"TypeId",575],[5,"Type",576],[5,"TrackedStorageKey",577],[5,"PostDispatchInfo",562],[5,"DispatchErrorWithPostInfo",578],[8,"DispatchResult",578],[6,"FeedObjectMapping",385],[6,"DispatchError",578],[15,"update",355],[15,"put",355],[15,"close",355],[15,"transfer",355],[15,"create",355],[15,"ObjectSubmitted",365],[15,"FeedCreated",365],[15,"FeedUpdated",365],[15,"FeedClosed",365],[15,"FeedDeleted",365],[15,"OwnershipTransferred",365],[15,"Custom",417],[15,"Content",417],[5,"Metadata",420],[5,"FeedConfigs",420],[5,"Feeds",420],[5,"Totals",420],[5,"NextFeedId",420],[5,"SuccessfulPuts",420]],"b":[[253,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[254,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["pallet_grandpa_finality_verifier",{"doc":"Substrate GRANDPA finality verifier","t":"FNONNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNONNNNNNNNNNNNNNRKRRRIONNNNNNOGRKGPPPPPPPPPPPIFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNHNNCNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNHNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["InitializationData","__clone_box","best_known_finalized_header","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","chain","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_key","into_mut","into_ref","is_clear","pallet","serialize","set_id","size_hint","to_keyed_vec","to_owned","try_from","try_into","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","BlockNumber","Chain","Hash","Hasher","Header","SignedBlock","block","decode_block","decode_block_hash","decode_block_number","decode_block_number_and_hash","decode_grandpa_justifications","decode_header","justifications","Call","ChainId","Config","Error","FailedDecodingBlock","FailedDecodingBlockHash","FailedDecodingBlockNumber","FailedDecodingHeader","FailedDecodingInitData","FailedDecodingJustifications","InvalidAuthoritySet","InvalidBlock","InvalidHeader","InvalidJustification","MissingJustification","Module","Pallet","UnsupportedScheduledChange","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","initialize","integrity_test","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_feeless","module_name","name","name_hash","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","purge","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_finalized_block","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","ChainTip","CurrentAuthoritySet","OldestKnownParent","ValidationCheckPoint","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_grandpa_finality_verifier"],[56,"pallet_grandpa_finality_verifier::chain"],[70,"pallet_grandpa_finality_verifier::pallet"],[236,"pallet_grandpa_finality_verifier::pallet::storage_types"],[328,"dyn_clone::sealed"],[329,"alloc::vec"],[330,"parity_scale_codec::error"],[331,"core::result"],[332,"parity_scale_codec::codec"],[333,"serde::de"],[334,"parity_scale_codec::codec"],[335,"core::fmt"],[336,"core::fmt"],[337,"core::any"],[338,"scale_info::ty"],[339,"sp_weights::weight_v2"],[340,"frame_support::traits::metadata"],[341,"frame_support::dispatch"],[342,"frame_support::dispatch"],[343,"frame_support::traits::metadata"],[344,"sp_runtime"],[345,"sp_storage"],[346,"frame_support::dispatch"]],"d":["Data required to initialize a Chain","","Scale encoded best finalized header we know.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","","The ID of the current authority set","","","","","","","","","","","","","","","A type that fulfills the abstract idea of what a Substrate …","Minimal Substrate-based chain representation that may be …","A type that fulfills the abstract idea of what a Substrate …","A type that fulfills the abstract idea of what a Substrate …","A type that fulfills the abstract idea of what a Substrate …","","Full block.","","","","","","","Block justification.","Contains a variant per dispatchable extrinsic that this …","","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","Failed to Decode block","Failed to Decode block hash","Failed to Decode block number","Failed to Decode header","Failed to decode initialization data","Failed to decode justifications","The authority set from the underlying header chain is …","The block and its contents are not valid","The header is already finalized","The given justification is invalid for the given header.","Justification is missing..","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","The scheduled authority set change found in the header is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Bootstrap the chain to start importing valid finalized …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","purges the on chain state of a given chain","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Known tip of the chain","The current GRANDPA Authority set for a given Chain","Oldest known parent","The point after which the block validation begins","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,42,0,42,42,42,0,22,42,42,42,42,42,42,22,0,24,0,0,23,23,23,23,23,23,23,23,23,23,23,0,0,23,27,28,27,23,28,23,28,23,28,27,23,28,27,23,28,27,28,27,28,27,27,27,23,28,23,28,23,28,23,28,27,23,28,27,23,28,28,0,27,23,28,23,27,28,27,27,27,28,28,28,27,23,28,27,23,28,27,27,23,23,28,28,27,27,23,23,28,28,28,28,28,28,28,23,28,27,27,27,23,28,0,27,27,23,28,27,23,28,27,23,28,27,23,28,28,27,27,27,27,27,27,27,27,27,27,0,23,27,0,23,28,27,28,27,23,28,27,23,28,27,23,28,0,0,0,23,28,23,28,23,28,27,23,28,23,28,27,23,28,27,23,28,0,27,23,28,27,23,0,0,0,0,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,43,44,44,45,45,46,46,43,43,44,44,45,45,46,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46,43,44,45,46],"f":"`{{cb}d{}}`{c{{h{f}}}{}}{c{{j{f}}}{}}1{ce{}{}}0`{{}c{}}{ll}{{ce}d{}{}}{c{{A`{ln}}}Ab}{{{Ad{f}}}{{A`{cn}}}{}}{{Af{Ad{f}}}{{A`{cn}}}{}}{{Afc}{{A`{en}}}Ab{}}{{}l}{Ahc{}}0{c{{A`{l}}}Aj}{Ahd}{{lc}d{AlAn}}{{ll}B`}{{ce}B`{}{}}00{{lBb}Bd}{cc{}}0{ce{}{}}10{c{{j{f}}}{}}{{}Ah}2222{cB`{}}`{{lc}A`Bf}`{lAh}{{c{Ad{f}}}{{j{f}}}{}}6{c{{A`{e}}}{}{}}00{c{{h{f}}}{}}07{cBh{}}{{}Bj}:::```````{{{Ad{f}}}{{A`{{Bl{c}}{Bn{e}}}}}{}C`}{{{Ad{f}}}{{A`{c{Bn{e}}}}}{}C`}0{{{Cb{{j{f}}{j{f}}}}}{{A`{{Cb{ce}}{Bn{g}}}}}{}{}C`}{{{Ad{f}}}{{A`{{`{c}}{Bn{e}}}}}{}C`}2```````````````````{{cb}d{}}0{{}Cd}88??88{ce{}{}}00000{{{Cf{c}}}{{Cf{c}}}{}}{{{Ch{c}}}{{Ch{c}}}C`}{{ce}d{}{}}0{{}Ah}{{}Cj}{{}c{}}{c{{A`{{Bn{e}}n}}}Ab{}}{c{{A`{{Ch{e}}n}}}AbC`}{{{Ad{f}}}{{A`{cn}}}{}}0{{Af{Ad{f}}}{{A`{cn}}}{}}0{{Afc}{{A`{en}}}Ab{}}0{Ahc{}}00000{{{Ch{c}}e}ClC`{}}`{Ahd}00{{{Bn{c}}e}d{}{AlAn}}{{{Cf{c}}{Cf{c}}}B`{}}{{{Ch{c}}{Ch{c}}}B`C`}{{ce}B`{}{}}00000{{{Cf{c}}Bb}Bd{}}{{{Bn{c}}Bb}BdC`}{{{Ch{c}}Bb}BdC`}{cc{}}000{ce{}{}}0110101010{{{Ch{c}}}fC`}{{}{{Ad{f}}}}{{{Ch{c}}}CnC`}{{}{{Ad{Cn}}}}{{{Ch{c}}}D`C`}{c{{j{f}}}{}}0{{}Ah}{{}{{j{Db}}}}111{{{Ad{f}}}Dd}{{}d}::::::::::::{{{Ch{c}}e}B`C`{}}{{}Cn}0{{}{{h{f}}}}{{{Df{c}}}dC`}{{}Dh}15{{{Df{c}}Cd}CdC`}{{{Df{c}}}CdC`}{{}Cd}{{}Dd}{{{Bn{c}}}Ah{}}{{}{{j{Dj}}}}`{{c{Ad{f}}}{{j{f}}}{}}0{ce{}{}}0{c{{A`{e}}}{}{}}00000000```{c{{h{f}}}{}}000{c{{j{f}}}{}}0{cBh{}}00{{}Bj}0555555{{{Ad{f}}}{{A`{CbDl}}}}666{{}{{j{Dn}}}}{{cCd}{{Eb{E`}}}{}}````88888888{Ahc{}}0000000{Ahd}000{cc{}}000;00;;00;;0;0;0;0{{}Ah}000<<<<<<<<<<<<<<<<;;;;;;;;;;;;8888<<<<<<<<<<<<","c":[85],"p":[[5,"Private",328],[1,"unit"],[1,"u8"],[1,"array"],[5,"Vec",329],[5,"InitializationData",0],[5,"Error",330],[6,"Result",331],[10,"Input",332],[1,"slice"],[1,"u32"],[1,"usize"],[10,"Deserializer",333],[10,"Output",332],[10,"Sized",334],[1,"bool"],[5,"Formatter",335],[8,"Result",335],[10,"Serializer",336],[5,"TypeId",337],[5,"Type",338],[8,"SignedBlock",56],[6,"Error",70],[10,"Config",70],[1,"tuple"],[5,"Weight",339],[5,"Pallet",70],[6,"Call",70],[5,"CrateVersion",340],[8,"DispatchResultWithPostInfo",341],[1,"str"],[5,"DispatchInfo",341],[5,"PalletInfoData",340],[8,"DispatchResult",341],[8,"BlockNumberFor",342],[5,"StorageVersion",340],[5,"StorageInfo",343],[6,"DispatchError",344],[5,"TrackedStorageKey",345],[5,"PostDispatchInfo",341],[5,"DispatchErrorWithPostInfo",344],[10,"Chain",56],[5,"ValidationCheckPoint",236],[5,"OldestKnownParent",236],[5,"ChainTip",236],[5,"CurrentAuthoritySet",236]],"b":[]}],\
["pallet_messenger",{"doc":"Pallet messenger used to communicate between domains and …","t":"PPPPGGPFPPPPRGPKRRPGGKRPPPPPPPPPPPPRRIPPPPRPPPPPGPFPRRRFRPRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNCNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNMNNNMNMNNNNNNNNNMNNNNNMNMNNNNNNNN","n":["Add","BalanceHold","BalanceOverflow","BalanceUnlock","Call","ChainAllowlistUpdate","ChainNotAllowed","Channel","ChannelClosed","ChannelInitiated","ChannelOpen","ChannelOwner","ChannelReserveFee","ChannelState","Closed","Config","Currency","DomainOwner","Err","Error","Event","HoldIdentifier","HoldIdentifier","InboxMessage","InboxMessageResponse","Initiated","InsufficientBalance","InvalidAllowedChain","InvalidChain","InvalidChannelState","InvalidMessageDestination","InvalidMessagePayload","MessageVerification","MissingChannel","MissingMessage","MmrHash","MmrProofVerifier","Module","NoMessageHandler","NoOpenChannel","NotDomainOwner","Ok","OnXDMRewards","Open","OperationNotAllowed","OutboxFull","OutboxMessage","OutboxMessageResponse","OutboxMessageResult","OutboxMessageResult","Pallet","Remove","RuntimeEvent","SelfChainId","StorageKeys","ValidatedRelayMessage","WeightInfo","WeightTagNotMatch","WeightToFee","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_messages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_allowlist","channels","check_inherent","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_channel","close_channel","count","crate_version","create_inherent","current_storage_version","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","domain_bundle_submitted","domain_chain_allowlist_updates","domain_chains_allowlist_update","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_block_messages","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_endpoint_handler","get_open_channel_for_chain","identity","identity","identity","identity","identity","identity","identity","inbox","inbox_fees","inbox_response_message_unsigned","inbox_response_storage_key","inbox_responses","index","infos","init","init","init","init","init","init","init","init","init","initiate_channel","initiate_channel","initiate_domain_update_chain_allowlist","initiate_domain_update_chain_allowlist","integrity_test","into","into","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_feeless","is_inherent","is_inherent_required","messenger_channel","module_name","name","name_hash","new_call_variant_close_channel","new_call_variant_initiate_channel","new_call_variant_initiate_domain_update_chain_allowlist","new_call_variant_relay_message","new_call_variant_relay_message_response","new_call_variant_update_consensus_chain_allowlist","new_call_variant_update_domain_allowlist","next_channel_id","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","outbox","outbox_fees","outbox_message_unsigned","outbox_responses","outbox_storage_key","pre_dispatch","relay_message","relay_message","relay_message_response","relay_message_response","send_message","should_relay_inbox_message_response","should_relay_outbox_message","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_consensus_chain_allowlist","update_consensus_chain_allowlist","update_domain_allowlist","update_domain_allowlist","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate_relay_message","validate_relay_message_response","validate_unsigned","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weights","whitelisted_storage_keys","with_weight","chain_id","channel_id","domain_id","dst_chain_id","msg","msg","params","update","update","updates","chain_id","chain_id","chain_id","chain_id","chain_id","chain_id","chain_id","chain_id","channel_id","channel_id","channel_id","channel_id","channel_id","channel_id","channel_id","channel_id","nonce","nonce","nonce","nonce","nonce","result","close_channel","initiate_channel","initiate_domain_update_chain_allowlist","relay_message","relay_message_response","update_consensus_chain_allowlist","update_domain_allowlist","BlockMessages","ChainAllowlist","Channels","DomainChainAllowlistUpdate","Inbox","InboxFee","InboxResponses","NextChannelId","Outbox","OutboxFee","OutboxResponses","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","close_channel","close_channel","deref","deref_mut","do_close_channel","do_close_channel","do_open_channel","do_open_channel","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","init","initiate_channel","initiate_channel","into","into_key","into_mut","into_ref","relay_message","relay_message","relay_message_response","relay_message_response","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_messenger"],[526,"pallet_messenger::Call"],[536,"pallet_messenger::Event"],[558,"pallet_messenger::dispatchables"],[565,"pallet_messenger::storage_types"],[818,"pallet_messenger::weights"],[855,"dyn_clone::sealed"],[856,"sp_weights::weight_v2"],[857,"alloc::vec"],[858,"core::option"],[859,"sp_domains"],[860,"alloc::collections::btree::set"],[861,"parity_scale_codec::encode_like"],[862,"sp_domains"],[863,"core::result"],[864,"core::clone"],[865,"frame_system::pallet_prelude"],[866,"frame_support::dispatch"],[867,"frame_support::traits::metadata"],[868,"parity_scale_codec::error"],[869,"parity_scale_codec::codec"],[870,"core::default"],[871,"frame_support::dispatch"],[872,"core::cmp"],[873,"core::fmt"],[874,"core::fmt"],[875,"frame_support::dispatch"],[876,"sp_messenger::endpoint"],[877,"sp_messenger::messages"],[878,"sp_messenger::endpoint"],[879,"frame_support::traits::storage"],[880,"core::any"],[881,"scale_info::ty"],[882,"core::ops::function"],[883,"sp_runtime::transaction_validity"],[884,"frame_support::dispatch"]],"d":["","Failed to hold balance","Emits when the there is balance overflow.","Failed to unlock the balance","Contains a variant per dispatchable extrinsic that this …","Parameter to update chain allow list.","Chain not allowed to open channel","Channel describes a bridge to exchange messages between …","Emits when a channel between two chains is closed.","Emits when a channel between two chains is initiated.","Emits when a channel between two chain is open.","Not a channel owner","Channel reserve fee to open a channel.","State of a channel.","Channel is closed and do not send or receive messages.","Configuration trait of this pallet.","Currency type pallet uses for fees and deposits.","Domain owner provider.","Message response handler failed with Err.","<code>pallet-messenger</code> errors","<code>pallet-messenger</code> events","Hold identifier trait for messenger specific balance holds","A variation of the Identifier used for holding the funds …","Emits when a new inbox message is validated and added to …","Emits when a message response is available for Inbox …","Channel between chains is initiated but do not yet send or …","Not enough balance to do the operation","Invalid allowed chain.","Emits when the chain is neither consensus not chain.","Emits when the said channel is not in an open state.","Emits when the message destination is not valid.","Emits when the message payload is invalid.","Emits when the message verification failed.","Emits when there is no channel for a given Channel ID.","Emits when there is no message available for the given …","Hash type of MMR","MMR proof verifier","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Emits when there are not message handler with given …","Emits when there are no open channels for a chain","Account is not a Domain owner.","Message response handler returned Ok.","Handle XDM rewards.","Channel is open and can send and receive messages.","Operation not allowed.","Emits when the outbox is full for a channel.","Emits when a new message is added to the outbox.","Emits when a message response is available for Outbox …","","Emits outbox message result.","Pallet messenger used to communicate between chains and …","","","Gets the chain_id that is treated as src_chain_id for …","Storage key provider.","A validated relay message.","Weight information for extrinsics in this pallet.","Emits when there is mismatch between the message’s …","Weight to fee conversion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>BlockMessages</code>.","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>ChainAllowlist</code>.","An auto-generated getter for <code>Channels</code>.","","","","","","","","","","","","","","","","","","An open channel is closed with a foreign chain. Channel is …","See <code>Pallet::close_channel</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","An auto-generated getter for <code>DomainChainAllowlistUpdate</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","function to fetch endpoint response handler by Endpoint.","Returns the last open channel for a given chain.","","","","","","","","An auto-generated getter for <code>Inbox</code>.","An auto-generated getter for <code>InboxFee</code>.","","","An auto-generated getter for <code>InboxResponses</code>.","","","","","","","","","","","","A new Channel is initiated with a foreign chain. Next …","See <code>Pallet::initiate_channel</code>.","A call to initiate chain allowlist update on domains","See <code>Pallet::initiate_domain_update_chain_allowlist</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>close_channel</code>.","Create a call with the variant <code>initiate_channel</code>.","Create a call with the variant …","Create a call with the variant <code>relay_message</code>.","Create a call with the variant <code>relay_message_response</code>.","Create a call with the variant …","Create a call with the variant <code>update_domain_allowlist</code>.","An auto-generated getter for <code>NextChannelId</code>.","","","","","","","","","An auto-generated getter for <code>Outbox</code>.","An auto-generated getter for <code>OutboxFee</code>.","","An auto-generated getter for <code>OutboxResponses</code>.","","","Receives an Inbox message that needs to be validated and …","See <code>Pallet::relay_message</code>.","Receives a response from the dst_chain for a message in …","See <code>Pallet::relay_message_response</code>.","","Returns true if the inbox message response has not …","Returns true if the outbox message has not received the …","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A call to update consensus chain allow list.","See <code>Pallet::update_consensus_chain_allowlist</code>.","An inherent call to update allowlist for domain.","See <code>Pallet::update_domain_allowlist</code>.","","","","","","","","","Validate unsigned call to this module.","","","","","","","","","","Autogenerated weights for pallet_messenger","","","","","","","","","","","","","Foreign chain id this channel connects to.","Foreign chain id this channel connects to.","Foreign chain id this channel connects to.","","Destination chain ID.","","","Destination chain ID.","Channel ID of the said channel.","Channel ID of the said channel.","Channel ID of the said channel.","","Channel Is","","","Channel Is","","","","","","","An open channel is closed with a foreign chain. Channel is …","A new Channel is initiated with a foreign chain. Next …","A call to initiate chain allowlist update on domains","Receives an Inbox message that needs to be validated and …","Receives a response from the dst_chain for a message in …","A call to update consensus chain allow list.","An inherent call to update allowlist for domain.","A temporary storage to store all the messages to be …","An allowlist of chains that can open channel with this …","Stores channel config between two chains. Key points to …","A temporary storage to store any allowlist updates to …","A temporary storage for storing decoded inbox message …","A temporary storage of fees for executing an inbox message.","Stores the message responses of the incoming processed …","Stores the next channel id for a foreign chain.","Stores the outgoing messages that are awaiting message …","A temporary storage of fees for executing an outbox …","A temporary storage for storing decoded outbox response …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_messenger using the Substrate node and …","Weight functions needed for pallet_messenger.","","","","Storage: Messenger Channels (r:1 w:1) Proof Skipped: …","","","","Storage: Messenger Channels (r:1 w:1) Proof Skipped: …","","Storage: Messenger Channels (r:1 w:1) Proof Skipped: …","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Storage: Messenger NextChannelId (r:1 w:1) Proof Skipped: …","Calls <code>U::from(self)</code>.","","","","","Storage: Messenger Inbox (r:1 w:1) Proof Skipped: …","","Storage: Messenger OutboxResponses (r:1 w:1) Proof …","","","","","","",""],"i":[18,29,29,29,0,0,29,0,20,20,20,29,21,0,15,0,21,21,17,0,0,0,21,20,20,15,29,29,29,29,29,29,29,29,29,21,21,0,29,29,29,17,21,15,29,29,20,20,0,20,0,18,21,21,21,0,21,29,21,15,10,17,18,19,20,22,19,15,10,17,18,20,29,22,15,10,17,18,20,29,22,15,10,17,18,20,29,22,19,15,10,17,43,18,19,20,29,22,15,10,17,43,18,19,20,29,22,19,19,19,15,10,15,10,17,18,19,20,22,15,10,17,18,19,20,22,19,22,19,19,19,19,15,10,17,18,20,29,22,15,10,17,18,20,29,22,15,10,17,18,20,29,22,15,10,17,18,20,29,22,15,10,15,10,17,43,18,19,20,29,22,15,10,17,43,18,19,20,29,22,22,0,19,19,19,15,10,17,43,18,19,20,29,22,15,10,17,18,20,29,22,15,10,17,18,19,20,22,15,15,15,10,10,10,17,17,17,18,18,18,19,19,19,20,20,20,22,22,22,15,10,17,43,18,19,20,29,22,15,10,17,43,18,19,20,29,22,15,15,10,10,17,17,43,43,18,18,19,19,20,20,29,29,22,22,15,15,10,10,17,17,43,43,18,18,19,19,20,20,29,29,22,22,19,22,22,22,22,22,21,19,15,10,17,18,20,29,22,19,19,19,19,19,19,19,15,10,17,43,18,19,20,29,22,19,22,19,22,19,15,10,17,43,18,19,20,29,22,15,10,17,43,18,19,20,29,22,15,10,17,43,18,19,20,29,22,15,10,17,43,18,19,20,29,22,15,10,22,19,19,75,19,19,19,22,22,22,22,22,22,22,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,22,19,22,19,19,19,15,10,17,18,20,29,22,19,0,15,10,17,18,20,29,22,15,10,17,18,19,20,22,15,10,17,43,18,19,20,29,22,15,10,17,43,18,19,20,29,22,15,10,17,43,18,19,20,29,22,0,0,0,15,10,17,18,20,29,22,15,10,17,18,20,29,22,15,10,17,18,20,29,22,15,10,17,43,18,19,20,29,22,15,10,17,18,20,29,22,15,10,17,43,18,19,20,29,22,15,10,17,43,18,19,20,29,22,19,22,19,22,15,10,17,18,20,22,19,19,19,15,10,17,43,18,19,20,29,22,0,19,29,76,76,77,78,79,80,78,81,77,82,83,84,85,86,87,88,89,90,83,84,85,86,87,88,89,90,86,87,88,89,90,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,91,92,93,94,95,96,97,98,99,100,101,0,0,74,74,102,74,74,74,102,74,102,74,74,74,74,74,74,74,74,74,102,74,74,74,74,74,102,74,102,74,74,74,74,74,74,74,74],"f":"```````````````````````````````````````````````````````````{{cb}d{}}000000{{}f}{c{{j{h}}}{}}000000{c{{l{h}}}{}}0000001111111{{}{{n{`}}}}{ce{}{}}00000000000000000{{}{{Ab{A`}}}}{{ce}{{n{Ad}}}{{Af{A`}}}{{Af{Ah}}}}{{cAj}{{Al{de}}}{}{}}{{}c{}}0{AnAn}{{{Ad{ce}}}{{Ad{ce}}}B`B`}{BbBb}{BdBd}{{{Bf{c}}}{{Bf{c}}}{}}{{{Bh{c}}}{{Bh{c}}}Bj}{{{Bl{c}}}{{Bl{c}}}Bj}{{ce}d{}{}}000000{{{Bn{c}}A`Ah}C`Bj}`{{}Cb}{{}Cd}{Aj{{n{c}}}{}}<{c{{Al{AnCf}}}Ch}{c{{Al{{Ad{eg}}Cf}}}Ch{}{}}{c{{Al{BbCf}}}Ch}{c{{Al{BdCf}}}Ch}{c{{Al{{Bh{e}}Cf}}}ChBj}{c{{Al{{Cj{e}}Cf}}}Ch{}}{c{{Al{{Bl{e}}Cf}}}ChBj}{{{Cl{h}}}{{Al{cCf}}}{}}000000{{Cn{Cl{h}}}{{Al{cCf}}}{}}000000{{Cnc}{{Al{eCf}}}Ch{}}000000{{}An}{{}{{Ad{ce}}}D`D`}{Cbc{}}00000000000000000{{{Bl{c}}e}DbBj{}}`{Ddd}{c{{n{Df}}}{{Af{Dd}}}}{Dd{{n{Df}}}}{Cbd}00000000{{Anc}d{DhDj}}{{{Ad{ce}}g}d{}{}{DhDj}}{{Bbc}d{DhDj}}{{Bdc}d{DhDj}}{{{Bh{c}}e}dBj{DhDj}}{{{Cj{c}}e}d{}{DhDj}}{{{Bl{c}}e}dBj{DhDj}}{{AnAn}Dl}{{{Ad{ce}}{Ad{ce}}}DlDnDn}{{BbBb}Dl}{{BdBd}Dl}{{{Bf{c}}{Bf{c}}}Dl{}}{{{Bh{c}}{Bh{c}}}DlBj}{{{Bl{c}}{Bl{c}}}DlBj}{{ce}Dl{}{}}00000000000000000000{{AnE`}Eb}{{{Ad{ce}}E`}EbEdEd}{{BbE`}Eb}{{{Ef{c}}E`}EbEd}{{BdE`}Eb}{{{Bf{c}}E`}Eb{}}{{{Bh{c}}E`}EbBj}{{{Cj{c}}E`}EbBj}{{{Bl{c}}E`}EbBj}{cc{}}000000000{ce{}{}}1001100101011010101001011010100101{{}Eh}{{{Bl{c}}}hBj}{{}{{Cl{h}}}}{{{Bl{c}}}EjBj}{{}{{Cl{Ej}}}}{{{Bl{c}}}ElBj}{En{{n{{Fb{F`}}}}}}{A`{{n{{Ff{AhFd}}}}}}{c{{l{h}}}{}}000000{{}{{n{Fh}}}}{cn{{Af{{Ff{A`Fj}}}}}}{Fln}{Fn{{l{h}}}}{c{{n{Fh}}}{{Af{{Ff{A`AhG`}}}}}}{{}Cb}{{}{{l{Gb}}}}111111111{{{Bn{c}}A`Gd}C`Bj}`{{{Bn{c}}DdBd}C`Bj}`{{}d}{ce{}{}}00000000000000000000000000000000000{cDl{}}0{{{Bl{c}}e}DlBj{}}1{Aj{{Al{{n{c}}c}}}{}}{{A`Ah}}{{}Ej}0{{}{{j{h}}}}{{A`Ah}{{Bl{c}}}Bj}{{A`Gd}{{Bl{c}}}Bj}{{DdBd}{{Bl{c}}}Bj}{Fl{{Bl{c}}}Bj}0{Bd{{Bl{c}}}Bj}{Df{{Bl{c}}}Bj}{cAh{{Af{A`}}}}{{{Gf{c}}}dBj}{{}Gh}1{{}d}{{{Gf{c}}f}fBj}{{{Gf{c}}}fBj}0{{}f}{c{{n{Fh}}}{{Af{{Ff{A`AhG`}}}}}}{cn{{Af{{Ff{A`Fj}}}}}}{Fln}{{}{{n{Fh}}}}{Fn{{l{h}}}}{c{{Al{dGj}}}{}}{{{Bn{c}}Fl}C`Bj}`0`{{A`Gl}{{Al{cGn}}}{}}{{A`Fj}Dl}0{AnCb}{{{Ad{ce}}}Cb{}{}}{BbCb}{BdCb}{{{Bh{c}}}CbBj}{{{Cj{c}}}Cb{}}{{{Bl{c}}}CbBj}{{}{{l{H`}}}}`{{c{Cl{h}}}{{l{h}}}{}}000000{ce{}{}}000000{c{{Al{e}}}{}{}}00000000000000000000000000```{c{{j{h}}}{}}0000000000000{c{{l{h}}}{}}000000{cHb{}}00000000{{}Hd}000000555555555555555555{{{Bn{c}}Bd}C`Bj}`{{{Bn{c}}Df}C`Bj}`{{cgDl}e{}{}{{Hh{{Cl{h}}}{{Hf{e}}}}}}00000{Fl{{Al{EfGj}}}}{Fl{{Al{{Ff{FhG`}}Gj}}}}{{Hjc}Hl{}};;;;;;;;;`{{}{{l{Hn}}}}{{cf}{{Ib{I`}}}{}}````````````````````````````````{{A`Ah}d}{{A`Gd}d}{{DdBd}d}{Fld}0{Bdd}{Dfd}```````````{ce{}{}}000000000000000000000{Cbc{}}000000000000000000000{Cbd}0000000000{cc{}}000000000030300303303030033003303003030330300303300330{{}Cb}000000000044444444444444444444444444444444444444444444{c{{Al{e}}}{}{}}00000000000000000000000000000000{cHb{}}0000000000666666666666666666666666666666666``66{{}f}06600005{{{Id{c}}E`}EbEd}55885411888811113332888","c":[37],"p":[[5,"Private",855],[1,"unit"],[5,"Weight",856],[1,"u8"],[1,"array"],[5,"Vec",857],[6,"Option",858],[6,"ChainId",859],[5,"BTreeSet",860],[5,"Channel",0],[10,"EncodeLike",861],[8,"ChannelId",859],[5,"InherentData",862],[6,"Result",863],[6,"ChannelState",0],[10,"Clone",864],[6,"OutboxMessageResult",0],[6,"ChainAllowlistUpdate",0],[5,"Pallet",0],[6,"Event",0],[10,"Config",0],[6,"Call",0],[8,"OriginFor",865],[8,"DispatchResult",866],[1,"usize"],[5,"CrateVersion",867],[5,"Error",868],[10,"Input",869],[6,"Error",0],[1,"slice"],[1,"u32"],[10,"Default",870],[8,"DispatchResultWithPostInfo",866],[5,"DomainId",859],[5,"DomainAllowlistUpdates",859],[10,"Output",869],[10,"Sized",871],[1,"bool"],[10,"PartialEq",872],[5,"Formatter",873],[8,"Result",873],[10,"Debug",873],[5,"ValidatedRelayMessage",0],[5,"BlockMessagesWithStorageKey",874],[1,"str"],[5,"DispatchInfo",866],[6,"Endpoint",875],[10,"EndpointHandler",875],[5,"Box",876],[5,"FeeModel",874],[1,"tuple"],[5,"Message",874],[8,"MessageId",874],[5,"CrossDomainMessage",874],[8,"MessageKey",874],[8,"Nonce",874],[5,"PalletInfoData",867],[5,"InitiateChannelParams",874],[8,"BlockNumberFor",865],[5,"StorageVersion",867],[6,"TransactionValidityError",877],[5,"EndpointRequest",875],[6,"DispatchError",878],[5,"StorageInfo",879],[5,"TypeId",880],[5,"Type",881],[17,"Output"],[10,"FnOnce",882],[6,"TransactionSource",877],[8,"TransactionValidity",877],[5,"TrackedStorageKey",883],[5,"PostDispatchInfo",866],[5,"DispatchErrorWithPostInfo",878],[5,"SubstrateWeight",818],[10,"HoldIdentifier",0],[15,"close_channel",526],[15,"initiate_domain_update_chain_allowlist",526],[15,"initiate_channel",526],[15,"relay_message",526],[15,"relay_message_response",526],[15,"update_consensus_chain_allowlist",526],[15,"update_domain_allowlist",526],[15,"ChannelInitiated",536],[15,"ChannelClosed",536],[15,"ChannelOpen",536],[15,"OutboxMessage",536],[15,"OutboxMessageResponse",536],[15,"OutboxMessageResult",536],[15,"InboxMessage",536],[15,"InboxMessageResponse",536],[5,"NextChannelId",565],[5,"Channels",565],[5,"Inbox",565],[5,"InboxFee",565],[5,"OutboxFee",565],[5,"InboxResponses",565],[5,"Outbox",565],[5,"OutboxResponses",565],[5,"BlockMessages",565],[5,"ChainAllowlist",565],[5,"DomainChainAllowlistUpdate",565],[10,"WeightInfo",818]],"b":[[377,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[378,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["pallet_object_store",{"doc":"Pallet object store, used for simple object storage on the …","t":"GFKGIPFRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNPNNNCNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNOOOOH","n":["Call","CallObject","Config","Event","Module","ObjectSubmitted","Pallet","RuntimeEvent","__clone_box","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_call_object","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","hash","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_feeless","module_name","name","name_hash","new_call_variant_put","offchain_worker","offset","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","put","put","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","whitelisted_storage_keys","object","object_id","object_size","who","put"],"q":[[0,"pallet_object_store"],[191,"pallet_object_store::Call"],[192,"pallet_object_store::Event"],[195,"pallet_object_store::dispatchables"],[196,"dyn_clone::sealed"],[197,"sp_weights::weight_v2"],[198,"alloc::vec"],[199,"frame_support::traits::metadata"],[200,"parity_scale_codec::error"],[201,"core::result"],[202,"parity_scale_codec::codec"],[203,"frame_support::dispatch"],[204,"parity_scale_codec::codec"],[205,"core::option"],[206,"core::fmt"],[207,"core::fmt"],[208,"frame_support::traits::metadata"],[209,"core::any"],[210,"scale_info::ty"],[211,"sp_storage"]],"d":["Contains a variant per dispatchable extrinsic that this …","Mapping to the object offset and size within an extrinsic","Configuration trait of this pallet.","<code>pallet-object-store</code> events","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","New object was added.","Pallet object-store, used for storing arbitrary …","<code>pallet-object-store</code> events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","Extract object location if an extrinsic corresponds to <code>put</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","Object hash","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Create a call with the variant <code>put</code>.","","Offset of object in the encoded call.","","","","","","","Put a new object into a feed","See <code>Pallet::put</code>.","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Put a new object into a feed"],"i":[0,0,0,0,0,8,0,9,7,8,10,7,8,10,8,10,8,10,7,8,10,22,7,8,10,22,7,8,10,7,8,10,7,7,7,8,10,8,10,8,10,8,10,7,8,10,22,7,8,10,22,10,0,7,8,10,22,8,10,7,8,10,7,7,7,8,8,8,10,10,10,10,7,8,10,22,7,8,10,22,7,7,8,8,10,10,22,22,7,7,8,8,10,10,22,22,10,10,10,10,10,22,8,10,7,7,7,8,10,22,7,7,8,10,22,7,8,10,22,7,8,10,22,7,8,10,22,10,7,7,7,10,7,22,7,7,7,7,7,7,7,10,8,10,7,0,8,10,7,8,10,7,8,10,22,7,8,10,22,7,8,10,22,0,0,0,8,10,8,10,8,10,7,8,10,22,8,10,7,8,10,22,7,8,10,22,7,8,10,22,7,37,38,38,38,0],"f":"````````{{cb}d{}}00{{}f}{c{{j{h}}}{}}0{c{{l{h}}}{}}011{ce{}{}}0000000{{{n{c}}}{{n{c}}}{}}{{{A`{c}}}{{A`{c}}}Ab}{{{Ad{c}}}{{Ad{c}}}Ab}{{ce}d{}{}}00{{}Af}{{}Ah}{{}c{}}{c{{Al{{A`{e}}Aj}}}AnAb}{c{{Al{{Ad{e}}Aj}}}AnAb}{{{B`{h}}}{{Al{cAj}}}{}}0{{Bb{B`{h}}}{{Al{cAj}}}{}}0{{Bbc}{{Al{eAj}}}An{}}0{Afc{}}0000000{{{Ad{c}}e}BdAb{}}`{Afd}000{{{A`{c}}e}dAb{BfBh}}{{{Ad{c}}e}dAb{BfBh}}{{{n{c}}{n{c}}}Bj{}}{{{A`{c}}{A`{c}}}BjAb}{{{Ad{c}}{Ad{c}}}BjAb}{{ce}Bj{}{}}00000000{{{Ad{c}}}{{Bn{Bl}}}Ab}{{{n{c}}C`}Cb{}}{{{A`{c}}C`}CbAb}{{{Ad{c}}C`}CbAb}{{BlC`}Cb}{cc{}}000{ce{}{}}110010101100110{{{Ad{c}}}hAb}{{}{{B`{h}}}}{{{Ad{c}}}CdAb}{{}{{B`{Cd}}}}{{{Ad{c}}}CfAb}`{c{{l{h}}}{}}0{{}Af}{{}{{l{Ch}}}}1111{{}d}9999999999999999{{{Ad{c}}e}BjAb{}}{{}Cd}0{{}{{j{h}}}}{{{l{h}}}{{Ad{c}}}Ab}{{{Cj{c}}}dAb}`{{}Cl}16{{{Cj{c}}f}fAb}{{{Cj{c}}}fAb}{{}f}{{{Cn{c}}{l{h}}}D`Ab}`{{{A`{c}}}AfAb}{{{Ad{c}}}AfAb}{{}{{l{Db}}}}`{{c{B`{h}}}{{l{h}}}{}}0{ce{}{}}00{c{{Al{e}}}{}{}}00000000000```{c{{j{h}}}{}}000{c{{l{h}}}{}}0{cDd{}}000{{}Df}0555555555555{{}{{l{Dh}}}}````{{{l{h}}}d}","c":[4],"p":[[5,"Private",196],[1,"unit"],[5,"Weight",197],[1,"u8"],[1,"array"],[5,"Vec",198],[5,"Pallet",0],[6,"Event",0],[10,"Config",0],[6,"Call",0],[1,"usize"],[5,"CrateVersion",199],[5,"Error",200],[6,"Result",201],[10,"Input",202],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",203],[10,"Output",202],[10,"Sized",204],[1,"bool"],[5,"CallObject",0],[6,"Option",205],[5,"Formatter",206],[8,"Result",206],[1,"str"],[5,"DispatchInfo",203],[5,"PalletInfoData",199],[8,"BlockNumberFor",207],[5,"StorageVersion",199],[8,"OriginFor",207],[8,"DispatchResult",203],[5,"StorageInfo",208],[5,"TypeId",209],[5,"Type",210],[5,"TrackedStorageKey",211],[15,"put",191],[15,"ObjectSubmitted",192]],"b":[]}],\
["pallet_offences_subspace",{"doc":"Offences Subspace Pallet","t":"GIKGIPRFIIRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNOOFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Call","ConcurrentReportsIndex","Config","Event","Module","Offence","OnOffenceHandler","Pallet","Reports","ReportsByKindIndex","RuntimeEvent","__clone_box","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","integrity_test","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_feeless","is_known_offence","module_name","name","name_hash","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","report_offence","reports","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","kind","timeslot","ConcurrentReportsIndex","Reports","ReportsByKindIndex","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"pallet_offences_subspace"],[166,"pallet_offences_subspace::Event"],[168,"pallet_offences_subspace::storage_types"],[237,"dyn_clone::sealed"],[238,"sp_weights::weight_v2"],[239,"alloc::vec"],[240,"frame_support::traits::metadata"],[241,"parity_scale_codec::error"],[242,"core::result"],[243,"parity_scale_codec::codec"],[244,"frame_support::dispatch"],[245,"parity_scale_codec::codec"],[246,"core::fmt"],[247,"core::fmt"],[248,"frame_system::pallet_prelude"],[249,"frame_support::traits::metadata"],[250,"sp_consensus_subspace::offence"],[251,"parity_scale_codec::encode_like"],[252,"frame_support::traits::storage"],[253,"core::any"],[254,"scale_info::ty"],[255,"sp_storage"]],"d":["Contains a variant per dispatchable extrinsic that this …","A vector of reports of the same kind that happened at the …","Configuration trait of this pallet.","Events type.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","There is an offence reported of the given <code>kind</code> happened at …","A handler called for every offence report.","The <code>Pallet</code> struct, the main type that implements traits …","The primary structure that holds all offence records keyed …","Enumerates all reports of a kind along with the time they …","The overarching event type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>Reports</code>.","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A vector of reports of the same kind that happened at the …","The primary structure that holds all offence records keyed …","Enumerates all reports of a kind along with the time they …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,8,10,0,0,0,10,7,8,9,7,8,9,8,9,8,9,7,8,9,7,8,9,7,8,9,7,8,9,7,7,7,8,9,8,9,8,9,8,9,7,8,9,7,8,9,9,0,7,8,9,8,7,8,9,7,7,7,8,8,8,9,9,9,7,8,9,7,8,9,7,7,8,8,9,9,7,7,8,8,9,9,9,9,9,9,9,8,9,7,7,7,8,9,7,7,8,9,7,8,9,7,8,9,7,8,9,9,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,0,8,9,7,8,9,7,8,9,7,8,9,7,8,9,0,0,0,8,9,8,9,8,9,7,8,9,8,9,7,8,9,7,8,9,7,8,9,7,39,39,0,0,0,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,40,41,41,42,42,40,40,41,41,42,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42],"f":"```````````{{cb}d{}}00{{}f}{c{{j{h}}}{}}0{c{{l{h}}}{}}011{ce{}{}}00000{{{n{c}}}{{n{c}}}{}}{A`A`}{{{Ab{c}}}{{Ab{c}}}Ad}{{ce}d{}{}}00{{}Af}{{}Ah}{{}c{}}{c{{Al{A`Aj}}}An}{c{{Al{{Ab{e}}Aj}}}AnAd}{{{B`{h}}}{{Al{cAj}}}{}}0{{Bb{B`{h}}}{{Al{cAj}}}{}}0{{Bbc}{{Al{eAj}}}An{}}0{Afc{}}00000{{{Ab{c}}e}BdAd{}}`{Afd}00{{A`c}d{BfBh}}{{{n{c}}{n{c}}}Bj{}}{{A`A`}Bj}{{{Ab{c}}{Ab{c}}}BjAd}{{ce}Bj{}{}}00000000{{{n{c}}Bl}Bn{}}{{A`Bl}Bn}{{{Ab{c}}Bl}BnAd}{cc{}}000{ce{}{}}1001010101{{{Ab{c}}}hAd}{{}{{B`{h}}}}{{{Ab{c}}}C`Ad}{{}{{B`{C`}}}}{{{Ab{c}}}CbAd}{c{{l{h}}}{}}0{{}Af}{{}{{l{Cd}}}}111{{}d}999999999999{{{Ab{c}}e}BjAd{}}{{{B`{Cf}}}Bj}{{}C`}0{{}{{j{h}}}}{{{Ch{c}}}dAd}{{}Cj}16{{{Ch{c}}f}fAd}{{{Ch{c}}}fAd}{{}f}{c{{Al{dCl}}}{{Cn{Cf}}}}{c{{Db{{D`{Cf}}}}}Dd}{A`Af}{{}{{l{Df}}}}`{{c{B`{h}}}{{l{h}}}{}}0{ce{}{}}00{c{{Al{e}}}{}{}}00000000```{c{{j{h}}}{}}000{c{{l{h}}}{}}0{cDh{}}00{{}Dj}0555555555{{}{{l{Dl}}}}`````666666{Afc{}}00000{Afd}00{cc{}}00090909909090{{}Af}00::::::::::::999999999666:::::::::","c":[4],"p":[[5,"Private",237],[1,"unit"],[5,"Weight",238],[1,"u8"],[1,"array"],[5,"Vec",239],[5,"Pallet",0],[6,"Event",0],[6,"Call",0],[10,"Config",0],[1,"usize"],[5,"CrateVersion",240],[5,"Error",241],[6,"Result",242],[10,"Input",243],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",244],[10,"Output",243],[10,"Sized",245],[1,"bool"],[5,"Formatter",246],[8,"Result",246],[1,"str"],[5,"DispatchInfo",244],[5,"PalletInfoData",240],[8,"FarmerPublicKey",247],[8,"BlockNumberFor",248],[5,"StorageVersion",240],[6,"OffenceError",249],[10,"Offence",249],[5,"OffenceDetails",249],[6,"Option",250],[10,"EncodeLike",251],[5,"StorageInfo",252],[5,"TypeId",253],[5,"Type",254],[5,"TrackedStorageKey",255],[15,"Offence",166],[5,"Reports",168],[5,"ConcurrentReportsIndex",168],[5,"ReportsByKindIndex",168]],"b":[]}],\
["pallet_rewards",{"doc":"Pallet for issuing rewards to block producers.","t":"RPGKRGRRFRIKRFIRIFIRRRPIRNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNOONNNNNNCONNNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNPONNNNNCNOOOOOOHFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNNNNNNNNNNNNNNNNNNNNMNN","n":["AvgBlockspaceUsageNumBlocks","BlockReward","Call","Config","Currency","Event","FindBlockRewardAddress","FindVotingRewardAddresses","GenesisConfig","MaxRewardPoints","Module","OnReward","OnReward","Pallet","ProposerSubsidyPoints","ProposerTaxOnVotes","RemainingIssuance","RewardPoint","RewardsEnabled","RewardsEnabled","RuntimeEvent","TransactionByteFee","VoteReward","VoterSubsidyPoints","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","block","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_feeless","max_encoded_len","module_name","name","name_hash","new_call_variant_update_issuance_params","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_reward","on_runtime_upgrade","proposer_subsidy_points","remaining_issuance","serialize","serialize","size_hint","size_hint","size_hint","storage_info","storage_types","subsidy","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_issuance_params","update_issuance_params","voter_subsidy_points","vzip","vzip","vzip","vzip","vzip","weights","whitelisted_storage_keys","proposer_subsidy_points","voter_subsidy_points","block_author","reward","reward","voter","update_issuance_params","AvgBlockspaceUsage","ProposerSubsidyPoints","RemainingIssuance","RewardsEnabled","VoterSubsidyPoints","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","update_issuance_params","update_issuance_params","vzip"],"q":[[0,"pallet_rewards"],[270,"pallet_rewards::Call"],[272,"pallet_rewards::Event"],[276,"pallet_rewards::dispatchables"],[277,"pallet_rewards::storage_types"],[392,"pallet_rewards::weights"],[418,"dyn_clone::sealed"],[419,"sp_storage"],[420,"alloc::string"],[421,"core::result"],[422,"sp_weights::weight_v2"],[423,"alloc::vec"],[424,"core::clone"],[425,"frame_support::traits::metadata"],[426,"parity_scale_codec::error"],[427,"parity_scale_codec::codec"],[428,"parity_scale_codec::codec"],[429,"serde::de"],[430,"serde::de"],[431,"parity_scale_codec::codec"],[432,"core::cmp"],[433,"core::fmt"],[434,"core::fmt"],[435,"bounded_collections::bounded_vec"],[436,"frame_support::traits::metadata"],[437,"serde::ser"],[438,"core::any"],[439,"scale_info::ty"],[440,"frame_system::pallet_prelude"]],"d":["Number of blocks over which to compute average blockspace …","Issued reward for the block author","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","","<code>pallet-rewards</code> events","Reward address of block producer","Reward addresses of all receivers of voting rewards","Can be used to configure the genesis state of this pallet.","Max number of reward points","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Hooks to notify when there are any rewards for specific …","","Pallet rewards for issuing rewards to block producers.","Block proposer subsidy parameters","Tax of the proposer on vote rewards","Tokens left to issue to farmers at any given time","","Whether rewards are enabled","Determine whether rewards are enabled or not","<code>pallet-rewards</code> events","Cost of one byte of blockspace","Issued reward for the voter","Voter subsidy parameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>update_issuance_params</code>.","","","","","","","","","","Block proposer subsidy parameters","Tokens left to issue to farmers at any given time","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update dynamic issuance parameters","See <code>Pallet::update_issuance_params</code>.","Voter subsidy parameters","","","","","","Autogenerated weights for pallet_rewards","","","","","","","","Update dynamic issuance parameters","Utilization of blockspace (in bytes) by the normal …","Block proposer subsidy parameters","Tokens left to issue to farmers at any given time","Whether rewards are enabled","Voter subsidy parameters","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_rewards using the Substrate node and …","Weight functions needed for pallet_rewards.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Storage: <code>Rewards::ProposerSubsidyPoints</code> (r:0 w:1) Proof: …",""],"i":[7,15,0,0,7,0,7,7,0,7,0,0,7,0,0,7,0,0,0,7,7,7,15,0,7,12,14,15,16,3,14,12,15,16,12,15,16,12,15,16,12,12,14,3,15,16,12,14,3,15,16,3,12,12,14,15,16,12,14,15,16,14,14,14,12,15,16,12,15,16,12,15,16,12,15,16,12,3,12,14,3,15,16,12,14,3,15,16,12,3,16,0,12,14,3,15,16,12,15,16,12,14,15,16,12,12,12,14,14,14,15,15,15,16,16,16,12,14,3,15,16,12,14,3,15,16,12,12,14,14,3,3,15,15,16,16,12,12,14,14,3,3,15,15,16,16,16,16,16,16,16,12,15,16,14,14,12,14,3,15,16,14,12,14,3,15,16,12,14,3,15,16,12,14,3,15,16,12,14,3,15,16,12,16,12,14,14,14,16,14,14,14,14,14,14,14,50,14,3,3,12,3,12,15,16,14,0,12,12,15,16,12,14,15,16,12,14,3,15,16,12,14,3,15,16,12,14,3,15,16,0,0,0,12,15,16,12,15,16,12,15,16,12,14,3,15,16,12,15,16,12,14,3,15,16,12,14,3,15,16,14,16,3,12,14,3,15,16,0,14,51,51,52,52,53,53,0,0,0,0,0,0,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,54,55,55,56,56,57,57,58,58,54,54,55,55,56,56,57,57,58,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,54,55,56,57,58,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,59,59],"f":"`````````````````````````{{cb}d{}}000{{{f{c}}h}{{l{dj}}}n}{{}A`}{c{{Ad{Ab}}}{}}00{c{{Af{Ab}}}{}}00111`{ce{}{}}000000000{{{f{c}}}dn}{{}c{}}{{{Ah{ce}}}{{Ah{ce}}}AjAj}{{{Al{c}}}{{Al{c}}}{}}{{{An{c}}}{{An{c}}}n}{{{B`{c}}}{{B`{c}}}n}{{ce}d{}{}}000{{}Bb}{{}Bd}7{c{{l{{Ah{eg}}Bf}}}BhBjBj}{c{{l{{An{e}}Bf}}}Bhn}{c{{l{{B`{e}}Bf}}}Bhn}{{{Bl{Ab}}}{{l{cBf}}}{}}00{{Bn{Bl{Ab}}}{{l{cBf}}}{}}00{{Bnc}{{l{eBf}}}Bh{}}00{{}{{Ah{ce}}}C`C`}{{}{{f{c}}}n}{Bbc{}}000000000{c{{l{{Ah{eg}}}}}CbCdCd}{c{{l{{f{e}}}}}Cbn}{{{B`{c}}e}Cfn{}}`{Bbd}0000{{{Ah{ce}}g}dChCh{CjCl}}{{{An{c}}e}dn{CjCl}}{{{B`{c}}e}dn{CjCl}}{{{Ah{ce}}{Ah{ce}}}CnD`D`}{{{Al{c}}{Al{c}}}Cn{}}{{{An{c}}{An{c}}}Cnn}{{{B`{c}}{B`{c}}}Cnn}{{ce}Cn{}{}}00000000000{{{Ah{ce}}Db}DdDfDf}{{{Al{c}}Db}Dd{}}{{{f{c}}Db}Dd{nDf}}{{{An{c}}Db}Ddn}{{{B`{c}}Db}Ddn}{cc{}}00000{ce{}{}}100101101001011010{{{B`{c}}}Abn}{{}{{Bl{Ab}}}}{{{B`{c}}}Dhn}{{}{{Bl{Dh}}}}{{{B`{c}}}Djn}{c{{Af{Ab}}}{}}00{{}Bb}{{}{{Af{Dl}}}}11111{{}d}99999999999999999999{cCn{}}{{{B`{c}}e}Cnn{}}4{{}Dh}0{{}{{Ad{Ab}}}}{{{E`{{Ah{{Dn{c}}}}}}{E`{{Ah{{Dn{c}}}}}}}{{B`{c}}}n}{{{Dn{c}}}dn}{{}Eb}117{{{Dn{c}}A`}A`n}{{{Dn{c}}}A`n}{{ce}d{}{}}{{}A`}``{{{Ah{ce}}g}lEdEdEf}{{{f{c}}e}lnEf}{{{Ah{ce}}}BbChCh}{{{An{c}}}Bbn}{{{B`{c}}}Bbn}{{}{{Af{Eh}}}}``{{c{Bl{Ab}}}{{Af{Ab}}}{}}00{ce{}{}}000{c{{l{e}}}{}{}}00000000000000```{c{{Ad{Ab}}}{}}00000{c{{Af{Ab}}}{}}00{cEj{}}0000{{}El}005555555555{{{En{c}}{E`{{Ah{{Dn{c}}}}}}{E`{{Ah{{Dn{c}}}}}}}F`n}``66666`{{}{{Af{Fb}}}}``````{{{E`{{Ah{{Dn{c}}}}}}{E`{{Ah{{Dn{c}}}}}}}dn}`````8888888888{Bbc{}}000000000{Bbd}0000{cc{}}0000;0;0;0;0;0;0;00;;00;{{}Bb}0000<<<<<<<<<<<<<<<<<<<<;;;;;;;;;;;;;;;88888<<<<<<<<<<<<<<<``<<3321<11<0<<<<;;;8<<{{BnBn}A`}0=","c":[10],"p":[[5,"Private",418],[1,"unit"],[5,"GenesisConfig",0],[5,"Storage",419],[5,"String",420],[6,"Result",421],[10,"Config",0],[5,"Weight",422],[1,"u8"],[1,"array"],[5,"Vec",423],[5,"RewardPoint",0],[10,"Clone",424],[5,"Pallet",0],[6,"Event",0],[6,"Call",0],[1,"usize"],[5,"CrateVersion",425],[5,"Error",426],[10,"Input",427],[10,"Decode",427],[1,"slice"],[1,"u32"],[10,"Default",428],[10,"Deserializer",429],[10,"Deserialize",429],[8,"DispatchResultWithPostInfo",430],[10,"Encode",427],[10,"Output",427],[10,"Sized",431],[1,"bool"],[10,"PartialEq",432],[5,"Formatter",433],[8,"Result",433],[10,"Debug",433],[1,"str"],[5,"DispatchInfo",430],[5,"PalletInfoData",425],[8,"BlockNumberFor",434],[5,"BoundedVec",435],[5,"StorageVersion",425],[10,"Serialize",436],[10,"Serializer",436],[5,"StorageInfo",437],[5,"TypeId",438],[5,"Type",439],[8,"OriginFor",434],[8,"DispatchResult",430],[5,"TrackedStorageKey",419],[10,"OnReward",0],[15,"update_issuance_params",270],[15,"BlockReward",272],[15,"VoteReward",272],[5,"AvgBlockspaceUsage",277],[5,"RewardsEnabled",277],[5,"RemainingIssuance",277],[5,"ProposerSubsidyPoints",277],[5,"VoterSubsidyPoints",277],[5,"SubstrateWeight",392],[10,"WeightInfo",392]],"b":[[191,"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[192,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["pallet_runtime_configs",{"doc":"Pallet for tweaking the runtime configs for multiple …","t":"GKIIIIIFIFRNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNCNNNNONONONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNPNPNNCNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNCNOOOOHHHHFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNNNNNNNNNNNNNNMNMNMNMNNNNNNNN","n":["Call","Config","ConfirmationDepthK","EnableBalanceTransfers","EnableDomains","EnableDynamicCostOfStorage","EnableNonRootCalls","GenesisConfig","Module","Pallet","WeightInfo","__clone_box","__clone_box","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","confirmation_depth_k","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","enable_balance_transfers","enable_balance_transfers","enable_domains","enable_domains","enable_dynamic_cost_of_storage","enable_dynamic_cost_of_storage","enable_non_root_calls","enable_non_root_calls","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","init","integrity_test","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_feeless","module_name","name","name_hash","new_call_variant_set_enable_balance_transfers","new_call_variant_set_enable_domains","new_call_variant_set_enable_dynamic_cost_of_storage","new_call_variant_set_enable_non_root_calls","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","serialize","set_enable_balance_transfers","set_enable_balance_transfers","set_enable_domains","set_enable_domains","set_enable_dynamic_cost_of_storage","set_enable_dynamic_cost_of_storage","set_enable_non_root_calls","set_enable_non_root_calls","size_hint","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","weights","whitelisted_storage_keys","enable_balance_transfers","enable_domains","enable_dynamic_cost_of_storage","enable_non_root_calls","set_enable_balance_transfers","set_enable_domains","set_enable_dynamic_cost_of_storage","set_enable_non_root_calls","ConfirmationDepthK","EnableBalanceTransfers","EnableDomains","EnableDynamicCostOfStorage","EnableNonRootCalls","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","set_enable_balance_transfers","set_enable_balance_transfers","set_enable_domains","set_enable_domains","set_enable_dynamic_cost_of_storage","set_enable_dynamic_cost_of_storage","set_enable_non_root_calls","set_enable_non_root_calls","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_runtime_configs"],[168,"pallet_runtime_configs::Call"],[172,"pallet_runtime_configs::dispatchables"],[176,"pallet_runtime_configs::storage_types"],[291,"pallet_runtime_configs::weights"],[323,"dyn_clone::sealed"],[324,"sp_storage"],[325,"alloc::string"],[326,"core::result"],[327,"sp_weights::weight_v2"],[328,"alloc::vec"],[329,"frame_support::traits::metadata"],[330,"parity_scale_codec::error"],[331,"parity_scale_codec::codec"],[332,"serde::de"],[333,"frame_support::dispatch"],[334,"parity_scale_codec::codec"],[335,"core::fmt"],[336,"core::fmt"],[337,"frame_support::traits::metadata"],[338,"frame_system::pallet_prelude"],[339,"core::any"],[340,"scale_info::ty"],[341,"sp_storage"]],"d":["Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Storage type is <code>StorageValue</code> with value type …","Whether to enable balances transfers.","Whether to enable calls in pallet-domains.","Whether to enable dynamic cost of storage.","Whether to enable calls from non-root account.","Can be used to configure the genesis state of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","Weight information for extrinsics in this pallet.","","","","","","","","","","","","","","","","","","","Confirmation depth k to use in the archiving process","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","An auto-generated getter for <code>EnableBalanceTransfers</code>.","Whether to enable balance transfers","An auto-generated getter for <code>EnableDomains</code>.","Whether to enable domains","An auto-generated getter for <code>EnableDynamicCostOfStorage</code>.","Whether to enable dynamic cost of storage (if <code>false</code> cost …","An auto-generated getter for <code>EnableNonRootCalls</code>.","Whether to enable calls from non-root account","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Create a call with the variant <code>set_enable_balance_transfers</code>…","Create a call with the variant <code>set_enable_domains</code>.","Create a call with the variant …","Create a call with the variant <code>set_enable_non_root_calls</code>.","","","","","","","","","Enable or disable balance transfers for all users.","See <code>Pallet::set_enable_balance_transfers</code>.","Change enable domains state.","See <code>Pallet::set_enable_domains</code>.","Enable or disable dynamic cost of storage.","See <code>Pallet::set_enable_dynamic_cost_of_storage</code>.","Enable or disable calls from non-root users.","See <code>Pallet::set_enable_non_root_calls</code>.","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Autogenerated weights for pallet_runtime_configs","","","","","","Enable or disable balance transfers for all users.","Change enable domains state.","Enable or disable dynamic cost of storage.","Enable or disable calls from non-root users.","Warning: Doc-Only","Whether to enable balances transfers.","Whether to enable calls in pallet-domains.","Whether to enable dynamic cost of storage.","Whether to enable calls from non-root account.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_runtime_configs using the Substrate …","Weight functions needed for pallet_runtime_configs.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","Storage: <code>RuntimeConfigs::EnableBalanceTransfers</code> (r:0 w:1) …","","Storage: <code>RuntimeConfigs::EnableBalanceTransfers</code> (r:0 w:1) …","","Storage: <code>RuntimeConfigs::EnableDynamicCostOfStorage</code> (r:0 …","","Storage: <code>RuntimeConfigs::EnableNonRootCalls</code> (r:0 w:1) …","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,7,12,13,3,12,13,13,13,12,3,13,12,3,13,3,12,13,12,13,3,12,12,12,13,13,13,13,3,12,3,13,12,3,13,3,13,0,12,3,13,12,3,12,3,12,3,12,3,13,12,13,12,12,12,13,13,13,12,13,12,3,13,12,12,3,3,13,13,12,12,3,3,13,13,13,13,13,13,13,13,12,12,12,3,13,12,12,3,13,12,3,13,12,3,13,12,3,13,13,12,12,12,13,13,13,13,12,12,12,12,12,12,12,3,12,13,12,13,12,13,12,13,13,12,0,13,12,13,12,3,13,12,3,13,12,3,13,0,0,0,13,13,13,12,3,13,13,12,3,13,12,3,13,12,3,13,0,12,39,40,41,42,0,0,0,0,0,0,0,0,0,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,43,44,44,45,45,46,46,47,47,43,43,44,44,45,45,46,46,47,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,49,48,49,48,49,48,48,48,48,48,48,48,48],"f":"```````````{{cb}d{}}0{{{f{c}}h}{{l{dj}}}n}{{}A`}{c{{Ad{Ab}}}{}}{c{{Af{Ab}}}{}}1{ce{}{}}00000{{{f{c}}}dn}{{{Ah{c}}}{{Ah{c}}}{}}{{{Aj{c}}}{{Aj{c}}}n}{{ce}d{}{}}0`{{}Al}{{}An}{{}c{}}{c{{l{{Aj{e}}B`}}}Bbn}{{{Bd{Ab}}}{{l{cB`}}}{}}{{Bf{Bd{Ab}}}{{l{cB`}}}{}}{{Bfc}{{l{eB`}}}Bb{}}{{}{{f{c}}}n}{Alc{}}00000{c{{l{{f{e}}}}}Bhn}{{{Aj{c}}e}Bjn{}}`{Ald}00{{}Bl}`0`0`0`{{{Aj{c}}e}dn{BnC`}}{{{Ah{c}}{Ah{c}}}Bl{}}{{{Aj{c}}{Aj{c}}}Bln}{{ce}Bl{}{}}00000{{{Ah{c}}Cb}Cd{}}{{{Aj{c}}Cb}Cdn}{cc{}}000{ce{}{}}0110100101{{{Aj{c}}}Abn}{{}{{Bd{Ab}}}}{{{Aj{c}}}Cfn}{{}{{Bd{Cf}}}}{{{Aj{c}}}Chn}{c{{Af{Ab}}}{}}{{}Al}{{}{{Af{Cj}}}}111{{}d}999999999999{{{Aj{c}}e}Bln{}}{{}Cf}0{{}{{Ad{Ab}}}}{Bl{{Aj{c}}}n}000{{{Cl{c}}}dn}{{}Cn}16{{{Cl{c}}A`}A`n}{{{Cl{c}}}A`n}{{}A`}{{{f{c}}e}lnD`}{{{Db{c}}Bl}Ddn}`0`0`0`{{{Aj{c}}}Aln}{{}{{Af{Df}}}}`{{c{Bd{Ab}}}{{Af{Ab}}}{}}{ce{}{}}0{c{{l{e}}}{}{}}00000000```{c{{Ad{Ab}}}{}}0{c{{Af{Ab}}}{}}{cDh{}}00{{}Dj}555555555`{{}{{Af{Dl}}}}````{Bld}000`````7777777777{Alc{}}000000000{Ald}0000{cc{}}00000:0::00:0::00:0:0::0{{}Al}0000;;;;;;;;;;;;;;;;;;;;:::::::::::::::77777;;;;;;;;;;;;;;;``;;3321;1;10;;;;{{}A`}0000000;;;8<<<","c":[8],"p":[[5,"Private",323],[1,"unit"],[5,"GenesisConfig",0],[5,"Storage",324],[5,"String",325],[6,"Result",326],[10,"Config",0],[5,"Weight",327],[1,"u8"],[1,"array"],[5,"Vec",328],[5,"Pallet",0],[6,"Call",0],[1,"usize"],[5,"CrateVersion",329],[5,"Error",330],[10,"Input",331],[1,"slice"],[1,"u32"],[10,"Deserializer",332],[8,"DispatchResultWithPostInfo",333],[1,"bool"],[10,"Output",331],[10,"Sized",334],[5,"Formatter",335],[8,"Result",335],[1,"str"],[5,"DispatchInfo",333],[5,"PalletInfoData",329],[8,"BlockNumberFor",336],[5,"StorageVersion",329],[10,"Serializer",337],[8,"OriginFor",336],[8,"DispatchResult",333],[5,"StorageInfo",338],[5,"TypeId",339],[5,"Type",340],[5,"TrackedStorageKey",324],[15,"set_enable_balance_transfers",168],[15,"set_enable_domains",168],[15,"set_enable_dynamic_cost_of_storage",168],[15,"set_enable_non_root_calls",168],[5,"EnableDomains",176],[5,"EnableDynamicCostOfStorage",176],[5,"EnableBalanceTransfers",176],[5,"EnableNonRootCalls",176],[5,"ConfirmationDepthK",176],[5,"SubstrateWeight",291],[10,"WeightInfo",291]],"b":[]}],\
["pallet_subspace",{"doc":"Subspace consensus pallet.","t":"KFNNNNNCNNNNNNNNNNCMNNNNNNNNCFKRFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNONMNOMNNNNNNNNNNNNNNNNGPRIRIGKRIPGRRIGGRPPFIRPRPRRIIFRRRRRPPRPIRRPPFRNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNPNOPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNPNNNNNNNNNNNNNONNCNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPONNNNNNNNNNOOOOOOOOOOOHHHHHHFFFFFFFFFFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNNNNMNMNMNNNNNNNNNNNMNMNNNNNNNMNN","n":["EraChangeTrigger","NormalEraChange","borrow","borrow_mut","deref","deref_mut","drop","equivocation","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","pallet","trigger","trigger","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip","weights","EquivocationHandler","HandleEquivocation","ReportLongevity","SubspaceEquivocationOffence","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","is_known_offence","is_known_offence","offender","offenders","report_offence","report_offence","slot","submit_equivocation_report","submit_equivocation_report","time_slot","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","AllowAuthoringBy","Anyone","BlockAuthoringDelay","BlockRandomness","BlockSlotCount","BlockSlots","Call","Config","ConfirmationDepthK","CurrentSlot","DuplicateOffenceReport","EnableRewardsAt","EraChangeTrigger","EraDuration","EraStartSlot","Error","Event","ExpectedVotesPerBlock","FarmerVote","FirstFarmer","GenesisConfig","GenesisSlot","HandleEquivocation","Height","InitialSolutionRange","Manually","MaxPiecesInSector","MinSectorLifetime","Module","NextSolutionRangeOverride","Pallet","PotEntropyInjectionDelay","PotEntropyInjectionInterval","PotEntropyInjectionLookbackDepth","RecentHistoryFraction","RecentSegments","RewardsAlreadyEnabled","RootFarmer","RuntimeEvent","SegmentHeaderStored","ShouldAdjustSolutionRange","ShouldAdjustSolutionRange","SlotProbability","SolutionRange","SolutionRangeAdjustmentAlreadyEnabled","SolutionRangeOverride","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","allow_authoring_by","archived_history_size","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_slots","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","check_inherent","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","crate_version","create_inherent","current_slot","current_storage_version","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","drop","drop","drop","enable_authoring_by_anyone","enable_authoring_by_anyone","enable_rewards_at","enable_rewards_at","enable_rewards_at","enable_solution_range_adjustment","enable_solution_range_adjustment","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_block_reward_address","find_voting_reward_addresses","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_slot","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","history_size","identity","identity","identity","identity","identity","identity","index","infos","init","init","init","init","init","init","init","init","integrity_test","into","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_feeless","is_in_block_list","is_inherent","is_inherent_required","module_name","name","name_hash","new_call_variant_enable_authoring_by_anyone","new_call_variant_enable_rewards_at","new_call_variant_enable_solution_range_adjustment","new_call_variant_report_equivocation","new_call_variant_store_segment_headers","new_call_variant_vote","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_offence","on_runtime_upgrade","phantom","pot_parameters","pot_slot_iterations","pre_dispatch","pre_dispatch_equivocation_report","random","random_seed","report_equivocation","report_equivocation","rewards_enabled","root_plot_public_key","segment_commitment","serialize","serialize","serialize","should_adjust_solution_range","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","solution_range","solution_ranges","storage_info","storage_types","store_segment_headers","store_segment_headers","submit_equivocation_report","submit_test_equivocation_report","submit_vote","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","validate_equivocation_report","validate_unsigned","vote","vote","voting_solution_range","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","enable_rewards_at","equivocation_proof","segment_headers","signed_vote","solution_range_override","voting_solution_range_override","height","parent_hash","public_key","reward_address","segment_header","enable_authoring_by_anyone","enable_rewards_at","enable_solution_range_adjustment","report_equivocation","store_segment_headers","vote","AllowAuthoringByAnyone","BlockList","BlockRandomness","BlockSlots","CurrentBlockAuthorInfo","CurrentBlockVoters","CurrentSlot","DidProcessSegmentHeaders","EnableRewards","EnableRewardsBelowSolutionRange","EraStartSlot","GenesisSlot","NextSolutionRangeOverride","ParentBlockAuthorInfo","ParentBlockVoters","ParentVoteVerificationData","PotEntropy","PotSlotIterations","RootPlotPublicKey","SegmentCommitment","ShouldAdjustSolutionRange","SolutionRanges","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","enable_authoring_by_anyone","enable_authoring_by_anyone","enable_rewards","enable_rewards","enable_solution_range_adjustment","enable_solution_range_adjustment","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","report_equivocation","report_equivocation","store_segment_headers","store_segment_headers","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vote","vote","vzip"],"q":[[0,"pallet_subspace"],[29,"pallet_subspace::equivocation"],[93,"pallet_subspace::pallet"],[541,"pallet_subspace::pallet::Call"],[547,"pallet_subspace::pallet::Event"],[552,"pallet_subspace::pallet::dispatchables"],[558,"pallet_subspace::pallet::storage_types"],[1064,"pallet_subspace::weights"],[1100,"frame_system::pallet_prelude"],[1101,"core::result"],[1102,"core::any"],[1103,"core::cmp"],[1104,"core::fmt"],[1105,"core::fmt"],[1106,"sp_consensus_slots"],[1107,"alloc::vec"],[1108,"core::clone"],[1109,"sp_consensus_subspace::offence"],[1110,"frame_system::pallet_prelude"],[1111,"frame_system::offchain"],[1112,"dyn_clone::sealed"],[1113,"sp_storage"],[1114,"alloc::string"],[1115,"sp_weights::weight_v2"],[1116,"bounded_collections::bounded_btree_map"],[1117,"sp_inherents"],[1118,"frame_support::traits::metadata"],[1119,"core::option"],[1120,"parity_scale_codec::error"],[1121,"parity_scale_codec::codec"],[1122,"serde::de"],[1123,"serde::de"],[1124,"frame_system::pallet_prelude"],[1125,"frame_support::dispatch"],[1126,"frame_support::traits::metadata"],[1127,"subspace_core_primitives"],[1128,"sp_consensus_subspace"],[1129,"subspace_core_primitives::segments"],[1130,"serde::ser"],[1131,"serde::ser"],[1132,"scale_info::ty"],[1133,"sp_runtime::transaction_validity"]],"d":["Trigger an era change, if any should take place.","A type signifying to Subspace that it should perform era …","","","","","","An opt-in utility module for reporting equivocations.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","Trigger an era change, if any should take place. This …","","","","","","","","","Autogenerated weights for pallet_subspace","Generic equivocation handler. This type implements …","A trait with utility methods for handling equivocation …","The longevity, in blocks, that the equivocation report is …","A Subspace equivocation offence report.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns true if all of the offenders at the given time …","","Identity of the farmer that produced the equivocation.","","Report an offence proved by the given reporters.","","A Subspace slot in which this incident happened.","Create and dispatch an equivocation report extrinsic.","","","","","","","","","","","","","","","","","","Anyone can author new blocks at genesis.","Number of slots between slot arrival and when …","The current block randomness, updated at block …","Maximum number of block number to block slot mappings to …","Bounded mapping from block number to slot","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Depth <code>K</code> after which a block enters the recorded history (a …","Current slot number.","A given equivocation report is valid but already …","When to enable block/vote rewards","Subspace requires some logic to be triggered on every …","The amount of time, in blocks, that each era should last. …","Slot at which current era started.","The <code>Error</code> enum of this pallet.","Events type.","Number of votes expected per block.","Farmer vote.","Author of the first block will be able to author blocks …","Can be used to configure the genesis state of this pallet.","The slot at which the first block was created. This is 0 …","The equivocation handling subsystem, defines methods to …","At specified height or next block if <code>None</code>","Initial solution range used for challenges during the very …","Manually with an explicit extrinsic","How many pieces one sector is supposed to contain (max)","Minimum lifetime of a plotted sector, measured in archived …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Override solution range during next update","The Subspace Pallet","Delay after block, in slots, when entropy injection takes …","Interval, in blocks, between blockchain entropy injection …","Interval, in entropy injection intervals, where to take …","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","Rewards already active.","Specified root farmer is allowed to author blocks unless …","The overarching event type.","Segment header was stored in blockchain history.","Storage to check if the solution range is to be adjusted …","","How often in slots slots (on average, not counting …","When solution range is below specified threshold","Solution range adjustment already enabled.","Override for next solution range adjustment","Weight information for extrinsics in this pallet.","","","","","Who can author blocks at genesis.","Size of the archived history of the blockchain in bytes","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>BlockSlots</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>CurrentSlot</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","Enable storage access for all users.","See <code>Pallet::enable_authoring_by_anyone</code>.","Enable rewards for blocks and votes at specified block …","When rewards should be enabled.","See <code>Pallet::enable_rewards_at</code>.","Enable solution range adjustment after every era. Note: No …","See <code>Pallet::enable_solution_range_adjustment</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","An auto-generated getter for <code>GenesisSlot</code>.","","","","","","Total number of pieces in the blockchain","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Check if <code>farmer_public_key</code> is in block list (due to …","","","","","","Create a call with the variant <code>enable_authoring_by_anyone</code>.","Create a call with the variant <code>enable_rewards_at</code>.","Create a call with the variant …","Create a call with the variant <code>report_equivocation</code>.","Create a call with the variant <code>store_segment_headers</code>.","Create a call with the variant <code>vote</code>.","","","","","","","","","","","","Proof of time parameters","Number of iterations for proof of time per slot","","","","","Report farmer equivocation/misbehavior. This method will …","See <code>Pallet::report_equivocation</code>.","","An auto-generated getter for <code>RootPlotPublicKey</code>.","An auto-generated getter for <code>SegmentCommitment</code>.","","","","An auto-generated getter for <code>ShouldAdjustSolutionRange</code>.","","","","","","","Value that should be set as solution range","An auto-generated getter for <code>SolutionRanges</code>.","","Auto-generated docs-only module listing all (public and …","Submit new segment header to the blockchain. This is an …","See <code>Pallet::store_segment_headers</code>.","Submits an extrinsic to report an equivocation. This …","Just stores offender from equivocation report in block …","Submit farmer vote vote that is essentially a header with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Farmer vote, currently only used for extra rewards to …","See <code>Pallet::vote</code>.","Value that should be set as voting solution range","","","","","","","","","","","","","","","","","","","","","","Enable storage access for all users.","Enable rewards for blocks and votes at specified block …","Enable solution range adjustment after every era. Note: No …","Report farmer equivocation/misbehavior. This method will …","Submit new segment header to the blockchain. This is an …","Farmer vote, currently only used for extra rewards to …","Allow block authoring by anyone or just root.","A set of blocked farmers keyed by their public key.","The current block randomness, updated at block …","Bounded mapping from block number to slot","Block author information","Voters in the current block thus far","Current slot number.","Whether the segment headers inherent has been processed in …","Enable rewards since specified block number.","Enable rewards when solution range is below this threshold.","Slot at which current era started.","The slot at which the first block was created. This is 0 …","Override solution range during next update","Parent block author information.","Voters in the parent block (set at the end of the block …","Storage of previous vote verification data, updated on …","Entropy that needs to be injected into proof of time chain …","Number of iterations for proof of time per slot","Root plot public key.","Mapping from segment index to corresponding segment …","Storage to check if the solution range is to be adjusted …","Solution ranges used for challenges.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeights for pallet_subspace using the Substrate node and …","Weight functions needed for pallet_subspace.","","","","","","","Storage: Subspace RootPlotPublicKey (r:1 w:0) Proof …","","Storage: Subspace EnableRewards (r:1 w:1) Proof Skipped: …","","Storage: Subspace ShouldAdjustSolutionRange (r:1 w:1) …","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","Storage: OffencesSubspace ReportsByKindIndex (r:1 w:1) …","","Storage: Subspace SegmentCommitment (r:20 w:20) Proof …","","","","","","","","Storage: Subspace BlockList (r:1 w:0) Proof Skipped: …",""],"i":[0,0,78,78,78,78,78,0,78,78,78,78,78,78,78,78,78,78,0,79,78,78,78,78,78,78,78,78,0,0,0,80,0,7,8,7,8,7,7,8,7,8,7,8,8,8,8,8,8,7,8,7,7,8,8,7,7,8,8,7,8,7,8,7,8,7,8,7,8,80,7,8,8,80,7,8,80,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,0,43,4,0,4,0,0,0,4,0,42,0,4,4,0,0,0,4,35,43,0,0,4,37,4,37,4,4,0,0,0,4,4,4,4,4,42,43,4,35,0,4,4,37,42,0,4,34,35,36,37,26,34,26,34,35,42,36,37,43,44,35,42,36,37,43,44,35,42,36,37,43,44,34,34,26,35,42,36,37,43,44,34,26,35,42,36,37,43,44,26,34,34,35,36,37,34,35,36,37,34,34,34,34,34,35,42,36,37,43,44,35,42,36,37,43,44,35,42,36,37,43,44,35,42,36,37,43,44,26,43,34,26,35,42,36,37,43,44,34,26,35,42,36,37,43,44,26,37,43,36,0,34,26,35,42,36,37,43,44,34,36,34,26,36,34,36,35,42,36,37,43,44,34,35,36,37,34,34,34,35,35,35,36,36,36,37,37,37,34,34,34,35,42,36,37,43,44,34,26,35,42,36,37,43,44,34,34,26,26,35,35,42,42,36,36,37,37,43,43,44,44,34,34,26,26,35,35,42,42,36,36,37,37,43,43,44,44,34,36,36,36,36,36,34,35,42,36,37,43,44,34,34,34,26,35,42,36,37,43,44,34,34,26,35,42,36,37,43,44,34,26,35,42,36,37,43,44,34,26,35,42,36,37,43,44,34,26,35,42,36,37,43,44,36,34,34,34,34,34,34,36,36,36,36,36,36,34,34,34,34,34,34,34,34,34,34,26,34,26,34,34,34,34,34,36,34,34,34,26,37,43,34,35,42,36,37,43,44,44,34,34,0,34,36,34,34,34,35,42,36,37,43,44,34,35,36,37,34,26,35,42,36,37,43,44,34,26,35,42,36,37,43,44,34,26,35,42,36,37,43,44,0,0,0,35,42,36,37,43,44,35,42,36,37,43,44,35,42,36,37,43,44,34,26,35,42,36,37,43,44,35,42,36,37,43,44,34,26,35,42,36,37,43,44,34,26,35,42,36,37,43,44,34,34,34,36,44,34,26,35,42,36,37,43,44,34,42,81,82,83,84,85,85,86,86,86,86,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,0,0,110,110,110,110,110,111,110,111,110,111,110,110,110,110,110,110,110,110,110,110,110,111,110,111,110,110,110,110,110,110,110,111,110,110],"f":"``{ce{}{}}0{bc{}}0{bd}`{cc{}}0303{{}b}4444`{{{f{c}}}dh}0{c{{j{e}}}{}{}}00{cl{}}777`````7777{{}{{n{ce}}}{}{}}777766{{{A`{c}}{A`{c}}}AbAd}{{ce}Ab{}{}}00{{{A`{c}}Af}AhAj}88;8;88;;877;;;;;;;;{{{An{Al}}B`}Ab}0`{{{A`{c}}}{{Bb{c}}}Bd}{{{A`{Al}}}{{j{dBf}}}}0`{{{Bj{{Bh{c}}}}}Blh}{{{Bj{{Bh{c}}}}}Bl{hBn}}{{{A`{c}}}eBd{}};;;;;;::{ce{}{}}00000```````````````````````````````````````````````{{cC`}d{}}000`{{}Cb}{{{Cd{c}}Cf}{{j{dCh}}}h}{{}Cj}{c{{Cn{Cl}}}{}}00000{c{{Bb{Cl}}}{}}00000111111{{}{{D`{{f{c}}B`}}}h}7777777777777777{{{Cd{c}}}dh}{{cDb}{{j{de}}}{}{}}{{{Dd{c}}}{{Dd{c}}}{}}{{{Df{c}}}{{Df{c}}}h}{{{Dh{c}}}{{Dh{c}}}h}{{{Dj{c}}}{{Dj{c}}}Bd}{{ce}d{}{}}000{{}b}{{}Dl}{Db{{Dn{c}}}{}}{{}B`}{{}c{}}{c{{j{{Df{e}}E`}}}Ebh}{c{{j{{Ed{e}}E`}}}Eb{}}{c{{j{{Dh{e}}E`}}}Ebh}{c{{j{{Dj{e}}E`}}}Eb{}}{c{{j{EfE`}}}Eb}{c{{j{EhE`}}}Eb}{{{An{Cl}}}{{j{cE`}}}{}}00000{{Ej{An{Cl}}}{{j{cE`}}}{}}00000{{Ejc}{{j{eE`}}}Eb{}}00000{{}{{Cd{c}}}h}{{}Ef}{bc{}}000000000000000{c{{j{{Cd{e}}}}}Elh}{c{{j{{Dj{e}}}}}ElEn}{c{{j{Ef}}}El}{{{Dh{c}}e}F`h{}}`{bd}0000000{{{Fb{c}}}Fdh}`{{{Fb{c}}{Dj{{f{c}}}}}Fdh}``{{{Fb{c}}{Dn{Cb}}{Dn{Cb}}}Fdh}`{{{Df{c}}e}dh{FfFh}}{{{Ed{c}}e}d{}{FfFh}}{{{Dh{c}}e}dh{FfFh}}{{{Dj{c}}e}d{}{FfFh}}{{Efc}d{FfFh}}{{Ehc}d{FfFh}}{{{Dd{c}}{Dd{c}}}Ab{}}{{{Df{c}}{Df{c}}}Abh}{{{Dh{c}}{Dh{c}}}Abh}{{{Dj{c}}{Dj{c}}}AbAd}{{ce}Ab{}{}}00000000000{{}Dn}{{}Bb}{{{Dd{c}}Af}Ah{}}{{{Df{c}}Af}Ahh}{{{Ed{c}}Af}Ahh}{{{Dh{c}}Af}Ahh}{{{Dj{c}}Af}AhAj}{{EfAf}Ah}{{EhAf}Ah}{cc{}}00000000{ce{}{}}101010100110010101010101010110{{}B`}{{{Dh{c}}}Clh}{{}{{An{Cl}}}}{{{Dh{c}}}Fjh}{{}{{An{Fj}}}}{{{Dh{c}}}Flh}{{}Fn}{c{{Bb{Cl}}}{}}00000{{}b}{{}{{Bb{G`}}}}11111111{{}d};;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;{{{Dh{c}}e}Abh{}}{AlAb}{cAb{}}{Db{{j{{Dn{c}}c}}}{}}{{}Fj}0{{}{{Cn{Cl}}}}{{}{{Dh{c}}}h}{{{Dj{{f{c}}}}}{{Dh{c}}}h}{{{Dn{Cb}}{Dn{Cb}}}{{Dh{c}}}h}{{{Gb{{Bj{{Bh{c}}}}}}}{{Dh{c}}}h}{{{Bb{Gd}}}{{Dh{c}}}h}{{{Gb{{Gf{{f{c}}}}}}}{{Dh{c}}}h}{{{f{c}}}dh}{{}Gh}11>{{{f{c}}Cj}Cjh}{{{f{c}}}Cjh}0{{{An{{Gj{Al}}}}}d}{{}Cj}`{{}Gl}`{c{{j{dGn}}}{}}{{{Bj{{Bh{c}}}}}{{j{dGn}}}h}{{{An{Cl}}}{{H`{{f{c}}}}}h}{{}{{H`{{f{c}}}}}h}{{{Fb{c}}{Gb{{Bj{{Bh{c}}}}}}}F`h}`{{}Ab}{{}{{Dn{Al}}}}{c{{Dn{Hb}}}{{Hf{Hd}}}}{{{Cd{c}}e}jhHh}{{{Dj{c}}e}jHjHh}{{Efc}jHh}5{{{Df{c}}}bh}{{{Ed{c}}}b{}}{{{Dh{c}}}bh}{{{Dj{c}}}b{}}{Efb}{Ehb}`{{}Hl}{{}{{Bb{Hn}}}}`{{{Fb{c}}{Bb{Gd}}}Fdh}`{{{Bj{{Bh{c}}}}}{{Dn{d}}}h}0{{{Gf{{f{c}}}}}d{hBn}}{{c{An{Cl}}}{{Bb{Cl}}}{}}00000{ce{}{}}000{c{{j{e}}}{}{}}00000000000000000000000```{c{{Cn{Cl}}}{}}00000000000{c{{Bb{Cl}}}{}}00000{cl{}}0000000{{}I`}000005555555555555555{{Ib{Bj{{Bh{c}}}}}Idh}{{Ibc}Id{}}{{{Fb{c}}{Gb{{Gf{{f{c}}}}}}}Fdh}``88888888{{}{{Bb{If}}}}{{cCj}{{Ij{Ih}}}{}}```````````{{}d}{{{Dj{{f{c}}}}}dh}{{{Dn{Cb}}{Dn{Cb}}}d}{{{Gb{{Bj{{Bh{c}}}}}}}dh}{{{Bb{Gd}}}d}{{{Gb{{Gf{{f{c}}}}}}}dh}``````````````````````{ce{}{}}0000000000000000000000000000000000000000000{bc{}}0000000000000000000000000000000000000000000{bd}000000000000000000000{cc{}}0000000000000000000003030303003030303300330303030030330030303303003030303030303303030300330030303300330303003{{}b}0000000000000000000004444444444444444444444444444444444444444444444444444444444444444444444444444444444444444{c{{j{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000{cl{}}000000000000000000000666666666666666666666666666666666666666666666666666666666666666666``66554{{}Cj}00000474473777700{EjCj}0333288118","c":[121],"p":[[1,"usize"],[1,"unit"],[8,"BlockNumberFor",1100],[10,"Config",93],[6,"Result",1101],[5,"TypeId",1102],[5,"EquivocationHandler",29],[5,"SubspaceEquivocationOffence",29],[1,"bool"],[10,"PartialEq",1103],[5,"Formatter",1104],[8,"Result",1104],[10,"Debug",1104],[8,"FarmerPublicKey",1105],[1,"slice"],[5,"Slot",1106],[5,"Vec",1107],[10,"Clone",1108],[6,"OffenceError",1109],[8,"HeaderFor",1100],[8,"EquivocationProof",1105],[8,"DispatchResult",1110],[10,"SendTransactionTypes",1111],[5,"Private",1112],[1,"u64"],[5,"GenesisConfig",93],[5,"Storage",1113],[5,"String",1114],[5,"Weight",1115],[1,"u8"],[1,"array"],[5,"BoundedBTreeMap",1116],[5,"InherentData",1117],[5,"Pallet",93],[6,"Event",93],[6,"Call",93],[6,"EnableRewardsAt",93],[5,"CrateVersion",1118],[6,"Option",1119],[5,"Error",1120],[10,"Input",1121],[6,"Error",93],[6,"AllowAuthoringBy",93],[5,"SolutionRangeOverride",93],[1,"u32"],[10,"Deserializer",1122],[10,"Deserialize",1122],[8,"DispatchResultWithPostInfo",1123],[8,"OriginFor",1100],[8,"DispatchResult",1123],[10,"Output",1121],[10,"Sized",1124],[1,"str"],[5,"DispatchInfo",1123],[5,"HistorySize",1125],[5,"PalletInfoData",1118],[5,"Box",1126],[6,"SegmentHeader",1127],[5,"SignedVote",1105],[5,"StorageVersion",1118],[5,"OffenceDetails",1109],[6,"PotParameters",1105],[6,"TransactionValidityError",1128],[1,"tuple"],[5,"SegmentCommitment",1125],[5,"SegmentIndex",1125],[10,"EncodeLike",1129],[10,"Serializer",1130],[10,"Serialize",1130],[5,"SolutionRanges",1105],[5,"StorageInfo",1131],[5,"Type",1132],[6,"TransactionSource",1128],[8,"TransactionValidity",1128],[5,"TrackedStorageKey",1113],[5,"PostDispatchInfo",1123],[5,"DispatchErrorWithPostInfo",1110],[5,"NormalEraChange",0],[10,"EraChangeTrigger",0],[10,"HandleEquivocation",29],[15,"enable_rewards_at",541],[15,"report_equivocation",541],[15,"store_segment_headers",541],[15,"vote",541],[15,"enable_solution_range_adjustment",541],[15,"FarmerVote",547],[15,"SegmentHeaderStored",547],[5,"GenesisSlot",558],[5,"CurrentSlot",558],[5,"BlockSlots",558],[5,"PotSlotIterations",558],[5,"SolutionRanges",558],[5,"ShouldAdjustSolutionRange",558],[5,"NextSolutionRangeOverride",558],[5,"EraStartSlot",558],[5,"BlockList",558],[5,"SegmentCommitment",558],[5,"DidProcessSegmentHeaders",558],[5,"ParentVoteVerificationData",558],[5,"ParentBlockAuthorInfo",558],[5,"EnableRewards",558],[5,"EnableRewardsBelowSolutionRange",558],[5,"CurrentBlockAuthorInfo",558],[5,"ParentBlockVoters",558],[5,"CurrentBlockVoters",558],[5,"PotEntropy",558],[5,"BlockRandomness",558],[5,"AllowAuthoringByAnyone",558],[5,"RootPlotPublicKey",558],[5,"SubstrateWeight",1064],[10,"WeightInfo",1064]],"b":[[402,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[403,"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[406,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[407,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["pallet_subspace_mmr",{"doc":"Pallet that provides necessary Leaf data for MMR.","t":"GKRIFNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNEEENNNNNNNNNNNNNN","n":["Call","Config","MmrRootHash","Module","Pallet","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","integrity_test","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","is_feeless","leaf_data","module_name","name","name_hash","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_new_root","on_runtime_upgrade","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","whitelisted_storage_keys"],"q":[[0,"pallet_subspace_mmr"],[114,"dyn_clone::sealed"],[115,"sp_weights::weight_v2"],[116,"alloc::vec"],[117,"frame_support::traits::metadata"],[118,"parity_scale_codec::error"],[119,"core::result"],[120,"parity_scale_codec::codec"],[121,"frame_support::dispatch"],[122,"core::fmt"],[123,"core::fmt"],[124,"frame_support::traits::metadata"],[125,"core::any"],[126,"scale_info::ty"],[127,"core::ops::function"],[128,"sp_storage"]],"d":["Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,9,0,0,7,8,7,8,8,8,7,8,7,8,7,8,7,8,7,7,7,8,8,8,8,7,8,7,8,8,0,7,8,7,8,7,7,7,8,8,8,7,8,7,8,7,7,8,8,7,7,8,8,8,8,8,8,8,8,7,7,7,8,7,7,8,7,8,7,8,7,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,7,8,7,8,7,8,7,8,0,0,0,8,8,8,7,8,8,7,8,7,8,8,7,8,7],"f":"`````{{cb}d{}}0{{}f}{c{{j{h}}}{}}{c{{l{h}}}{}}1{ce{}{}}000{{{n{c}}}{{n{c}}}{}}{{{A`{c}}}{{A`{c}}}Ab}{{ce}d{}{}}0{{}Ad}{{}Af}{{}c{}}{c{{Aj{{A`{e}}Ah}}}AlAb}{{{An{h}}}{{Aj{cAh}}}{}}{{B`{An{h}}}{{Aj{cAh}}}{}}{{B`c}{{Aj{eAh}}}Al{}}{Adc{}}000{{{A`{c}}e}BbAb{}}`{Add}0{{{n{c}}{n{c}}}Bd{}}{{{A`{c}}{A`{c}}}BdAb}{{ce}Bd{}{}}00000{{{n{c}}Bf}Bh{}}{{{A`{c}}Bf}BhAb}{cc{}}00{ce{}{}}010101{{{A`{c}}}hAb}{{}{{An{h}}}}{{{A`{c}}}BjAb}{{}{{An{Bj}}}}{{{A`{c}}}BlAb}{c{{l{h}}}{}}{{}Ad}{{}{{l{Bn}}}}11{{}d}99999999{{{A`{c}}e}BdAb{}}{{}c{}}{{}Bj}0{{}{{j{h}}}}{{{C`{c}}}dAb}{{}Cb}16{{{C`{c}}f}fAb}{{{C`{c}}}fAb}8{{}f}{{}{{l{Cd}}}}`{{c{An{h}}}{{l{h}}}{}}{ce{}{}}0{c{{Aj{e}}}{}{}}00000```{c{{j{h}}}{}}0{c{{l{h}}}{}}{cCf{}}0{{}Ch}5555{{cgBd}e{}{}{{Cl{{An{h}}}{{Cj{e}}}}}}66{{}{{l{Cn}}}}","c":[3],"p":[[5,"Private",114],[1,"unit"],[5,"Weight",115],[1,"u8"],[1,"array"],[5,"Vec",116],[5,"Pallet",0],[6,"Call",0],[10,"Config",0],[1,"usize"],[5,"CrateVersion",117],[5,"Error",118],[6,"Result",119],[10,"Input",120],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",121],[1,"bool"],[5,"Formatter",122],[8,"Result",122],[1,"str"],[5,"DispatchInfo",121],[5,"PalletInfoData",117],[8,"BlockNumberFor",123],[5,"StorageVersion",117],[5,"StorageInfo",124],[5,"TypeId",125],[5,"Type",126],[17,"Output"],[10,"FnOnce",127],[5,"TrackedStorageKey",128]],"b":[]}],\
["pallet_transaction_fees",{"doc":"Pallet for charging and re-distributing transaction fees.","t":"PRPGKRRRGRRIFRRKRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNCNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNOOOOOOOFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BlockFees","BlockchainHistorySize","BurnedBlockFees","Call","Config","CreditSupply","Currency","DynamicCostOfStorage","Event","FindBlockRewardAddress","MinReplicationFactor","Module","Pallet","RuntimeEvent","TotalSpacePledged","WeightInfo","WeightInfo","__clone_box","__clone_box","__clone_box","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_transaction_byte_fee","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","index","infos","init","init","init","integrity_test","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_feeless","module_name","name","name_hash","note_storage_fees","note_transaction_fees","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_initialize","on_runtime_upgrade","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","transaction_byte_fee","transaction_byte_fee","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","whitelisted_storage_keys","compute","compute","storage","storage","tips","tips","who","BlockAuthor","CollectedBlockFees","IsDuringBlockExecution","TransactionByteFee","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip"],"q":[[0,"pallet_transaction_fees"],[177,"pallet_transaction_fees::Event"],[184,"pallet_transaction_fees::storage_types"],[276,"dyn_clone::sealed"],[277,"sp_weights::weight_v2"],[278,"alloc::vec"],[279,"frame_support::traits::metadata"],[280,"parity_scale_codec::error"],[281,"core::result"],[282,"parity_scale_codec::codec"],[283,"frame_support::dispatch"],[284,"parity_scale_codec::codec"],[285,"core::fmt"],[286,"core::fmt"],[287,"frame_support::traits::metadata"],[288,"core::any"],[289,"scale_info::ty"],[290,"sp_storage"]],"d":["Storage fees.","How big is the history of the blockchain in archived state …","Fees burned due to equivocated block author or rewards not …","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","How many credits there is in circulation.","","Whether dynamic cost of storage should be used","<code>pallet-transaction-fees</code> events","","Minimum desired number of replicas of the blockchain to be …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Pallet transaction fees for issuing fees to block authors.","<code>pallet-transaction-fees</code> events","How much space there is on the network.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","Return the current <code>transaction_byte_fee</code> value for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of collected compute fees.","Amount of burned compute fees.","Amount of collected storage fees.","Amount of burned storage fees.","Amount of collected tips.","Amount of burned tips.","Block author that received the fees.","Temporary value (cleared at block finalization) which …","Temporary value (cleared at block finalization) which …","Temporary value (cleared at block finalization) used to …","The value of <code>transaction_byte_fee</code> for both the current and …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[8,9,8,0,0,9,9,9,0,9,9,0,0,9,9,0,9,7,8,10,7,8,10,8,10,8,10,7,8,10,7,8,10,7,7,8,10,7,8,10,7,7,7,8,10,8,10,8,10,8,10,7,8,10,7,8,10,10,0,7,8,10,8,7,8,10,7,7,7,8,8,8,10,10,10,7,8,10,7,8,10,7,7,8,8,10,10,7,7,8,8,10,10,10,10,10,10,10,8,10,7,7,7,8,10,7,7,8,10,7,8,10,7,8,10,7,8,10,10,7,7,7,7,7,7,7,7,7,7,7,33,7,7,7,8,7,0,8,10,7,8,10,7,7,7,8,10,7,8,10,7,8,10,0,0,0,8,10,8,10,8,10,7,8,10,8,10,7,8,10,7,8,10,7,8,10,7,34,35,34,35,34,35,34,0,0,0,0,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,36,37,37,38,38,39,39,36,36,37,37,38,38,39,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39],"f":"`````````````````{{cb}d{}}00{{}f}{c{{j{h}}}{}}0{c{{l{h}}}{}}011{ce{}{}}00000{{}}{{{n{c}}}{{n{c}}}{}}{{{A`{c}}}{{A`{c}}}Ab}{{{Ad{c}}}{{Ad{c}}}Ab}{{ce}d{}{}}00{{}Af}{{}Ah}{{}c{}}{c{{Al{{A`{e}}Aj}}}AnAb}{c{{Al{{Ad{e}}Aj}}}AnAb}{{{B`{h}}}{{Al{cAj}}}{}}0{{Bb{B`{h}}}{{Al{cAj}}}{}}0{{Bbc}{{Al{eAj}}}An{}}0{Afc{}}00000{{{Ad{c}}e}BdAb{}}`{Afd}00{{{A`{c}}e}dAb{BfBh}}{{{n{c}}{n{c}}}Bj{}}{{{A`{c}}{A`{c}}}BjAb}{{{Ad{c}}{Ad{c}}}BjAb}{{ce}Bj{}{}}00000000{{{n{c}}Bl}Bn{}}{{{A`{c}}Bl}BnAb}{{{Ad{c}}Bl}BnAb}{cc{}}00{ce{}{}}10110101010{{{Ad{c}}}hAb}{{}{{B`{h}}}}{{{Ad{c}}}C`Ab}{{}{{B`{C`}}}}{{{Ad{c}}}CbAb}{c{{l{h}}}{}}0{{}Af}{{}{{l{Cd}}}}111{{}d}999999999999{{{Ad{c}}e}BjAb{}}{{}C`}0{{}{{j{h}}}}33{{{Cf{c}}}dAb}{{}Ch}115{{{Cf{c}}f}fAb}{{}f}{{{Cf{c}}}fAb}01{{{A`{c}}}AfAb}{{}{{l{Cj}}}}`{{c{B`{h}}}{{l{h}}}{}}0{ce{}{}}00{{}}0{c{{Al{e}}}{}{}}00000000```{c{{j{h}}}{}}000{c{{l{h}}}{}}0{cCl{}}00{{}Cn}0666666666{{}{{l{D`}}}}```````````77777777{Afc{}}0000000{Afd}000{cc{}}000:00::00::00:0:0:{{}Af}000;;;;;;;;;;;;;;;;9999999999996666;;;;;;;;;;;;","c":[11],"p":[[5,"Private",276],[1,"unit"],[5,"Weight",277],[1,"u8"],[1,"array"],[5,"Vec",278],[5,"Pallet",0],[6,"Event",0],[10,"Config",0],[6,"Call",0],[1,"usize"],[5,"CrateVersion",279],[5,"Error",280],[6,"Result",281],[10,"Input",282],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",283],[10,"Output",282],[10,"Sized",284],[1,"bool"],[5,"Formatter",285],[8,"Result",285],[1,"str"],[5,"DispatchInfo",283],[5,"PalletInfoData",279],[8,"BlockNumberFor",286],[5,"StorageVersion",279],[5,"StorageInfo",287],[5,"TypeId",288],[5,"Type",289],[5,"TrackedStorageKey",290],[10,"WeightInfo",0],[15,"BlockFees",177],[15,"BurnedBlockFees",177],[5,"TransactionByteFee",184],[5,"IsDuringBlockExecution",184],[5,"BlockAuthor",184],[5,"CollectedBlockFees",184]],"b":[[126,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[127,"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[131,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[132,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[142,"impl-Pallet%3CT%3E"],[143,"impl-StorageFee%3C%3C%3CT+as+Config%3E::Currency+as+Currency%3C%3CT+as+Config%3E::AccountId%3E%3E::Balance%3E-for-Pallet%3CT%3E"]]}],\
["pallet_transporter",{"doc":"Pallet transporter used to move funds between chains.","t":"RPPGKRPFGGPPPPFPPPIPPPPFRRRRFPRNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNCNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNOOOOOOOOOOOHFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNNNNNNNNNNNNNNNMNMNMNNNNNNNN","n":["AccountIdConverter","BalanceOverflow","BalanceUnderflow","Call","Config","Currency","DomainBalanceAlreadyInitialized","EndpointHandler","Error","Event","IncomingTransferSuccessful","InvalidAccountId","InvalidPayload","InvalidTransferRequest","Location","LowBalance","LowBalanceOnDomain","MissingTransferRequest","Module","NonConsensusChain","OutgoingTransferFailed","OutgoingTransferInitiated","OutgoingTransferSuccessful","Pallet","RuntimeEvent","SelfChainId","SelfEndpointId","Sender","Transfer","UnexpectedMessage","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_id","amount","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled_transfers","chain_id","chain_transfers","claim_rejected_transfer","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","confirm_transfer","count","crate_version","current_storage_version","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","domain_balances","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","identity","identity","index","infos","init","init","init","init","init","init","init","initialize_domain_balance","integrity_test","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_feeless","message","message_response","message_response_weight","message_weight","module_name","name","name_hash","new_call_variant_transfer","note_transfer","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","outgoing_transfers","receiver","reduce_domain_balance","reject_transfer","sender","size_hint","size_hint","size_hint","size_hint","size_hint","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transfer","transfers_storage_key","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unconfirmed_transfers","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weights","whitelisted_storage_keys","with_weight","amount","dst_location","chain_id","chain_id","chain_id","chain_id","err","message_id","message_id","message_id","message_id","transfer","CancelledTransfers","ChainTransfers","DomainBalances","OutgoingTransfers","UnconfirmedTransfers","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","message","message","message_response","message_response","transfer","transfer","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"pallet_transporter"],[369,"pallet_transporter::Call"],[371,"pallet_transporter::Event"],[380,"pallet_transporter::dispatchables"],[381,"pallet_transporter::storage_types"],[496,"pallet_transporter::weights"],[527,"dyn_clone::sealed"],[528,"sp_weights::weight_v2"],[529,"alloc::vec"],[530,"sp_domains"],[531,"parity_scale_codec::encode_like"],[532,"sp_domains"],[533,"core::clone"],[534,"frame_support::traits::metadata"],[535,"parity_scale_codec::error"],[536,"parity_scale_codec::codec"],[537,"parity_scale_codec::codec"],[538,"sp_domains"],[539,"parity_scale_codec::codec"],[540,"core::fmt"],[541,"core::fmt"],[542,"sp_messenger::endpoint"],[543,"frame_support::traits::metadata"],[544,"frame_support::traits::storage"],[545,"frame_system::pallet_prelude"],[546,"scale_info::ty"],[547,"core::ops::function"],[548,"sp_storage"],[549,"frame_support::dispatch"]],"d":["MultiAccountID &lt;&gt; T::AccountId converter.","Emits when balance overflow","Emits when balance underflow","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Currency used by this pallet.","Emits when domain balance is already initialized","Endpoint handler implementation for pallet transporter.","Errors emitted by pallet-transporter.","Events emitted by pallet-transporter.","Emits when a given incoming transfer was successfully …","Emits when the account id type is invalid.","Failed to decode transfer payload.","Emits when the request doesn’t match the expected one..","Location that either sends or receives transfers between …","Emits when the account has low balance to make a transfer.","Emits when from_chain do not have enough funds to finalize …","Emits when the request for a response received is missing.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Emits when the transfer tracking was called from …","Emits when a given outgoing transfer was failed on …","Emits when there is a new outgoing transfer.","Emits when a given outgoing transfer was successful.","Pallet transporter to move funds between chains.","Event type for this pallet.","Gets the chain_id of the current execution environment.","Gets the endpoint_id of this pallet in a given execution …","Sender used to transfer funds.","Transfer of funds from one chain to another.","Emits when the incoming message is not bound to this chain.","Weight information for extrinsics in this pallet.","","","","","","Unique account on chain.","Amount being transferred between entities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>CancelledTransfers</code>.","Unique identity of chain.","An auto-generated getter for <code>ChainTransfers</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","An auto-generated getter for <code>DomainBalances</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>transfer</code>.","","","","","","","","","","An auto-generated getter for <code>OutgoingTransfers</code>.","Receiver location of the transfer.","","","Sender location of the transfer.","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","Initiates transfer of funds from account on src_chain to …","See <code>Pallet::transfer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>UnconfirmedTransfers</code>.","","","","","","","","","","","","","","","","","","","Autogenerated weights for pallet_transporter","","","","","Destination chain the transfer is bound to.","Destination chain the transfer is bound to.","Destination chain the transfer is bound to.","Source chain the transfer is coming from.","Error from dst_chain endpoint.","Id of the transfer.","Id of the transfer.","Id of the transfer.","Id of the transfer.","Initiates transfer of funds from account on src_chain to …","Storage to track cancelled transfers between different …","A temporary storage that tracks total transfers from this …","Domain balances.","All the outgoing transfers on this execution environment.","Storage to track unconfirmed transfers between different …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weights for pallet_transporter using the Substrate node …","Weight functions needed for pallet_transporter.","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","Storage: System Account (r:1 w:0) Proof: System Account …","","Storage: Transporter OutgoingTransfers (r:1 w:1) Proof …","","Storage: System Account (r:1 w:1) Proof: System Account …","","","","","","",""],"i":[16,23,23,0,0,16,23,0,0,0,15,23,23,23,0,23,23,23,0,23,15,15,15,0,16,16,16,16,0,23,16,11,12,14,15,17,11,12,14,11,12,15,23,17,11,12,15,23,17,11,12,15,23,17,11,12,14,15,23,36,17,11,12,14,15,23,36,17,14,11,14,14,11,12,14,15,17,11,12,14,15,17,14,14,14,14,11,12,15,23,17,11,12,15,23,17,11,12,15,23,17,11,12,15,23,17,11,12,14,15,23,36,17,11,12,14,15,23,36,17,17,0,14,11,12,14,15,23,36,17,11,12,15,23,17,11,12,14,15,17,11,11,11,12,12,12,14,14,14,15,15,15,17,17,17,11,12,14,15,23,36,17,11,12,14,15,23,36,17,11,11,12,12,14,14,15,15,23,23,36,36,17,17,11,11,12,12,14,14,15,15,23,23,36,36,17,17,17,17,17,17,17,11,12,15,23,17,14,14,11,12,14,15,23,36,17,14,14,11,12,14,15,23,36,17,11,12,14,15,23,36,17,11,12,14,15,23,36,17,11,12,14,15,23,36,17,17,36,36,36,36,14,14,14,17,14,14,14,14,14,14,14,14,14,14,12,14,14,12,11,12,15,23,17,14,0,11,12,15,23,17,11,12,14,15,17,14,17,14,11,12,14,15,23,36,17,11,12,14,15,23,36,17,11,12,14,15,23,36,17,0,0,0,11,12,15,23,17,11,12,15,23,17,11,12,15,23,17,11,12,14,15,23,36,17,11,12,15,23,17,11,12,14,15,23,36,17,14,11,12,14,15,23,36,17,11,12,15,17,11,12,14,15,23,36,17,0,14,23,56,56,57,58,59,60,58,57,58,59,60,0,0,0,0,0,0,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,61,62,62,63,63,64,64,65,65,61,61,62,62,63,63,64,64,65,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,66,55,66,55,66,55,55,55,55,55,55,55,55],"f":"```````````````````````````````{{cb}d{}}0000``{{}f}{c{{j{h}}}{}}0000{c{{l{h}}}{}}000011111{ce{}{}}0000000000000{{ce}{}{{A`{n}}}{{A`{n}}}}`{{}Ab}{{nn}{{Ad{dc}}}{}}{AfAf}{{{Ah{c}}}{{Ah{c}}}Aj}{{{Al{c}}}{{Al{c}}}{}}{{{An{c}}}{{An{c}}}B`}{{{Bb{c}}}{{Bb{c}}}B`}{{ce}d{}{}}00006{{}Bd}{{}Bf}{{}c{}}{c{{Ad{AfBh}}}Bj}{c{{Ad{{Ah{e}}Bh}}}BjBl}{c{{Ad{{An{e}}Bh}}}BjB`}{c{{Ad{{Bn{e}}Bh}}}Bj{}}{c{{Ad{{Bb{e}}Bh}}}BjB`}{{{C`{h}}}{{Ad{cBh}}}{}}0000{{Cb{C`{h}}}{{Ad{cBh}}}{}}0000{{Cbc}{{Ad{eBh}}}Bj{}}0000{Bdc{}}0000000000000{{{Bb{c}}e}CdB`{}}`{c{}{{A`{Cf}}}}{Bdd}000000{{Afc}d{ChCj}}{{{Ah{c}}e}dCl{ChCj}}{{{An{c}}e}dB`{ChCj}}{{{Bn{c}}e}d{}{ChCj}}{{{Bb{c}}e}dB`{ChCj}}{{AfAf}Cn}{{{Ah{c}}{Ah{c}}}CnD`}{{{Al{c}}{Al{c}}}Cn{}}{{{An{c}}{An{c}}}CnB`}{{{Bb{c}}{Bb{c}}}CnB`}{{ce}Cn{}{}}00000000000000{{AfDb}Dd}{{{Ah{c}}Db}DdDf}{{{Al{c}}Db}Dd{}}{{{An{c}}Db}DdB`}{{{Bn{c}}Db}DdB`}{{{Dh{c}}Db}DdDf}{{{Bb{c}}Db}DdB`}{cc{}}000000{ce{}{}}101011001010110100110100101{{{Bb{c}}}hB`}{{}{{C`{h}}}}{{{Bb{c}}}DjB`}{{}{{C`{Dj}}}}{{{Bb{c}}}DlB`}{c{{l{h}}}{}}0000{{}Bd}{{}{{l{Dn}}}}1111111{Cf{{Ad{dc}}}{}}{{}d}::::::::::::::::::::::::::::{{{Bb{c}}e}CnB`{}}{{{Dh{c}}nE`}EbB`}{{{Dh{c}}nE`Eb}EdB`}{{{Dh{c}}}fB`}0{{}Dj}0{{}{{j{h}}}}{Af{{Bb{c}}}B`}{{nn}{{Ad{dc}}}{}}{{{Ef{c}}}dB`}{{}Eh}1:{{{Ef{c}}f}fB`}{{{Ef{c}}}fB`}0{{}f}{{ce}{{Ej{Ah}}}{{A`{n}}}A`}`?6`{AfBd}{{{Ah{c}}}BdCl}{{{An{c}}}BdB`}{{{Bn{c}}}Bd{}}{{{Bb{c}}}BdB`}{{}{{l{El}}}}`{{c{C`{h}}}{{l{h}}}{}}0000{ce{}{}}0000{{{En{c}}Af}EdB`}`{{}{{l{h}}}}{c{{Ad{e}}}{}{}}00000000000000000000```{c{{j{h}}}{}}000000000{c{{l{h}}}{}}0000{cF`{}}000000{{}Fb}00007777777{{ce}{}{{A`{n}}}{{A`{n}}}}8888888{{cgCn}e{}{}{{Ff{{C`{h}}}{{Fd{e}}}}}}0009999999`{{}{{l{Fh}}}}{{cf}{{Fl{Fj}}}{}}```````````{Afd}`````<<<<<<<<<<{Bdc{}}000000000{Bdd}0000{cc{}}00000?0??00??0?00?0?0?0?{{}Bd}0000{ce{}{}}0000000000000000000>>>>>>>>>>>>>>>;;;;;000000000000000``00443{{{Fn{c}}Db}DdDf}3313121111{{}f}00000{c{{Ad{e}}}{}{}}00>333","c":[18],"p":[[5,"Private",527],[1,"unit"],[5,"Weight",528],[1,"u8"],[1,"array"],[5,"Vec",529],[6,"ChainId",530],[10,"EncodeLike",531],[5,"Transfers",530],[6,"Result",532],[5,"Location",0],[5,"Transfer",0],[10,"Clone",533],[5,"Pallet",0],[6,"Event",0],[10,"Config",0],[6,"Call",0],[1,"usize"],[5,"CrateVersion",534],[5,"Error",535],[10,"Input",536],[10,"Decode",536],[6,"Error",0],[1,"slice"],[1,"u32"],[8,"DispatchResultWithPostInfo",537],[5,"DomainId",530],[10,"Output",536],[10,"Sized",538],[10,"Encode",536],[1,"bool"],[10,"PartialEq",539],[5,"Formatter",540],[8,"Result",540],[10,"Debug",540],[5,"EndpointHandler",0],[1,"str"],[5,"DispatchInfo",537],[5,"PalletInfoData",534],[5,"EndpointRequest",541],[8,"EndpointResponse",541],[8,"DispatchResult",537],[8,"BlockNumberFor",542],[5,"StorageVersion",534],[6,"Option",543],[5,"StorageInfo",544],[8,"OriginFor",542],[5,"TypeId",545],[5,"Type",546],[17,"Output"],[10,"FnOnce",547],[5,"TrackedStorageKey",548],[5,"PostDispatchInfo",537],[5,"DispatchErrorWithPostInfo",549],[5,"SubstrateWeight",496],[15,"transfer",369],[15,"OutgoingTransferInitiated",371],[15,"OutgoingTransferFailed",371],[15,"OutgoingTransferSuccessful",371],[15,"IncomingTransferSuccessful",371],[5,"OutgoingTransfers",381],[5,"DomainBalances",381],[5,"ChainTransfers",381],[5,"UnconfirmedTransfers",381],[5,"CancelledTransfers",381],[10,"WeightInfo",496]],"b":[[261,"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"],[262,"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E"]]}],\
["sc_consensus_subspace",{"doc":"<code>sc-consensus-subspace</code> is the core of Subspace consensus …","t":"FNNCCCNNNNNNNNNNNNNNNNNNNNNNNNNCNNCNNNNNNNNCNFFNNONONNNNNNNNHHNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNPFPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPFNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFNNNNNNONONONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNOONONONNOONOOOOONONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNPPPPPPPFFGPNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["SubspaceLink","__clone_box","archived_segment_notification_stream","archiver","aux_schema","block_import","block_importing_notification_stream","borrow","borrow_mut","chain_constants","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","kzg","new","new_slot_notification_stream","notification","reward_signing_notification_stream","segment_headers_for_block","slot_worker","to_owned","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","verifier","vzip","ArchivedSegmentNotification","SegmentHeadersStore","__clone_box","__clone_box","acknowledgement_sender","add_segment_headers","archived_segment","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_subspace_archiver","decode_block","deref","deref","deref_mut","deref_mut","drop","drop","encode_block","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_segment_header","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_key","into_key","into_mut","into_mut","into_ref","into_ref","max_segment_index","new","recreate_genesis_segment","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","BadRewardSignature","BlockImportingNotification","CheckInherents","CheckInherentsUnhandled","Client","CreateInherents","DifferentSegmentCommitment","DigestItemError","Error","FarmerInBlockList","GenesisUnavailable","HeaderBadSeal","HeaderUnsealed","InnerBlockImportError","InvalidAuditChunkOffset","InvalidChunkWitness","InvalidHistorySize","InvalidPiece","InvalidPieceOffset","InvalidProofOfSpace","InvalidProofOfTime","InvalidSetOfSegmentHeaders","InvalidSolutionRange","InvalidSubspaceJustification","InvalidSubspaceJustificationContents","MissingSubspaceJustification","NoBlockWeight","OnlyRootPlotPublicKeyAllowed","OutsideOfSolutionRange","ParentBlockNoAssociatedWeight","ParentUnavailable","RuntimeApi","SectorExpired","SegmentCommitmentNotFound","SegmentHeaderNotFound","SegmentHeadersExtrinsicNotFound","SlotMustIncrease","SubspaceBlockImport","__clone_box","__clone_box","acknowledgement_sender","block_number","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_block","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","import_block","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","new","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","current_history_size","expiration_history_size","half_solution_range","max_pieces_in_sector","piece_offset","slot","slot","solution_distance","SubspaceNotificationStream","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","subscribe","to_owned","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip","NewSlotInfo","NewSlotNotification","RewardSigningNotification","SubspaceSlotWorker","SubspaceSlotWorkerOptions","SubspaceSyncOracle","__clone_box","__clone_box","__clone_box","__clone_box","authorities_len","aux_data","backoff_authoring_blocks","block_import","block_import","block_import_params","block_proposal_slot_portion","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim_slot","client","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","env","fmt","fmt","fmt","fmt","force_authoring","force_authoring","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_major_syncing","is_offline","justification_sync_link","justification_sync_link","logging_target","max_block_proposal_slot_portion","new","new","new_slot_info","offchain_tx_pool_factory","on_proof","pot_verifier","pre_digest_data","proof_of_time","proposer","proposing_remaining_duration","public_key","segment_headers_store","should_backoff","signature_sender","slot","solution_range","solution_sender","subspace_link","sync_oracle","sync_oracle","telemetry","telemetry","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","voting_solution_range","vzip","vzip","vzip","vzip","vzip","vzip","BadRewardSignature","HeaderBadSeal","HeaderUnsealed","InvalidProofOfTime","InvalidSubspaceJustification","InvalidSubspaceJustificationContents","MissingSubspaceJustification","SubspaceVerifier","SubspaceVerifierOptions","VerificationError","VerificationError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_constants","client","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_authoring_blocks","kzg","new","offchain_tx_pool_factory","pot_verifier","reward_signing_context","select_chain","sync_target_block_number","telemetry","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verification_concurrency","verify","vzip","vzip","vzip"],"q":[[0,"sc_consensus_subspace"],[45,"sc_consensus_subspace::archiver"],[119,"sc_consensus_subspace::block_import"],[258,"sc_consensus_subspace::block_import::Error"],[266,"sc_consensus_subspace::notification"],[298,"sc_consensus_subspace::slot_worker"],[522,"sc_consensus_subspace::verifier"],[633,"dyn_clone::sealed"],[634,"sp_runtime::traits"],[635,"sp_consensus_subspace"],[636,"core::clone"],[637,"alloc::boxed"],[638,"core::any"],[639,"alloc::sync"],[640,"alloc::rc"],[641,"subspace_core_primitives::crypto::kzg"],[642,"sp_runtime::traits"],[643,"alloc::vec"],[644,"core::result"],[645,"core::any"],[646,"sc_client_api::backend"],[647,"sc_telemetry"],[648,"core::option"],[649,"core::future::future"],[650,"core::marker"],[651,"core::marker"],[652,"sc_client_api::client"],[653,"sp_blockchain::backend"],[654,"sc_client_api::backend"],[655,"sp_runtime::generic::block"],[656,"parity_scale_codec::error"],[657,"core::fmt"],[658,"core::fmt"],[659,"subspace_archiving::archiver"],[660,"core::error"],[661,"sc_consensus::block_import"],[662,"core::pin"],[663,"subspace_proof_of_space"],[664,"sp_consensus::error"],[665,"sc_consensus::block_import"],[666,"sp_runtime::traits"],[667,"sp_api"],[668,"alloc::string"],[669,"sc_utils::mpsc"],[670,"sp_blockchain::header_metadata"],[671,"core::convert"],[672,"sp_consensus"],[673,"sp_consensus_slots"],[674,"sc_consensus_slots"],[675,"subspace_core_primitives"],[676,"sc_consensus_slots::slots"],[677,"core::time"],[678,"core::cmp"],[679,"sp_consensus::select_chain"],[680,"core::num::nonzero"]],"d":["State that must be shared between various consensus …","","Get stream with notifications about archived segment …","Consensus archiver responsible for archival of blockchain …","Schema for Subspace block weight in the aux-db.","Block import for Subspace, which includes stateful …","Get stream with notifications about each imported block …","","","Subspace chain constants.","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","Access KZG instance","Create new instance.","Get stream with notifications about new slot arrival with …","Utility module for handling Subspace client notifications.","A stream with notifications about headers that need to be …","Get blocks that are expected to be included at specified …","Slot worker drives block and vote production based on …","","","","","","","","","Stateless and parallelized block verification that happens …","","Notification with block header hash that needs to be …","Persistent storage of segment headers.","","","Sender that signified the fact of receiving archived …","Add segment headers.","Archived segment.","","","","","","","","","Crate an archiver task that will listen for importing …","Symmetrical to <code>encode_block()</code>, used to decode previously …","","","","","","","Encode block for archiving purposes.","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a single segment header","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns last observed segment index","Create new instance","Derive genesis segment on demand, returns <code>Ok(None)</code> in case …","","","","","","","","","","","","","","","","","","","Bad reward signature","Notification with number of the block that is about to be …","Check inherents error","Unhandled check inherents error","Client error","Create inherents error.","Different segment commitment found","Error during digest item extraction","Errors encountered by the Subspace authorship task.","Farmer in block list","Genesis block unavailable. Cannot import","Header has a bad seal","Header is unsealed","Inner block import error","Invalid audit chunk offset","Invalid chunk witness","Invalid history size","Piece verification failed","Piece verification failed","Invalid proof of space","Invalid proof of time","Invalid set of segment headers","Block has invalid associated solution range","Invalid Subspace justification","Invalid Subspace justification contents","Missing Subspace justification","No block weight for parent header","Only root plot public key is allowed","Solution is outside of solution range","Parent block has no associated weight","Parent unavailable. Cannot import","Runtime Api error.","Sector expired","Segment commitment not found","Segment header not found","Stored segment header extrinsic was not found","Slot number must increase","A block-import handler for Subspace.","","","Sender for pausing the block import when operator is not …","Block number","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Produce a Subspace block-import object to be used later on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current history size","Expiration history size","Half of solution range","How many pieces one sector is supposed to contain (max)","Index of the piece that failed verification","Time slot","Time slot","Solution distance","The receiving half of the Subspace notification channel.","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","Subscribe to a channel through which notifications are …","","","","","","","","","","Information about new slot that just arrived","New slot notification with slot information and sender for …","Notification with a hash that needs to be signed to …","Subspace slot worker responsible for block and vote …","Parameters for <code>SubspaceSlotWorker</code>","Subspace sync oracle that takes into account force …","","","","","","","Strategy and parameters for backing off block production.","","The underlying block-import object to supply our produced …","","The proportion of the slot dedicated to proposing.","","","","","","","","","","","","","","The client to use","","","","","","","","","","","","","","","","","","","","","","","","","","","The environment we are producing blocks for.","","","","","","Force authoring of blocks even if we are offline","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Hash to be signed.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hook into the sync module to control the justification …","","The maximum proportion of the slot dedicated to proposing …","Create new Subspace slot worker","Create new instance","New slot information.","The offchain transaction pool factory.","","Proof of time verifier","","The PoT output for <code>slot</code>","","","Public key of the plot identity that should create …","Persistent storage of segment headers","","Sender that can be used to send signature for the header.","Slot","Acceptable solution range for block authoring","Sender that can be used to send solutions for the slot.","The source of timestamps for relative slots","","A sync oracle","","Handle use to report telemetries.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Acceptable solution range for voting","","","","","","","Bad reward signature","Header has a bad seal","Header is unsealed","Invalid proof of time","Invalid Subspace justification","Invalid Subspace justification contents","Missing Subspace justification","A verifier for Subspace blocks.","Options for Subspace block verifier","Errors encountered by the Subspace verification task.","Verification error","","","","","","","Subspace chain constants","Substrate client","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Whether this node is authoring blocks","Kzg instance","Create new instance","The offchain transaction pool factory.","Proof of time verifier","Context for reward signing","Chain selection rule","Approximate target block number for syncing purposes","Telemetry","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,3,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,0,3,0,0,24,4,4,24,4,24,4,24,4,24,4,24,4,0,0,24,4,24,4,24,4,0,24,4,24,4,24,24,4,4,24,24,4,4,24,24,4,24,4,24,4,24,4,24,4,24,4,24,4,24,4,24,24,0,24,4,24,4,24,4,24,4,24,4,24,4,24,4,24,4,24,4,59,0,59,59,59,59,59,59,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,51,7,7,7,51,7,59,51,7,59,51,51,7,51,7,51,7,59,51,7,59,51,7,59,7,59,59,51,7,59,59,59,59,59,59,51,51,7,7,59,59,51,51,7,7,59,59,51,51,7,59,51,7,59,51,7,59,51,7,59,51,7,59,51,7,59,51,7,59,51,7,59,51,59,51,7,59,51,7,59,51,7,59,51,7,59,51,7,59,51,7,59,51,7,59,51,7,59,51,7,59,90,90,91,92,92,91,92,91,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,28,77,16,17,69,69,79,69,79,69,79,79,69,28,77,16,17,79,69,28,77,16,17,69,79,28,77,16,17,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,28,77,16,17,69,79,79,69,28,77,16,17,79,79,69,69,28,28,77,77,16,16,17,17,79,79,69,69,28,28,77,77,16,16,17,17,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,28,28,69,79,69,79,69,28,16,79,69,79,69,77,69,69,17,79,69,17,77,77,16,79,69,79,69,79,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,79,69,28,77,16,17,77,79,69,28,77,16,17,62,62,62,62,62,62,62,0,0,0,62,86,87,62,86,87,62,86,86,86,87,62,86,87,62,86,87,62,62,62,62,62,62,62,62,62,86,87,62,86,86,87,87,62,62,86,86,87,87,62,62,86,87,62,86,87,62,86,87,62,86,87,62,86,87,62,86,87,62,86,87,62,86,87,62,86,86,87,86,86,86,86,86,86,62,86,87,62,86,87,62,86,87,62,86,87,62,86,87,62,86,87,62,86,87,62,87,87,86,87,62],"f":"`{{cb}d{}}{{{f{c}}}{{j{h}}}l}```{{{f{c}}}{{j{{n{c}}}}}l}{ce{}{}}0{{{f{c}}}A`l}{{{f{c}}}{{f{c}}}{Abl}}{{ce}d{}{}}{Adc{}}0{Add}{cc{}}0606{{}Ad}7{{{Af{c}}}{{Af{Ah}}}{}}{{{Aj{c}}}{{Aj{Ah}}}{}}{{{Al{c}}}{{Al{Ah}}}{}}:::{{{f{c}}}Anl}{{A`An}{{f{c}}}l}{{{f{c}}}{{j{B`}}}l}`{{{f{c}}}{{j{Bb}}}l}{{{f{c}}{Bd{c}}}{{Bh{Bf}}}l}`?{c{{Bj{e}}}{}{}}00{cBl{}}{cBn{}}{ce{}{}}0`0``{{cb}d{}}0`{{{C`{c}}{Cb{Bf}}}{{Cd{d}}}Cf}`2222{{{C`{c}}}{{C`{c}}}{}}{hh}{{ce}d{}{}}0{{{C`{c}}{f{e}}{Aj{i}}{Ch{k}}{Cl{Cj}}}{{Cd{{`{{D`{}{{Cn{{Cd{d}}}}}}Db}}}}}{CfDbDd}l{{Df{e}}}{{Dh{e}}{Dj{e}}{Dl{e}}{Dn{eg}}{E`{eg}}CfDbDd}{EbDbDd}}{{{Cb{Ed}}}{{Bj{{Ef{c}}Eh}}}l}{Adc{}}000{Add}0{{{Ef{c}}}{{Bh{Ed}}}l}{{{C`{c}}Ej}ElEn}{{hEj}El}{cc{}}0=0=00=0={{{C`{c}}F`}{{Cl{Bf}}}Cf}{{}Ad}0??{{{Af{c}}}{{Af{Ah}}}{}}0{{{Aj{c}}}{{Aj{Ah}}}{}}0{{{Al{c}}}{{Al{Ah}}}{}}0{ce{}{}}00000{{{C`{c}}}{{Cl{F`}}}Cf}{{{Aj{c}}}{{Cd{{C`{c}}}}}Cf}{{eAn}{{Bj{{Cl{Fb}}{Af{Fd}}}}}l{{Dh{c}}{Dj{c}}{Dl{c}}}}33{c{{Bj{e}}}{}{}}00000{cBl{}}0{cBn{}}0666666``````````````````````````````````````{{cb}d{}}0``777777{{{Ff{cegikm}}{Fh{e}}}{{Fj{{Af{D`}}}}}Fll{{Dh{e}}{Dj{e}}{Dl{e}}CfDbDd}{{Gb{e}{{Fn{G`}}}}DbDd}{{Gd{e{f{e}}}}DbDd}{CfDbDd}}{{{Ff{cegikm}}}{{Ff{cegikm}}}{}l{}AbAb{}}{{{n{c}}}{{n{c}}}{lAb}}{{ce}d{}{}}0{Adc{}}00000{Add}00{{{n{c}}Ej}El{lEn}}{{{Gf{c}}Ej}ElGh}{{{Gf{c}}Ej}El{EnGh}}{cc{}}00{Gj{{Gf{c}}}Gh}{{{Gl{c}}}{{Gf{c}}}Gh}{Gn{{Gf{c}}}Gh}{G`{{Gf{c}}}Gh}{H`{{Gf{c}}}Gh}{ce{}{}}66060060660{{{Ff{cegikm}}{Hb{e}}}{{Fj{{Af{D`}}}}}Fll{{Dh{e}}{Dj{e}}{Dl{e}}CfDbDd}{{Gb{e}{{Fn{G`}}}}DbDd}{{Gd{e{f{e}}}}DbDd}{CfDbDd}}{{}Ad}00222{{{Af{c}}}{{Af{Ah}}}{}}00{{{Aj{c}}}{{Aj{Ah}}}{}}00{{{Al{c}}}{{Al{Ah}}}{}}00555555555{{{Aj{e}}g{f{c}}i{C`{k}}Hd}{{Ff{mcegik}}}l{{Dh{c}}{Dj{c}}{Dl{c}}Cf}{}{{Gd{c{f{c}}}}DbDd}{CfDbDd}Fl}{{{Gf{c}}}{{Cl{Fd}}}Gh}77{cHf{}}{c{{Bj{e}}}{}{}}00000000{cBl{}}00{cBn{}}00;;;;;;;;;`````````{{cb}d{}}<<{{{j{c}}}{{j{c}}}{AbAbDbDdEn}}{{ce}d{}{}}{Adc{}}0{Add}{cc{}}0{ce{}{}}10{{}Ad}1{{{Af{c}}}{{Af{Ah}}}{}}{{{Aj{c}}}{{Aj{Ah}}}{}}{{{Al{c}}}{{Al{Ah}}}{}}444{{{j{c}}}{{Hh{c}}}{AbDbDdEn}}5>>>=<555``````;;;;{{{Hj{cegkmoAaAc}}Ae}{{Cl{Ad}}}Fll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}{}}{{{Hj{cegkmoAaAc}}If}{{Bj{AeG`}}}Fll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}{}}`{{{Hj{cegkmoAaAc}}}AeFll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}{}}`{{{Hj{cegkmoAaAc}}Bh{Ih{e}}AeAg}{{Fj{{Af{D`}}}}}Fll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}{}{}}`999999999999{{{Hj{cegkmoAaAc}}IfAe}{{Fj{{Af{D`}}}}}Fll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}{}}`{{{Ch{c}}}{{Ch{c}}}{EbDbDdAb}}{IjIj}{B`B`}{BbBb}{{ce}d{}{}}000{Adc{}}00000000000{Add}00000`{{{Ch{c}}Ej}El{EbDbDdEn}}{{IjEj}El}{{B`Ej}El}{{BbEj}El}{{{Hj{cegkmoAaAc}}}IlFll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}}`{cc{}}000000{ce{}{}}1001101010011001100110`{{}Ad}00000111111{{{Af{c}}}{{Af{Ah}}}{}}00000{{{Aj{c}}}{{Aj{Ah}}}{}}00000{{{Al{c}}}{{Al{Ah}}}{}}00000444444444444444444{{{Ch{c}}}Il{EbDbDd}}0{{{Hj{cegkmoAaAc}}}AeFll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}{}}`{{{Hj{cegkmoAaAc}}}BnFll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}}`{{{In{ceikmoAa}}}{{Hj{AcceikmoAa}}}l{{Dh{c}}{Dl{c}}{Hl{c}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{c}{{Fn{g}}}}DbDd}{EbDbDd}{{Ib{c}}}{{Id{{Bd{c}}}}DbDd}{CfDbDd}Fl}{{Il{Aj{J`}}c}{{Ch{c}}}{EbDbDd}}``{{{Hj{cegikmoAa}}IfJb}d{}l{{Dl{e}}{Dh{e}}}{}{EbDbDd}{}{}{}}`{{{Hj{cegkmoAaAc}}IfAe}{{Bh{Jd}}}Fll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}{}}`5{{{Hj{cegkmoAaAc}}{Jf{e}}}JhFll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}}``{{{Hj{cegkmoAaAc}}If}IlFll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}}`````7`{{{Hj{cegkmoAaAc}}}{{Cl{Cj}}}Fll{{Dh{e}}{Dl{e}}{Hl{e}{{Fn{Gj}}}}Cf}{FdDb{Hn{G`}}}{{I`{e}{{Fn{i}}}}DbDd}{EbDbDd}{{Ib{e}}}{{Id{{Bd{e}}}}DbDd}{CfDbDd}}`>>>>{c{{Bj{e}}}{}{}}00000000000000000{cBl{}}00000{cBn{}}00000{ce{}{}}00000000000`000000```````````000000``{Adc{}}00000{Add}00{{{Gl{c}}{Gl{c}}}Il{JjGh}}{{ce}Il{}{}}0000{{{Gl{c}}Ej}ElGh}{{{Gl{c}}Ej}El{EnGh}}{cc{}}00070707707070{{}Ad}00888{{{Af{c}}}{{Af{Ah}}}{}}00{{{Aj{c}}}{{Aj{Ah}}}{}}00{{{Al{c}}}{{Al{Ah}}}{}}00;;;;;;;;;``{{{Jl{ceg}}}{{Jn{iceg}}}l{Cf{Dl{c}}{Dh{c}}}{{K`{c}}}Fl}``````{cHf{}}{c{{Bj{e}}}{}{}}00000000{cBl{}}00{cBn{}}00{ce{}{}}00000{{{Jn{cegi}}}KbFll{{Dl{e}}{Dh{e}}DbDdCf}{{K`{e}}}}{{{Jn{cegi}}{Hb{e}}}{{Fj{{Af{D`}}}}}Fll{{Dl{e}}{Dh{e}}DbDdCf}{{K`{e}}}}222","c":[],"p":[[5,"Private",633],[1,"unit"],[5,"SubspaceLink",0],[5,"ArchivedSegmentNotification",45],[5,"SubspaceNotificationStream",266],[10,"Block",634],[5,"BlockImportingNotification",119],[6,"ChainConstants",635],[10,"Clone",636],[1,"usize"],[5,"Box",637],[10,"Any",638],[5,"Arc",639],[5,"Rc",640],[5,"Kzg",641],[5,"NewSlotNotification",298],[5,"RewardSigningNotification",298],[8,"NumberFor",634],[6,"SegmentHeader",642],[5,"Vec",643],[6,"Result",644],[5,"TypeId",638],[1,"str"],[5,"SegmentHeadersStore",45],[1,"slice"],[8,"Result",645],[10,"AuxStore",646],[5,"SubspaceSyncOracle",298],[5,"TelemetryHandle",647],[6,"Option",648],[17,"Output"],[10,"Future",649],[10,"Send",650],[10,"Sync",650],[10,"Backend",646],[10,"ProvideRuntimeApi",651],[10,"BlockBackend",652],[10,"HeaderBackend",653],[10,"LockImportRun",646],[10,"Finalizer",646],[10,"SyncOracle",654],[1,"u8"],[5,"SignedBlock",655],[5,"Error",656],[5,"Formatter",657],[8,"Result",657],[10,"Debug",657],[5,"SegmentIndex",658],[5,"NewArchivedSegment",659],[10,"Error",660],[5,"SubspaceBlockImport",119],[5,"BlockCheckParams",661],[5,"Pin",662],[10,"Table",663],[17,"Error"],[6,"Error",664],[10,"BlockImport",661],[10,"CreateInherentDataProviders",665],[6,"Error",119],[10,"Header",634],[6,"Error",645],[6,"VerificationError",522],[6,"Error",666],[6,"ApiError",651],[5,"BlockImportParams",661],[5,"PotVerifier",667],[5,"String",668],[5,"TracingUnboundedReceiver",669],[5,"SubspaceSlotWorker",298],[10,"HeaderMetadata",670],[10,"From",671],[10,"Environment",654],[10,"JustificationSyncLink",661],[10,"BackoffAuthoringBlocksStrategy",672],[5,"Slot",673],[8,"StorageChanges",672],[5,"NewSlotInfo",298],[1,"bool"],[5,"SubspaceSlotWorkerOptions",298],[5,"AtomicBool",674],[5,"PotCheckpoints",642],[6,"DigestItem",675],[5,"SlotInfo",676],[5,"Duration",677],[10,"PartialEq",678],[5,"SubspaceVerifierOptions",522],[5,"SubspaceVerifier",522],[10,"SelectChain",679],[8,"NonZeroUsize",680],[15,"SectorExpired",258],[15,"OutsideOfSolutionRange",258],[15,"InvalidPieceOffset",258]],"b":[[182,"impl-Display-for-Error%3CHeader%3E"],[183,"impl-Debug-for-Error%3CHeader%3E"],[187,"impl-From%3CError%3E-for-Error%3CHeader%3E"],[188,"impl-From%3CVerificationError%3CHeader%3E%3E-for-Error%3CHeader%3E"],[189,"impl-From%3CError%3E-for-Error%3CHeader%3E"],[190,"impl-From%3CError%3E-for-Error%3CHeader%3E"],[191,"impl-From%3CApiError%3E-for-Error%3CHeader%3E"],[556,"impl-Display-for-VerificationError%3CHeader%3E"],[557,"impl-Debug-for-VerificationError%3CHeader%3E"]]}],\
["sc_consensus_subspace_rpc",{"doc":"RPC api for Subspace.","t":"GPFKKFPMNNONNNNNNOONNNNNNNNNONNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNOMNNOMNNONMNNMNNMNNMNNMNNOONNNNNNNNNNNNNNNNNNNNNNNNN","n":["Error","StringError","SubspaceRpc","SubspaceRpcApiClient","SubspaceRpcApiServer","SubspaceRpcConfig","UnsafeRpcCalled","acknowledge_archived_segment_header","acknowledge_archived_segment_header","acknowledge_archived_segment_header","archived_segment_notification_stream","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","deny_unsafe","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dsn_bootstrap_nodes","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_farmer_app_info","get_farmer_app_info","get_farmer_app_info","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_rpc","kzg","last_segment_headers","last_segment_headers","last_segment_headers","new","new_slot_notification_stream","piece","piece","piece","reward_signing_notification_stream","segment_headers","segment_headers","segment_headers","segment_headers_store","source","submit_reward_signature","submit_reward_signature","submit_reward_signature","submit_solution_response","submit_solution_response","submit_solution_response","subscribe_archived_segment_header","subscribe_archived_segment_header","subscribe_archived_segment_header","subscribe_reward_signing","subscribe_reward_signing","subscribe_reward_signing","subscribe_slot_info","subscribe_slot_info","subscribe_slot_info","subscription_executor","sync_oracle","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"sc_consensus_subspace_rpc"],[132,"subspace_core_primitives::segments"],[133,"core::future::future"],[134,"alloc::boxed"],[135,"core::pin"],[136,"sp_runtime::traits"],[137,"sp_api"],[138,"sp_blockchain::backend"],[139,"sc_client_api::client"],[140,"core::marker"],[141,"core::marker"],[142,"core::clone"],[143,"sc_client_api::backend"],[144,"core::fmt"],[145,"core::fmt"],[146,"subspace_rpc_primitives"],[147,"core::result"],[148,"core::any"],[149,"alloc::sync"],[150,"alloc::rc"],[151,"jsonrpsee_core::server::rpc_module"],[152,"sp_api"],[153,"alloc::vec"],[154,"core::option"],[155,"core::error"],[156,"subspace_rpc_primitives"],[157,"alloc::string"],[158,"core::any"]],"d":["Top-level error type for the RPC handler.","Errors that can be formatted as a String","Implements the <code>SubspaceRpcApiServer</code> trait for interacting …","Client implementation for the <code>SubspaceRpcApi</code> RPC API.","Server trait implementation for the <code>SubspaceRpcApi</code> RPC API.","Subspace RPC configuration","Call to an unsafe RPC was denied.","","","","Archived segment notification stream","","","","","","","Substrate client","Signifies whether a potentially unsafe RPC should be denied","","","","","","","","","","DSN bootstrap nodes","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get metadata necessary for farmer operation","","Get metadata necessary for farmer operation","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Collects all the methods and subscriptions defined in the …","Kzg instance","","","","Creates a new instance of the <code>SubspaceRpc</code> handler.","New slot notification stream","","","","Reward signing notification stream","","","","Segment headers store","","","","","","","","Archived segment header subscription","","Archived segment header subscription","Sign block subscription","","Sign block subscription","Slot info subscription","","Slot info subscription","Task executor that is being used by RPC subscriptions","Subspace sync oracle","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,19,0,0,0,0,19,1,6,16,30,30,6,19,30,6,19,30,30,30,6,19,30,6,19,30,6,19,30,19,19,30,6,19,19,30,30,6,6,19,19,30,30,6,6,19,19,1,6,16,30,6,19,30,6,19,30,6,19,30,6,19,30,6,19,30,6,19,30,6,19,30,6,19,1,30,1,6,16,6,30,1,6,16,30,1,6,16,30,19,1,6,16,1,6,16,1,6,16,1,6,16,1,6,16,30,30,19,30,6,19,30,6,19,30,6,19,30,6,19,30,6,19,30,6,19,30,6,19,30,6,19],"f":"```````{{bd}{{j{{h{f}}}}}}{{{l{cegi}}d}{{j{{h{f}}}}}n{{A`{c}}{Ab{c}}{Ad{c}}AfAh}{AjAfAhAl}{AnAfAh}}{{B`d}{{j{{h{f}}}}}}`{ce{}{}}00000``{Bbc{}}00000{BbBd}00`{{BfBh}Bj}0{cc{}}00{BlBf}511551155115{b{{C`{BnBf}}}}{{{l{cegi}}}{{C`{BnBf}}}n{{A`{c}}{Ab{c}}{Ad{c}}AfAh}{AjAfAhAl}{AnAfAh}}{B`{{j{{h{f}}}}}}{{}Bb}00999{{{h{c}}}{{h{Cb}}}{}}00{{{Cd{c}}}{{Cd{Cb}}}{}}00{{{Cf{c}}}{{Cf{Cb}}}{}}00<<<<<<<<<{b{{Ch{b}}}}`{{bCj}{{j{{h{f}}}}}}{{{l{cegi}}Cj}{{j{{h{f}}}}}n{{A`{c}}{Ab{c}}{Ad{c}}AfAh}{AjAfAhAl}{AnAfAh}}{{B`Cj}{{j{{h{f}}}}}}{{{Cl{egi}}}{{C`{{l{cegi}}Cn}}}n{{A`{c}}{Ab{c}}}{AjAfAhAl}{AnAfAh}}`{{bD`}{{C`{{Df{{Dd{Db}}}}Bf}}}}{{{l{cegi}}D`}{{C`{{Df{{Dd{Db}}}}Bf}}}n{{A`{c}}{Ab{c}}{Ad{c}}AfAh}{AjAfAhAl}{AnAfAh}}{{B`D`}{{j{{h{f}}}}}}`{{b{Dd{d}}}{{j{{h{f}}}}}}{{{l{cegi}}{Dd{d}}}{{j{{h{f}}}}}n{{A`{c}}{Ab{c}}{Ad{c}}AfAh}{AjAfAhAl}{AnAfAh}}{{B`{Dd{d}}}{{j{{h{f}}}}}}`{Bf{{Df{Dh}}}}{{bDj}{{C`{BdBf}}}}{{{l{cegi}}Dj}{{C`{BdBf}}}n{{A`{c}}{Ab{c}}{Ad{c}}AfAh}{AjAfAhAl}{AnAfAh}}{{B`Dj}{{j{{h{f}}}}}}{{bDl}{{C`{BdBf}}}}{{{l{cegi}}Dl}{{C`{BdBf}}}n{{A`{c}}{Ab{c}}{Ad{c}}AfAh}{AjAfAhAl}{AnAfAh}}{{B`Dl}{{j{{h{f}}}}}}{{bDn}Bd}{{{l{cegi}}Dn}Bdn{{A`{c}}{Ab{c}}{Ad{c}}AfAh}{AjAfAhAl}{AnAfAh}}{B`{{j{{h{f}}}}}}210210``{cE`{}}{c{{C`{e}}}{}{}}00000000{cEb{}}00{cEd{}}00{ce{}{}}00000000","c":[],"p":[[10,"SubspaceRpcApiServer",0],[5,"SegmentIndex",132],[10,"Future",133],[5,"Box",134],[5,"Pin",135],[5,"SubspaceRpc",0],[10,"Block",136],[10,"ProvideRuntimeApi",137],[10,"HeaderBackend",138],[10,"BlockBackend",139],[10,"Send",140],[10,"Sync",140],[10,"SyncOracle",141],[10,"Clone",142],[10,"AuxStore",143],[10,"SubspaceRpcApiClient",0],[1,"usize"],[1,"unit"],[6,"Error",0],[5,"Formatter",144],[8,"Result",144],[5,"UnsafeRpcError",145],[5,"FarmerAppInfo",146],[6,"Result",147],[10,"Any",148],[5,"Arc",149],[5,"Rc",150],[5,"RpcModule",151],[1,"u64"],[5,"SubspaceRpcConfig",0],[6,"ApiError",137],[5,"PieceIndex",152],[1,"u8"],[5,"Vec",153],[6,"Option",154],[10,"Error",155],[5,"RewardSignatureResponse",146],[5,"SolutionResponse",146],[5,"PendingSubscriptionSink",156],[5,"String",157],[5,"TypeId",148],[1,"str"]],"b":[[29,"impl-Display-for-Error"],[30,"impl-Debug-for-Error"]]}],\
["sc_domains",{"doc":"Domain specific Host functions and Extension factory","t":"FIINNNNNNNNNNNNNNNNNNNNNNNN","n":["ExtensionsFactory","HostFunctions","RuntimeExecutor","borrow","borrow_mut","deref","deref_mut","drop","extensions_for","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","new","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"sc_domains"],[27,"sp_runtime::traits"],[28,"sp_externalities::extensions"],[29,"sp_runtime::traits"],[30,"sp_api"],[31,"sp_core::traits"],[32,"sc_executor"],[33,"alloc::sync"],[34,"core::result"],[35,"core::any"]],"d":["Extensions factory for subspace domains.","Host functions required for Subspace domain","Runtime executor for Domains","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":"```{ce{}{}}0{bc{}}0{bd}{{{f{ecgi}}{h{g}}}jl{{n{c}}{A`{c}}}l{AbAd}}{cc{}}4040{{}b}5555{{{Af{c}}{Af{e}}}{{f{cgie}}}{}{}{}{}}{c{{Ah{e}}}{}{}}00{cAj{}}888","c":[],"p":[[1,"usize"],[1,"unit"],[5,"ExtensionsFactory",0],[8,"NumberFor",27],[5,"Extensions",28],[10,"Block",27],[10,"HeaderBackend",29],[10,"ProvideRuntimeApi",30],[10,"CodeExecutor",31],[10,"RuntimeVersionOf",32],[5,"Arc",33],[6,"Result",34],[5,"TypeId",35]],"b":[]}],\
["sc_proof_of_time",{"doc":"Subspace proof of time implementation.","t":"KMCHCFFFNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["PotSlotWorker","on_proof","source","start_slot_worker","verifier","PotSlotInfo","PotSlotInfoStream","PotSourceWorker","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checkpoints","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","gossip","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","run","slot","subscribe_pot_slot_info_stream","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","PotGossipWorker","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","pot_gossip_peers_set_config","run","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","vzip","PotVerifier","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","from_mut","from_ref","genesis_seed","get_checkpoints","init","inject_verified_checkpoints","into","into_any","into_any_arc","into_any_rc","is_output_valid","new","to_owned","try_from","try_get_checkpoints","try_into","try_is_output_valid","type_id","type_name","unchecked_into","unique_saturated_into","verify_checkpoints","vzip"],"q":[[0,"sc_proof_of_time"],[5,"sc_proof_of_time::source"],[82,"sc_proof_of_time::source::gossip"],[105,"sc_proof_of_time::verifier"],[139,"sp_consensus_slots"],[140,"subspace_core_primitives"],[141,"sp_consensus_slots"],[142,"sp_runtime::traits"],[143,"sp_api"],[144,"sp_blockchain::backend"],[145,"sp_consensus::select_chain"],[146,"sc_consensus_slots"],[147,"core::marker"],[148,"core::marker"],[149,"sp_inherents::client_side"],[150,"dyn_clone::sealed"],[151,"core::fmt"],[152,"core::fmt"],[153,"core::any"],[154,"alloc::rc"],[155,"std::collections::hash::set"],[156,"sc_network::service::traits"],[157,"sp_api"],[158,"sc_client_api::client"],[159,"sc_network_gossip"],[160,"core::clone"],[161,"sc_network_gossip"],[162,"core::any"],[163,"subspace_core_primitives"],[164,"core::option"],[165,"sp_consensus_subspace"],[166,"subspace_core_primitives"]],"d":["","Called when new proof of time is available for slot.","","Start a new slot worker.","Proof of time verifier","Proof of time slot information","Stream with proof of time slots","Worker producing proofs of time.","","","","","","","","Proof of time checkpoints","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","PoT gossip functionality.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Run proof of time source","Slot number","Subscribe to pot slot notifications.","","","","","","","","","","","","","","","","","","","","","","","PoT gossip worker","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","Returns the network configuration for PoT gossip.","Run gossip engine.","","","","","","","","Verifier data structure that verifies and caches results …","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get genesis seed","Try to get checkpoints for provided seed and slot …","","Inject known good checkpoints into verifier","Calls <code>U::from(self)</code>.","","","","Verify sequence of proofs of time that covers <code>slots</code> slots …","","","","Try to get checkpoints quickly without waiting for …","","Does the same verification as <code>Self::is_output_valid()</code> …","","","","","Verify proof of time checkpoints",""],"i":[0,1,0,0,0,0,0,0,18,18,7,22,18,7,22,18,18,18,18,7,7,22,18,7,7,22,18,7,22,7,22,18,7,22,18,7,22,18,7,22,0,18,7,22,18,7,22,18,7,22,18,7,22,18,7,22,22,22,18,22,18,18,7,22,18,7,22,18,7,22,18,7,22,18,7,22,18,7,22,18,7,22,0,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29],"f":"`{{bdf}h}`{{j{l{e}}gikmn}hA`{{Ab{c}}{Ad{c}}}{{Af{c}}}{{b{c}}{Ah{c}}AjAl}{AnAj}{{B`{ch}}Aj}}````{{cBb}h{}}{ce{}{}}00000`{BdBd}{{ce}h{}{}}{Bfc{}}{nc{}}111011{Bfh}00{{nBh}Bj}{{{Bl{ceg}}Bh}BjBnBnBn}{cc{}}00888888`{{}Bf}00999{{{C`{c}}}{{C`{Cb}}}{}}00{{{l{c}}}{{l{Cb}}}{}}00{{{Cd{c}}}{{Cd{Cb}}}{}}00{{Cf{Ch{Bf}}{l{e}}Cjg{C`{Cl}}{l{i}}k}{{Dd{{D`{{Bl{cek}}{Cn{c}}n}}Db}}}A`{{Df{c}}{Ad{c}}{Ab{c}}}{{Dh{c}}AjAlDj}{{Dl{c}}}{AnDjAjAl}}{{{Bl{ceg}}}hA`{{Df{c}}{Ad{c}}{Ab{c}}}{AnDjAjAl}}`{{{Bl{ceg}}}{{Dn{Bd}}}A`{{Df{c}}{Ad{c}}{Ab{c}}}{AnDjAjAl}}?{c{{Dd{e}}}{}{}}00000{cE`{}}00{cEb{}}00{ce{}{}}00000000`00{Bfc{}}0?<11;1:98{{}{{D`{Ed{C`{Cl}}}}}}{{{Cn{c}}}hA`}6654333`{{cBb}h{}}44{CjCj}{{ce}h{}{}}55{Bfh}{{CjBh}Bj}{cc{}}99{CjEf}{{CjEhEf}{{Ej{f}}}}{{}Bf}{{CjEfEhf}h}={{{C`{c}}}{{C`{Cb}}}{}}{{{l{c}}}{{l{Cb}}}{}}{{{Cd{c}}}{{Cd{Cb}}}{}}{{CjEldEn{Ej{F`}}}Cf}{{EfFb}Cj}{ce{}{}}{c{{Dd{e}}}{}{}}903{cE`{}}{cEb{}}33{{CjEfEhf}Cf}4","c":[],"p":[[10,"PotSlotWorker",0],[5,"Slot",139],[5,"PotCheckpoints",140],[1,"unit"],[5,"SlotDuration",139],[5,"Arc",141],[5,"PotSlotInfoStream",5],[10,"Block",142],[10,"ProvideRuntimeApi",143],[10,"HeaderBackend",144],[10,"SelectChain",145],[10,"SimpleSlotWorker",146],[10,"Send",147],[10,"Sync",147],[10,"SyncOracle",148],[10,"CreateInherentDataProviders",149],[5,"Private",150],[5,"PotSlotInfo",5],[1,"usize"],[5,"Formatter",151],[8,"Result",151],[5,"PotSourceWorker",5],[10,"Debug",151],[5,"Box",152],[10,"Any",153],[5,"Rc",154],[1,"bool"],[5,"HashSet",155],[5,"PotVerifier",105],[10,"NotificationService",156],[5,"PotGossipWorker",82],[1,"tuple"],[6,"ApiError",143],[6,"Result",157],[10,"BlockchainEvents",158],[10,"Network",159],[10,"Clone",160],[10,"Syncing",159],[5,"Receiver",161],[5,"TypeId",153],[1,"str"],[5,"NonDefaultSetConfig",162],[5,"PotSeed",140],[8,"NonZeroU32",163],[6,"Option",164],[5,"PotNextSlotInput",165],[5,"PotOutput",140],[5,"PotParametersChange",165],[8,"NonZeroUsize",163]],"b":[]}],\
["sc_subspace_block_relay",{"doc":"Block relay implementation.","t":"GFPNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BlockRelayConfigurationError","NetworkWrapper","PrometheusError","borrow","borrow","borrow_mut","borrow_mut","build_consensus_relay","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","set","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"sc_subspace_block_relay"],[51,"alloc::sync"],[52,"prometheus::registry"],[53,"core::option"],[54,"sc_network_sync::block_relay_protocol"],[55,"core::result"],[56,"sp_runtime::traits"],[57,"sp_blockchain::backend"],[58,"sc_client_api::client"],[59,"sp_api"],[60,"sc_transaction_pool_api"],[61,"core::fmt"],[62,"core::fmt"],[63,"alloc::boxed"],[64,"core::any"],[65,"alloc::rc"],[66,"sc_network::service::traits"],[67,"core::error"],[68,"alloc::string"],[69,"core::any"]],"d":["","Wrapper to work around the circular dependency in …","","","","","","Sets up the relay components.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,6,1,6,1,6,0,1,1,6,1,6,1,6,6,6,1,6,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6],"f":"```{ce{}{}}000{{{d{b}}{d{e}}{d{g}}{h{f}}}{{n{{j{c}}l}}}A`{{Ab{c}}{Ad{c}}{Af{c}}}{{Aj{}{{Ah{c}}}}}}{{}b}{Alc{}}000{AlAn}0{{lB`}Bb}0{cc{}}{Bdl}17777{{}Al}088{{{Bf{c}}}{{Bf{Bh}}}{}}0{{{d{c}}}{{d{Bh}}}{}}0{{{Bj{c}}}{{Bj{Bh}}}{}}0{{b{d{Bl}}}An}{l{{h{Bn}}}}{cC`{}}{c{{n{e}}}{}{}}000{cCb{}}0{cCd{}}0{ce{}{}}00000","c":[],"p":[[5,"NetworkWrapper",0],[5,"Arc",51],[5,"Registry",52],[6,"Option",53],[5,"BlockRelayParams",54],[6,"BlockRelayConfigurationError",0],[6,"Result",55],[10,"Block",56],[10,"HeaderBackend",57],[10,"BlockBackend",58],[10,"ProvideRuntimeApi",59],[17,"Block"],[10,"TransactionPool",60],[1,"usize"],[1,"unit"],[5,"Formatter",61],[8,"Result",61],[6,"Error",62],[5,"Box",63],[10,"Any",64],[5,"Rc",65],[10,"NetworkRequest",66],[10,"Error",67],[5,"String",68],[5,"TypeId",64],[1,"str"]],"b":[[15,"impl-Debug-for-BlockRelayConfigurationError"],[16,"impl-Display-for-BlockRelayConfigurationError"]]}],\
["sc_subspace_chain_specs",{"doc":"Consensus chain specifications for Subspace.","t":"SS","n":["DEVNET_CHAIN_SPEC","GEMINI_3H_CHAIN_SPEC"],"q":[[0,"sc_subspace_chain_specs"]],"d":["Devnet chain spec","Gemini 3h chain spec"],"i":[0,0],"f":"``","c":[],"p":[],"b":[]}],\
["sp_auto_id",{"doc":"Primitives for X509 certificate verification","t":"FPFFFGNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNFNNHNNNNNNNNNNNNNNNNNNNNNHNFKFNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNN","n":["DerVec","Overflow","SignatureVerificationRequest","TbsCertificate","Validity","ValidityError","__clone_box","__clone_box","__clone_box","__clone_box","as_byte_slice","as_ref","as_slice_of","auto_id_runtime_interface","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","data","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode","encode_hex","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ffi_value","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","host_functions","identity","identity","identity","identity","identity","init","init","init","init","init","into","into","into","into","into","into_ffi_value","into_ffi_value","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_valid_at","not_after","not_before","public_key_info","serial","signature","signature_algorithm","size_hint","size_hint","size_hint","size_hint","size_hint","subject","subject_public_key_info","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","validity","vzip","vzip","vzip","vzip","vzip","HostFunctions","borrow","borrow_mut","decode_tbs_certificate","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","host_functions","init","into","into_key","into_mut","into_ref","register_static","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","verify_signature","vzip","HostFunctionExtension","HostFunctions","HostFunctionsImpl","as_mut_any","borrow","borrow","borrow_mut","borrow_mut","decode_tbs_certificate","decode_tbs_certificate","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","new","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","verify_signature","verify_signature","vzip","vzip"],"q":[[0,"sp_auto_id"],[255,"sp_auto_id::auto_id_runtime_interface"],[282,"sp_auto_id::host_functions"],[340,"dyn_clone::sealed"],[341,"byte_slice_cast"],[342,"core::result"],[343,"byte_slice_cast"],[344,"parity_scale_codec::error"],[345,"parity_scale_codec::codec"],[346,"core::iter::traits::collect"],[347,"parity_scale_codec::codec"],[348,"core::fmt"],[349,"core::fmt"],[350,"alloc::string"],[351,"subspace_runtime_primitives"],[352,"x509_parser::certificate"],[353,"core::any"],[354,"scale_info::ty"],[355,"core::ops::function"],[356,"core::option"],[357,"sp_wasm_interface"]],"d":["DER encoded bytes","","Signature verification request.","Decoded Tbs certificate.","Validity of a given certificate.","Validity conversion error.","","","","","","","","AutoId runtime interface.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data that is being signed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Checks if the certificate is valid at this time.","Not valid after the time since UNIX_EPOCH","Not valid before the time since UNIX_EPOCH","Der encoded public key info.","Certificate serial number.","Signature.","Der encoded signature algorithm.","","","","","","Certificate subject.","Certificate subject public key info.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Certificate validity.","","","","","","Provides implementations for the extern host functions.","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Host function trait for Certificate registration","Implementation of host functions for Certificate registry.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Create a new instance of <code>HostFunctionExtension</code>.","","","","","","","","","","","","","","","","",""],"i":[0,16,0,0,0,0,11,12,13,5,5,5,5,0,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,13,5,11,12,13,5,11,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,5,5,5,11,12,16,13,5,11,12,16,13,5,11,11,11,12,12,12,13,13,13,5,5,5,11,12,16,13,5,11,12,16,13,5,5,11,5,11,11,12,12,16,16,13,13,5,5,11,11,12,12,16,16,13,13,5,5,0,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,12,12,12,11,13,11,11,11,12,16,13,5,13,13,11,12,16,13,5,11,12,13,5,11,12,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,11,12,16,13,5,5,13,11,12,16,13,5,0,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,42,0,0,0,37,37,40,37,40,39,40,40,37,37,40,37,37,40,37,40,37,37,40,37,37,40,40,37,37,40,40,37,40,37,40,37,40,37,40,37,40,37,37,40,37,40,37,40,37,37,40,37,40,37,40,39,40,37,40],"f":"``````{{cb}d{}}000{c{{h{f}}}{}}{j{{h{f}}}}{c{{n{{h{e}}l}}}{}A`}`{c{{Ab{f}}}{}}0000{c{{Ad{f}}}{}}000011111{ce{}{}}000000000{AfAf}{AhAh}{AjAj}{jj}{{ce}d{}{}}000`{c{{n{AfAl}}}An}{c{{n{AhAl}}}An}{c{{n{B`Al}}}An}{c{{n{AjAl}}}An}{c{{n{jAl}}}An}{{{h{f}}}{{n{cAl}}}{}}0000{{Bb{h{f}}}{{n{cAl}}}{}}0000{{Bbc}{{n{eAl}}}An{}}0000{Bdc{}}000000000{Bdd}0000{j{{Ad{f}}}}{ce{}{{Bh{Bf}}}}0{{Afc}d{BjBl}}{{Ahc}d{BjBl}}{{B`c}d{BjBl}}{{Ajc}d{BjBl}}{{jc}d{BjBl}}{{AfAf}Bn}{{AhAh}Bn}{{B`B`}Bn}{{AjAj}Bn}{{jj}Bn}{{ce}Bn{}{}}00000000000{{AfC`}Cb}{{AhC`}Cb}{{B`C`}Cb}{{AjC`}Cb}{{jC`}Cb}{cc{}}000{{{Ad{f}}}j}1{Cd{{n{cCf}}}{}}0{ce{}{}}3030303030330300303`{c{{Ad{f}}}{}}0000{{}Bd}000022222{{cCd}{{n{Cf}}}{}}0333333333333333{{AhCh}Bn}``````{AfBd}{AhBd}{B`Bd}{AjBd}{jBd}``{{c{h{f}}}{{Ad{f}}}{}}0000::::{c{{n{e}}}{}{}}0{Cj{{n{Ahc}}}{}}1111111111111{c{{Ab{f}}}{}}000000000<<<<<{cCl{}}0000{{}Cn}0000??????????{{je}c{}{{Db{{h{f}}}{{D`{c}}}}}}`{ce{}{}}0000`00{j{{Dd{Aj}}}}{Bdc{}}0{Bdd}{cc{}}4040{{}{{Ad{Df}}}}{{}Bd}6666{c{{n{d}}}Dh}===:77{Af{{Dd{d}}}}8```{DjDl}9999{{Dnj}{{Dd{Aj}}}}{{E`j}{{Dd{Aj}}}}{{}E`}{Djc{}};;;0;::9{{{Eb{Dn}}}Dj}::>>:>::>88>>>>>>>>0{c{{n{e}}}{}{}}00000{DjCl}{cCl{}}0{ce{}{}}000{{DnAf}{{Dd{d}}}}{{E`Af}{{Dd{d}}}}22","c":[],"p":[[5,"Private",340],[1,"unit"],[1,"u8"],[1,"slice"],[5,"DerVec",0],[6,"Error",341],[6,"Result",342],[10,"FromByteSlice",341],[1,"array"],[5,"Vec",343],[5,"SignatureVerificationRequest",0],[5,"Validity",0],[5,"TbsCertificate",0],[5,"Error",344],[10,"Input",345],[6,"ValidityError",0],[1,"u32"],[1,"usize"],[1,"char"],[10,"FromIterator",346],[10,"Output",345],[10,"Sized",347],[1,"bool"],[5,"Formatter",348],[8,"Result",348],[10,"FunctionContext",349],[5,"String",350],[8,"Moment",351],[5,"Validity",352],[5,"TypeId",353],[5,"Type",354],[17,"Output"],[10,"FnOnce",355],[6,"Option",356],[10,"Function",349],[10,"HostFunctionRegistry",349],[5,"HostFunctionExtension",282],[10,"Any",353],[10,"HostFunctions",282],[5,"HostFunctionsImpl",282],[5,"Arc",357],[5,"HostFunctions",255]],"b":[]}],\
["sp_block_fees",{"doc":"Inherents for block-fees pallet","t":"SPFGINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["INHERENT_IDENTIFIER","IncorrectConsensusChainByteFee","InherentDataProvider","InherentError","InherentType","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","data","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","is_fatal_error","new","provide_inherent_data","size_hint","to_keyed_vec","try_from","try_from","try_handle_error","try_into","try_into","try_into_key","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"sp_block_fees"],[69,"alloc::vec"],[70,"parity_scale_codec::error"],[71,"core::result"],[72,"parity_scale_codec::codec"],[73,"parity_scale_codec::codec"],[74,"core::fmt"],[75,"core::fmt"],[76,"core::future::future"],[77,"alloc::boxed"],[78,"core::pin"],[79,"sp_inherents"]],"d":["Block-fees inherent identifier.","","Provides the set code inherent data.","","The type of the inherent.","","","","","","","","Returns the <code>data</code> of this inherent data provider.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create new inherent data provider from the given <code>data</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,6,0,0,0,6,6,6,4,6,4,6,4,6,6,6,6,4,6,4,6,4,6,6,6,4,6,4,4,6,6,4,4,6,6,6,4,6,4,6,4,6,4,6,4,6,6,4,4,6,6,4,6,4,4,6,4,6,6,6,6,4,6,4,6,4,6,4,6],"f":"`````{c{{d{b}}}{}}{c{{f{b}}}{}}1{ce{}{}}000{hj}{c{{A`{ln}}}Ab}{{{Ad{b}}}{{A`{cn}}}{}}{{Af{Ad{b}}}{{A`{cn}}}{}}{{Afc}{{A`{en}}}Ab{}}{Ahc{}}000{AhAj}0{{lc}Aj{AlAn}}{{lB`}Bb}{cc{}}0:0:0:0:0;{{}Ah}0;;;;;;;;{lBd}{jh}{{hBf}{{Bl{{Bj{Bh}}}}}}{lAh}{{c{Ad{b}}}{{f{b}}}{}}{c{{A`{e}}}{}{}}0{{hBn{Ad{b}}}{{Bl{{Bj{Bh}}}}}}1111{c{{d{b}}}{}}0{c{{f{b}}}{}}{cC`{}}0{ce{}{}}00000","c":[],"p":[[1,"u8"],[1,"array"],[5,"Vec",69],[5,"InherentDataProvider",0],[8,"InherentType",0],[6,"InherentError",0],[5,"Error",70],[6,"Result",71],[10,"Input",72],[1,"slice"],[1,"u32"],[1,"usize"],[1,"unit"],[10,"Output",72],[10,"Sized",73],[5,"Formatter",74],[8,"Result",74],[1,"bool"],[5,"InherentData",75],[10,"Future",76],[5,"Box",77],[5,"Pin",78],[8,"InherentIdentifier",75],[5,"TypeId",79]],"b":[]}],\
["sp_consensus_subspace",{"doc":"Primitives for Subspace consensus.","t":"GIIIFFPFFGFFFKGPPPGFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNONCONNNNOONNONNNNNNNNNNNNOOONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNHNNNNNNHNKPFPPGGPPPPFPPPGPGPPPPFPPNNNMMMMMMMMMNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNHNNNNNNNMONNNNNNNNNNOOOOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNOOOMOOONMOMOONMOMOOOONNNOONMOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNOOOOOSPFGFPKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONNMNNNNNNNNNNNNNNNNNNNNNOOPTIKFGKPKRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMOMMMNMNNNNNNNNNNNNNNNN","n":["ChainConstants","EquivocationProof","FarmerPublicKey","FarmerSignature","KzgExtension","PosExtension","PotCheckpoints","PotExtension","PotNextSlotInput","PotParameters","PotParametersChange","SignedVote","SolutionRanges","SubspaceApi","SubspaceJustification","V0","V0","V0","Vote","WrappedPotOutput","WrappedSolution","WrappedVerifySolutionParams","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_mut_any","as_mut_any","as_mut_any","block_authoring_delay","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_constants","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confirmation_depth_k","consensus","current","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derive","digests","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","entropy","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era_duration","extract_segment_headers","first_header","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ffi_value","from_ffi_value","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","history_size","inherents","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_ffi_value","into_ffi_value","into_ffi_value","is_clear","is_equivocation_proof_valid","is_in_block_list","is_inherent","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_pieces_in_sector","min_sector_lifetime","must_be_archived","new","new","new","next","next_parameters_change","offence","offender","pot_parameters","recent_history_fraction","recent_segments","root_plot_public_key","second_header","seed","segment_commitment","should_adjust_solution_range","signature","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot","slot","slot","slot","slot_duration","slot_iterations","slot_iterations","slot_iterations","slot_probability","solution","solution_ranges","submit_report_equivocation_extrinsic","submit_vote_extrinsic","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_justification","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","vote","voting_current","voting_next","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","block_authoring_delay","confirmation_depth_k","era_duration","min_sector_lifetime","recent_history_fraction","recent_segments","slot_duration","slot_probability","next_change","slot_iterations","checkpoints","seed","future_proof_of_time","height","parent_hash","proof_of_time","slot","solution","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","is_proof_of_time_valid","register_static","try_from","try_into","type_id","unchecked_into","unique_saturated_into","verify_solution","vzip","CompatibleDigestItem","Consensus","DeriveNextSolutionRangeParams","Duplicate","EnableSolutionRangeAdjustmentAndOverride","Error","ErrorDigestType","FailedToDecode","Missing","NextDigestDerivationError","NextDigestVerificationError","NextDigestsVerificationParams","NextSolutionRange","PotParametersChange","PotSlotIterations","PreDigest","PreDigest","PreDigestPotInfo","RootPlotPublicKeyUpdate","Seal","SegmentCommitment","SolutionRange","SubspaceDigestItems","V0","V0","__clone_box","__clone_box","__clone_box","as_enable_solution_range_adjustment_and_override","as_next_solution_range","as_pot_parameters_change","as_pot_slot_iterations","as_root_plot_public_key_update","as_segment_commitment","as_solution_range","as_subspace_pre_digest","as_subspace_seal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","current_slot","current_solution_range","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derive_next_solution_range","drop","drop","drop","drop","drop","drop","drop","enable_solution_range_adjustment_and_override","enable_solution_range_adjustment_and_override","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era_duration","era_duration","era_start_slot","era_start_slot","extract_pre_digest","extract_subspace_digest_items","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","future_proof_of_time","header_digests","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maybe_next_solution_range_override","maybe_next_solution_range_override","maybe_root_plot_public_key","next_solution_range","next_solution_range","number","number","pot_info","pot_parameters_change","pot_parameters_change","pot_slot_iterations","pot_slot_iterations","pre_digest","proof_of_time","root_plot_public_key_update","root_plot_public_key_update","segment_commitment","segment_commitments","should_adjust_solution_range","should_adjust_solution_range","signature","size_hint","size_hint","slot","slot_probability","slot_probability","solution","solution_range","solution_range","subspace_pre_digest","subspace_seal","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify_next_digests","vzip","vzip","vzip","vzip","vzip","vzip","vzip","pot_info","slot","solution","future_proof_of_time","proof_of_time","INHERENT_IDENTIFIER","IncorrectSegmentHeadersList","InherentDataProvider","InherentError","InherentType","MissingSegmentHeadersList","SubspaceInherentData","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","init","init","init","into","into","into","is_fatal_error","new","provide_inherent_data","replace_subspace_inherent_data","segment_headers","size_hint","size_hint","subspace_inherent_data","to_keyed_vec","to_keyed_vec","try_from","try_from","try_from","try_handle_error","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","actual","expected","DuplicateReport","ID","Kind","Offence","OffenceDetails","OffenceError","OnOffenceHandler","Other","ReportOffence","TimeSlot","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","is_known_offence","offender","offenders","on_offence","report_offence","size_hint","time_slot","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip"],"q":[[0,"sp_consensus_subspace"],[488,"sp_consensus_subspace::ChainConstants"],[496,"sp_consensus_subspace::PotParameters"],[498,"sp_consensus_subspace::SubspaceJustification"],[500,"sp_consensus_subspace::Vote"],[506,"sp_consensus_subspace::consensus"],[527,"sp_consensus_subspace::digests"],[759,"sp_consensus_subspace::digests::PreDigest"],[762,"sp_consensus_subspace::digests::PreDigestPotInfo"],[764,"sp_consensus_subspace::inherents"],[843,"sp_consensus_subspace::inherents::InherentError"],[845,"sp_consensus_subspace::offence"],[917,"dyn_clone::sealed"],[918,"core::any"],[919,"sp_consensus_slots"],[920,"sp_api"],[921,"core::result"],[922,"core::clone"],[923,"subspace_core_primitives"],[924,"parity_scale_codec::error"],[925,"parity_scale_codec::codec"],[926,"parity_scale_codec::codec"],[927,"subspace_core_primitives"],[928,"alloc::vec"],[929,"parity_scale_codec::codec"],[930,"parity_scale_codec::codec"],[931,"subspace_core_primitives"],[932,"core::fmt"],[933,"subspace_core_primitives::crypto::kzg"],[934,"subspace_proof_of_space"],[935,"core::ops::function"],[936,"alloc::boxed"],[937,"sp_wasm_interface"],[938,"alloc::string"],[939,"primitive_types"],[940,"subspace_core_primitives::segments"],[941,"sp_runtime::traits"],[942,"subspace_core_primitives::segments"],[943,"core::any"],[944,"core::ops::function"],[945,"core::future::future"],[946,"core::pin"],[947,"sp_inherents"]],"d":["Subspace blockchain constants.","An equivocation proof for multiple block authorships on …","A Subspace farmer identifier. Necessarily equivalent to …","A Subspace farmer signature.","A KZG extension.","A Poof of space extension.","Proof of time checkpoints that were not seen before","A Poof of time extension.","Next slot input for proof of time evaluation","Proof of time parameters","Change of parameters to apply to PoT chain","Signed farmer vote.","Subspace solution ranges used for challenges.","API necessary for block authorship with Subspace.","Subspace justification","V0 of the farmer vote.","V0 of the chain constants.","Initial version of the parameters","Farmer vote.","Wrapped proof of time output for the purposes of runtime …","Wrapped solution for the purposes of runtime interface.","Wrapped solution verification parameters for the purposes …","","","","","","","","","","","","Number of slots between slot arrival and when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get Subspace blockchain constants","","","","","","","","","","","","","","","","","","Depth <code>K</code> after which a block enters the recorded history.","Consensus-related runtime interface","Solution range in current block/era.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derive next slot input while taking parameters change into …","Private implementation details of Subspace consensus …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Entropy that should be injected at this time","","","","","","","","","","","","","","","","","","","","","","","","","Era duration in blocks.","Returns <code>Vec&lt;SegmentHeader&gt;</code> if a given extrinsic has them.","The first header involved in the equivocation.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Hash of the vote, used for signing and verifying signature.","Size of the blockchain history","Inherents for Subspace consensus","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Verifies the equivocation proof by making sure that: both …","Check if <code>farmer_public_key</code> is in block list (due to …","Checks if the extrinsic is an inherent.","","","","","How many pieces one sector is supposed to contain (max)","Minimum lifetime of a plotted sector, measured in archived …","Returns <code>true</code> if justification must be archived, implies …","Create new instance.","Create new instance.","Create new instance.","Solution range that will be used in the next block/era.","Get next proof of time parameters change if any","Common traits and types that are useful for describing …","Returns the authority id of the equivocator.","Proof of time parameters","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","Returns root plot public key in case block authoring is …","The second header involved in the equivocation.","Seed for this slot","Get the segment commitment of records for specified …","Whether solution range adjustment is enabled.","Signature.","","","","","","","","","","","","Slot at which vote was created.","The slot at which the equivocation happened.","Slot","At which slot change of parameters takes effect","The slot duration in milliseconds.","Number of iterations for proof of time per slot, …","Slot iterations for this slot","New number of slot iterations","Slot probability.","Solution contained within.","Solution ranges.","Submits an unsigned extrinsic to report an equivocation. …","Submit farmer vote vote that is essentially a header with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to decode Subspace justification from generic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Farmer vote.","Voting solution range in current block/era.","Voting solution range that will be used in the next …","","","","","","","","","","","","","","","Number of slots between slot arrival and when …","Depth <code>K</code> after which a block enters the recorded history.","Era duration in blocks.","Minimum lifetime of a plotted sector, measured in archived …","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","The slot duration in milliseconds.","Slot probability.","Optional next scheduled change of parameters","Number of iterations for proof of time per slot, …","Proof of time checkpoints from after future proof of …","Proof of time seed, the input for computing checkpoints","Future proof of time","Height at which vote was created.","Hash of the block on top of which vote was created.","Proof of time for this slot","Slot at which vote was created.","Solution (includes PoR).","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Verify whether <code>proof_of_time</code> is valid at specified <code>slot</code> if …","","","","","","","Verify whether solution is valid, returns solution …","","A digest item which is usable with Subspace consensus.","Generic consensus","Params used to derive the next solution range.","Duplicate Subspace digests","Enable solution range adjustment and override solution …","Digest error","Various kinds of digest types used in errors","Failed to decode Subspace digest","Subspace digest missing","Error when deriving next digests","Error when verifying next digests","Type that holds the parameters to derive and verify next …","Next solution range","Change of parameters to apply to PoT chain","Number of iterations for proof of time per slot","A Subspace pre-runtime digest. This contains all data …","Pre-digest","Proof of time information in pre-digest","Root plot public key was updated","Seal (signature)","Segment commitment","Solution range","Digest items extracted from a header into convenient form","Initial version of the pre-digest","Initial version of proof of time information","","","","If this item is a Subspace Enable solution range …","If this item is a Subspace next solution range, return it.","If this item is a Subspace proof of time change of …","If this item is a Subspace proof of time slot iterations, …","If this item is a Subspace update of root plot public key, …","If this item is a Subspace segment commitment, return it.","If this item is a Subspace solution range, return it.","If this item is an Subspace pre-digest, return it.","If this item is a Subspace signature, return the signature.","","","","","","","","","","","","","","","","","","","","","Current slot of the block.","Current solution range of the block.","","","","","","","","","","","","","","","","","","","","","","","Derives next solution range if era duration interval has …","","","","","","","","Construct digest item than indicates enabling of solution …","Enable solution range adjustment and Override solution …","","","","","","","","","","","Era duration of the chain.","Era duration at which solution range is updated.","Slot at which era has begun.","Current Era start slot.","Extract the Subspace pre digest from the given header. …","Extract the Subspace global randomness from the given …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Future proof of time","Digests present in the header that corresponds to number …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Solution range override that should be used instead of …","Next Solution range override. If the digest logs indicate …","Root plot public key. Value is updated when digest items …","Construct a digest item which contains next solution range.","Next solution range","Current number of the block.","Header number for which we are verifying the digests.","Proof of time information","Change of parameters to apply to PoT chain","Change of parameters to apply to PoT chain","Number of iterations for proof of time per slot, …","Number of iterations for proof of time per slot, …","Pre-runtime digest","Proof of time for this slot","Construct digest item that indicates update of root plot …","Root plot public key was updated","Construct a digest item which contains segment commitment.","Segment commitments","Flag to check if the next solution range should be …","Should the solution range be adjusted on era change. If …","Signature (seal) if present","","","Slot","Slot probability at which a block is produced.","Slot probability.","Solution (includes PoR)","Construct a digest item which contains a solution range.","Solution range","Construct a digest item which contains a Subspace …","Construct a digest item which contains a Subspace seal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derives and verifies next digest items based on their …","","","","","","","","Proof of time information","Slot","Solution (includes PoR)","Future proof of time","Proof of time for this slot","The Subspace inherent identifier.","List of segment headers is not correct.","Provides the segment headers inherent data for Subspace.","Errors that can occur while checking segment headers.","The type of the Subspace inherent data.","List of segment headers is not present.","Auxiliary trait to extract Subspace inherent data.","","","","","","","Returns the <code>data</code> of this inherent data provider.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create new inherent data provider from the given …","","Replace Subspace inherent data.","Segment headers expected to be included in the block.","","","Get Subspace inherent data.","","","","","","","","","","","","","","","","","","","","","","List of segment headers contained within proposed block.","Expected list of segment headers according to node’s …","The report has already been submitted.","Identifier which is unique for this kind of an offence.","The kind of an offence, is a byte string representing some …","A trait implemented by an offence report.","A details about an offending authority for a particular …","Errors that may happen on offence reports.","A trait to take action on an offence.","Other error has happened.","A trait for decoupling offence reporters from the actual …","A type that represents a point in time on an abstract …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true iff all of the given offenders have been …","The offending authority id","The list of all offenders involved in this incident.","A handler for an offence of a particular kind.","Report an <code>offence</code> and reward given <code>reporters</code>.","","A point in time when this offence happened.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,15,7,19,0,0,0,0,12,13,14,15,17,18,7,19,3,5,6,7,12,13,14,15,17,18,7,24,25,26,3,5,6,19,12,13,14,15,17,18,7,24,25,26,3,5,6,19,9,18,12,13,14,15,17,18,7,19,12,13,14,15,17,18,7,19,7,0,18,12,13,14,15,17,18,7,24,25,26,19,12,13,14,15,17,18,7,24,25,26,19,12,13,14,15,17,18,7,24,25,26,19,12,13,14,15,17,18,7,24,25,26,19,18,12,13,14,15,17,18,7,24,25,26,3,3,5,5,6,6,19,12,13,14,15,17,18,7,24,25,26,3,3,5,5,6,6,19,13,0,12,13,14,15,17,18,7,24,25,26,3,5,6,19,24,25,26,12,13,14,15,17,18,7,24,25,26,19,14,13,14,15,17,18,7,13,13,13,14,14,14,15,15,15,17,17,17,18,18,18,7,7,7,7,9,55,12,13,14,15,17,18,7,24,25,26,19,12,13,14,15,17,18,7,24,24,25,25,26,26,3,3,5,5,6,6,19,24,25,26,12,13,14,15,17,18,7,24,25,26,3,5,6,19,12,13,14,15,17,18,7,24,25,26,3,5,6,19,15,9,0,12,13,14,15,17,18,7,24,25,26,3,5,6,19,12,13,14,15,17,18,7,24,25,26,3,5,6,19,24,25,26,18,0,9,9,13,14,18,19,9,7,12,3,5,6,18,19,0,55,9,7,7,9,55,13,9,9,17,12,13,14,15,17,18,7,24,25,26,19,15,55,13,14,7,19,13,14,7,15,9,9,9,12,13,14,15,17,18,7,24,25,26,19,12,13,14,15,17,18,7,19,12,13,14,15,17,18,7,24,25,26,3,5,6,19,12,12,13,14,15,17,18,7,24,25,26,3,5,6,19,12,13,14,15,17,18,7,24,25,26,3,3,5,5,6,6,19,12,13,14,15,17,18,7,19,12,13,14,15,17,18,7,24,25,26,3,5,6,19,12,13,14,15,17,18,7,24,25,26,3,5,6,19,24,25,26,17,18,18,12,13,14,15,17,18,7,24,25,26,3,5,6,19,97,97,97,97,97,97,97,97,98,98,99,99,100,100,100,100,100,100,0,101,101,101,101,101,101,101,101,101,101,101,0,101,101,101,101,101,101,0,101,0,77,0,79,77,0,0,79,79,79,79,0,77,77,77,0,77,0,77,77,77,77,0,74,76,74,76,77,73,73,73,73,73,73,73,73,73,78,81,74,76,77,79,80,78,81,74,76,77,79,80,74,76,77,74,76,77,78,78,74,76,74,76,74,76,74,76,78,81,74,76,77,79,80,78,81,74,76,77,79,80,0,78,81,74,76,77,79,80,73,80,74,76,77,79,77,77,77,79,79,79,78,81,78,81,0,0,74,76,77,77,79,79,80,78,81,74,76,77,79,80,78,81,74,76,77,79,80,78,81,74,76,77,79,80,76,81,78,81,74,76,77,79,80,78,81,74,76,77,79,80,78,81,81,73,80,78,81,74,73,80,73,80,80,76,73,80,73,80,78,81,80,74,76,74,78,81,74,73,80,73,73,74,76,74,76,77,77,79,78,81,74,76,77,79,80,78,81,74,76,77,79,80,78,81,74,76,77,79,80,78,81,74,76,77,79,80,78,81,74,76,77,79,80,0,78,81,74,76,77,79,80,102,102,102,103,103,0,84,0,0,0,84,0,82,84,83,82,84,83,82,84,83,84,83,84,83,84,83,82,84,83,82,84,83,82,84,83,84,83,84,83,82,84,83,82,84,83,82,84,83,82,84,83,82,84,83,84,82,82,88,83,84,83,88,84,83,82,84,83,82,82,84,83,82,84,83,82,84,83,82,84,83,82,84,83,104,104,92,94,0,0,0,0,0,92,0,94,91,92,91,92,91,91,91,91,91,91,91,92,91,92,91,92,91,91,91,92,91,92,92,92,91,91,91,92,91,92,91,92,91,92,91,92,91,92,91,105,91,94,106,105,91,94,91,91,92,91,92,91,92,91,91,92,91,92,91,91,92,91],"f":"``````````````````````{{cb}d{}}0000000{fh}{jh}{lh}{nA`}{ce{}{}}000000000000000000000000000{Ab{{Af{nAd}}}}{{}c{}}{AhAh}{AjAj}{AlAl}{{{An{ceg}}}{{An{ceg}}}B`B`B`}{{{Bb{ceg}}}{{Bb{ceg}}}B`B`B`}{BdBd}{nn}{BfBf}{{ce}d{}{}}0000000{nBh}``{c{{Af{AhBj}}}Bl}{c{{Af{AjBj}}}Bl}{c{{Af{AlBj}}}Bl}{c{{Af{{An{egi}}Bj}}}BlBnBn{}}{c{{Af{{Bb{egi}}Bj}}}Bl{}{}{}}{c{{Af{BdBj}}}Bl}{c{{Af{nBj}}}Bl}{c{{Af{C`Bj}}}Bl}{c{{Af{CbBj}}}Bl}{c{{Af{CdBj}}}Bl}{c{{Af{BfBj}}}Bl}{{{Ch{Cf}}}{{Af{cBj}}}{}}0000000000{{Cj{Ch{Cf}}}{{Af{cBj}}}{}}0000000000{{Cjc}{{Af{eBj}}}Bl{}}0000000000{{}Bd}{Clc{}}0000000000{fc{}}{jc{}}22{lc{}}333333333332313303{{CnA`D`{Db{Al}}}Aj}`{Cld}0000000000000{C`{{Dd{Cf}}}}{Cb{{Dd{Cf}}}}{Cd{{Dd{Cf}}}}{{Ahc}d{DfDh}}{{Ajc}d{DfDh}}{{Alc}d{DfDh}}{{{An{ceg}}i}dDjDj{}{DfDh}}{{{Bb{ceg}}i}d{}{}{}{DfDh}}{{Bdc}d{DfDh}}{{nc}d{DfDh}}{{C`c}d{DfDh}}{{Cbc}d{DfDh}}{{Cdc}d{DfDh}}{{Bfc}d{DfDh}}`{{AjAj}Dl}{{AlAl}Dl}{{{An{ceg}}{An{ceg}}}DlDnDnDn}{{{Bb{ceg}}{Bb{ceg}}}DlDnDnDn}{{BdBd}Dl}{{nn}Dl}{{ce}Dl{}{}}00000000000000000{nBh}{Ab{{Af{{Db{{Dd{E`}}}}Ad}}}}`{{AhEb}Ed}{{AjEb}Ed}{{AlEb}Ed}{{{An{ceg}}Eb}EdEfEfEf}{{{Bb{ceg}}Eb}EdEfEfEf}{{BdEb}Ed}{{nEb}Ed}{{C`Eb}Ed}{{CbEb}Ed}{{CdEb}Ed}{{BfEb}Ed}{cc{}}0000000{{{Ej{Ehc}}}C`{}}1{ElCb}2{D`Cd}{Enf}44{F`j}{{{Fd{Fb}}}l}66{Ff{{Af{cFh}}}{}}00{ce{}{}}000000000000000000000000000{{{An{ceg}}}FjDjDjDj}{Ab{{Af{FlAd}}}}`{{}Cl}000000000000033333333333333{{cFf}{{Af{Fh}}}{}}00{cDl{}}{{{Fn{c}}}DlG`}{{AbEh}{{Af{DlAd}}}}{Ab{{Af{DlAd}}}}5555{Ab{{Af{GbAd}}}}{nFl}{AhDl}?{{}j}>`{Bf{{Db{Al}}}}``{Ab{{Af{BfAd}}}}{n{{Gd{FlFl}}}}5{Ab{{Af{{Db{Eh}}Ad}}}}``{{AbGf}{{Af{{Db{Gh}}Ad}}}}9`{AhCl}{AjCl}{AlCl}{{{An{ceg}}}ClDjDj{}}{{{Bb{ceg}}}Cl{}{}{}}{BdCl}{nCl}{C`Cl}{CbCl}{CdCl}{BfCl}{{{An{ceg}}}A`DjDjDj}```{nGj}{BfCn}``{n{{Gd{GlGl}}}}{{{An{ceg}}}{{Ej{Ehg}}}DjDjDj}{Ab{{Af{BdAd}}}}{{AbFn}{{Af{{Db{d}}Ad}}}}{{Ab{Bb{c}}}{{Af{dAd}}}{DjBn}}{{c{Ch{Cf}}}{{Dd{Cf}}}{}}0000000000{ce{}{}}0000000{c{{Af{e}}}{}{}}0000000000000{Gn{{Db{{Af{AhBj}}}}}}11111111111111{cH`{}}0000000000{fH`}{jH`}22{lH`}3{{}Hb}00000007777777777777777777777777777{{C`e}c{}{{Hf{{Ch{Cf}}}{{Hd{c}}}}}}{{Cbe}c{}{{Hf{{Ch{Cf}}}{{Hd{c}}}}}}{{Cde}c{}{{Hf{{Ch{Cf}}}{{Hd{c}}}}}}```::::::::::::::```````````````````::{Clc{}}0{Cld}{cc{}}=={{}{{Dd{Hh}}}}{{}Cl}?{{HjHlCdDl}Dl}{c{{Af{d}}}Hn}{c{{Af{e}}}{}{}}0?{ce{}{}}0{{C`HlCb}{{Af{I`Fh}}}}1`````````````````````````{{cb}d{}}00{Ib{{Db{{Db{I`}}}}}}{Ib{{Db{I`}}}}{Ib{{Db{Al}}}}{Ib{{Db{Cn}}}}{Ib{{Db{{Db{Eh}}}}}}{Ib{{Db{{Gd{GfGh}}}}}}4{Ib{{Db{{Id{Ehc}}}}}Bn}{Ib{{Db{If}}}}::::::::::::::{{{Id{ce}}}{{Id{ce}}}B`B`}{IhIh}{IjIj}{{ce}d{}{}}00``{c{{Af{{Id{eg}}Bj}}}Bl{}{}}{c{{Af{IhBj}}}Bl}{{{Ch{Cf}}}{{Af{cBj}}}{}}0{{Cj{Ch{Cf}}}{{Af{cBj}}}{}}0{{Cjc}{{Af{eBj}}}Bl{}}0{Clc{}}0000000000000{{{Il{c}}}{{Af{{Db{I`}}In}}}G`}{Cld}000000{{{Db{I`}}}Ib}`{{{Id{ce}}g}d{}{}{DfDh}}{{Ihc}d{DfDh}}{{IjIj}Dl}{{InIn}Dl}{{ce}Dl{}{}}00000````{c{{Af{{Id{EhEh}}In}}}G`}{c{{Af{{J`{egi}}In}}}G`BnBnBn}{{{Id{ce}}Eb}EdEfEf}{{IhEb}Ed}{{IjEb}Ed}0{{InEb}Ed}0{{{J`{ceg}}Eb}EdEfEfEf}{cc{}}000000{ce{}{}}0000000000000{IhD`}`{{}Cl}0000002222222```{I`Ib}```{{{Id{ce}}}Ih{}{}}{AlIb}`{CnIb}``5{{{Db{Eh}}}Ib}`{{GfGh}Ib}````{{{Id{ce}}}Cl{}{}}{IhCl}{{{Id{ce}}}A`{}{}}``{{{Id{ce}}}{{Ej{ce}}}{}{}}9`{{{Id{Ehc}}}IbDj}{IfIb}{{c{Ch{Cf}}}{{Dd{Cf}}}{}}0???{cFh{}}0{c{{Af{e}}}{}{}}0000000000000{cH`{}}000000{ce{}{}}0000000000000{{{Jb{c}}}{{Af{dIn}}}G`}1111111````````````111111{JdJf}{c{{Af{JhBj}}}Bl}{c{{Af{JfBj}}}Bl}{{{Ch{Cf}}}{{Af{cBj}}}{}}0{{Cj{Ch{Cf}}}{{Af{cBj}}}{}}0{{Cjc}{{Af{eBj}}}Bl{}}0{Clc{}}00000{Cld}00{{Jhc}d{DfDh}}{{Jfc}d{DfDh}}{{JhEb}Ed}{{JfEb}Ed}{cc{}}00>>>>>>{{}Cl}00???{JhDl}{{{Dd{E`}}}Jd}{{JdJj}{{Jn{{Fd{Jl}}}}}}{{K`Jf}d}`{JhCl}{JfCl}{K`{{Af{{Db{Jf}}Kb}}}}{{c{Ch{Cf}}}{{Dd{Cf}}}{}}0{c{{Af{e}}}{}{}}00{{JdKd{Ch{Cf}}}{{Jn{{Fd{Jl}}}}}}111{cH`{}}00{ce{}{}}00000000````````````{{cb}d{}}1111{{{Kf{c}}}{{Kf{c}}}B`}{{ce}d{}{}}{c{{Af{{Kf{e}}Bj}}}BlBn}{{{Ch{Cf}}}{{Af{cBj}}}{}}{{Cj{Ch{Cf}}}{{Af{cBj}}}{}}{{Cjc}{{Af{eBj}}}Bl{}}{Clc{}}000{Cld}0{{{Kf{c}}}{{Dd{Cf}}}Dj}{{{Kf{c}}e}dDj{DfDh}}{{KhKh}Dl}{{{Kf{c}}{Kf{c}}}DlDn}{{ce}Dl{}{}}00000{{KhEb}Ed}{{{Kf{c}}Eb}EdEf}{cc{}}0{ce{}{}}000{{}Cl}011{{{Ch{c}}}Dl{}}`{{{Kl{}{{Kj{c}}}}}{{Dd{e}}}{B`KnL`}{}}{{{Ch{{Kf{c}}}}}d{}}{e{{Af{dKh}}}{}{{Kl{c}}}}{{{Kf{c}}}ClDj}{{{Kl{}{{Kj{c}}}}}c{B`KnL`}}{{c{Ch{Cf}}}{{Dd{Cf}}}{}}8{c{{Af{e}}}{}{}}000{cH`{}}0{{}Hb};;;;{{{Kf{c}}g}eDj{}{{Hf{{Ch{Cf}}}{{Hd{e}}}}}}<<","c":[],"p":[[5,"Private",917],[1,"unit"],[5,"KzgExtension",0],[10,"Any",918],[5,"PosExtension",0],[5,"PotExtension",0],[6,"ChainConstants",0],[5,"Slot",919],[10,"SubspaceApi",0],[6,"ApiError",920],[6,"Result",921],[6,"SubspaceJustification",0],[5,"PotNextSlotInput",0],[5,"PotParametersChange",0],[6,"Vote",0],[10,"Clone",922],[5,"SignedVote",0],[5,"SolutionRanges",0],[6,"PotParameters",0],[8,"BlockNumber",923],[5,"Error",924],[10,"Input",925],[10,"Decode",925],[5,"WrappedSolution",0],[5,"WrappedVerifySolutionParams",0],[5,"WrappedPotOutput",0],[1,"u8"],[1,"slice"],[1,"u32"],[1,"usize"],[8,"NonZeroU32",926],[5,"PotOutput",923],[6,"Option",927],[5,"Vec",928],[10,"Output",925],[10,"Sized",929],[10,"Encode",925],[1,"bool"],[10,"PartialEq",930],[6,"SegmentHeader",923],[5,"Formatter",931],[8,"Result",931],[10,"Debug",931],[8,"FarmerPublicKey",0],[5,"Solution",923],[5,"VerifySolutionParams",932],[5,"Kzg",933],[6,"PosTableType",934],[10,"Fn",935],[5,"Box",936],[10,"FunctionContext",937],[5,"String",938],[5,"H256",939],[5,"HistorySize",940],[8,"EquivocationProof",0],[10,"Header",941],[1,"u16"],[1,"tuple"],[5,"SegmentIndex",940],[5,"SegmentCommitment",940],[5,"SlotDuration",919],[1,"u64"],[8,"Justification",942],[5,"TypeId",918],[5,"Type",943],[17,"Output"],[10,"FnOnce",935],[10,"Function",937],[8,"BlockHash",923],[8,"SlotNumber",923],[10,"HostFunctionRegistry",937],[8,"SolutionRange",923],[10,"CompatibleDigestItem",527],[6,"PreDigest",527],[8,"FarmerSignature",0],[6,"PreDigestPotInfo",527],[6,"ErrorDigestType",527],[5,"DeriveNextSolutionRangeParams",527],[6,"Error",527],[5,"SubspaceDigestItems",527],[5,"NextDigestsVerificationParams",527],[5,"InherentDataProvider",764],[5,"InherentType",764],[6,"InherentError",764],[5,"InherentData",944],[10,"Future",945],[5,"Pin",946],[10,"SubspaceInherentData",764],[6,"Error",944],[8,"InherentIdentifier",944],[5,"OffenceDetails",845],[6,"OffenceError",845],[17,"TimeSlot"],[10,"Offence",845],[10,"Codec",925],[10,"Ord",930],[15,"V0",488],[15,"V0",496],[15,"PotCheckpoints",498],[15,"V0",500],[5,"HostFunctions",506],[15,"V0",759],[15,"V0",762],[15,"IncorrectSegmentHeadersList",843],[10,"ReportOffence",845],[10,"OnOffenceHandler",845]],"b":[[636,"impl-Debug-for-ErrorDigestType"],[637,"impl-Display-for-ErrorDigestType"],[638,"impl-Debug-for-Error"],[639,"impl-Display-for-Error"]]}],\
["sp_domain_digests",{"doc":"","t":"KMM","n":["AsPredigest","as_consensus_block_info","consensus_block_info"],"q":[[0,"sp_domain_digests"],[3,"core::option"],[4,"parity_scale_codec::codec"],[5,"parity_scale_codec::codec"]],"d":["Trait to provide simpler abstractions to create predigests …","Return <code>consensus_block_hash</code>","Creates a new digest of the consensus block that derive …"],"i":[0,1,1],"f":"`{b{{d{c}}}f}{cbh}","c":[],"p":[[10,"AsPredigest",0],[6,"Option",3],[10,"Decode",4],[10,"Encode",4]],"b":[]}],\
["sp_domains",{"doc":"Primitives for domains pallet.","t":"PPPPFFFFKGGPIFPSPPFFFKGFFPPKPKKGKSIRPFIGIFPIIIPFPPPGPGPSGIIGIFIIIPPGFGIGFIPPGPFPPPSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNONONNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMOOOOONNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNHNOOOONOONMONONMONNMHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOOONNNNCOONOOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOOOOOONNNNNNCONNNNONMNNONONOOOONNNNNNOOCOONONMMOONOOOOOOHNNNNNNOHONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFGPNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNONNNNNNNNNNNNNNNNNNNNNNKNNNNNNNNNNNNNNNNNNNHHHFIIFNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNPPPFFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["Accounts","Anyone","Anyone","AutoId","BlockFees","Bundle","BundleDigest","BundleHeader","BundleProducerElectionApi","BundleValidity","ChainId","Channel","ChannelId","ConfirmedDomainBlock","Consensus","DOMAIN_EXTRINSICS_SHUFFLING_SEED_SUBJECT","Data","Domain","DomainAllowlistUpdates","DomainBlockLimit","DomainBundleLimit","DomainBundleSubmitted","DomainDigestItem","DomainId","DomainInstanceData","DomainInstantiated","DomainInstantiation","DomainOwner","DomainRuntimeUpgraded","DomainsApi","DomainsDigestItem","DomainsHoldIdentifier","DomainsTransfersTracker","EMPTY_EXTRINSIC_ROOT","EpochIndex","Error","Evm","ExecutionReceipt","ExecutionReceiptFor","ExtrinsicDigest","ExtrinsicsRoot","GenesisDomain","Hash","HeaderHashFor","HeaderHashingFor","HeaderNumberFor","IllegalTx","InboxedBundle","InherentExtrinsic","Invalid","Invalid","InvalidBundleType","InvalidBundles","InvalidReceipt","InvalidXDM","KEY_TYPE","MessengerHoldIdentifier","OpaqueBundle","OpaqueBundles","OperatorAllowList","OperatorId","OperatorKey","OperatorPair","OperatorPublicKey","OperatorSignature","Operators","OutOfRangeTx","PermissionedActionAllowedBy","ProofOfElection","ReceiptValidity","RuntimeId","RuntimeType","SealedBundleHeader","StakeWeight","Staked","Staking","StakingHoldIdentifier","StorageFund","Transfers","UndecodableTx","Valid","Valid","ZERO_OPERATOR_SIGNING_KEY","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","allow_chains","as_domain_instantiation","as_domain_runtime_upgrade","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_fees","block_fees","block_hash","block_number","body_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle","bundle_extrinsics_root","bundle_producer_election","bundle_producer_election_params","bundle_slot_probability","bundles_extrinsics_roots","burned_balance","checked_add","checking_order","claim_rejected_transfer","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","confirm_transfer","consensus_block_hash","consensus_block_hash","consensus_block_hash","consensus_block_number","consensus_block_number","consensus_chain_byte_fee","consensus_chain_id","consensus_storage_fee","core_api","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derive_domain_block_hash","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","domain_account_storage_key","domain_best_number","domain_block_extrinsic_root","domain_block_extrinsic_root","domain_block_hash","domain_block_hash","domain_block_limit","domain_block_number","domain_block_number","domain_bundle_limit","domain_bundle_submitted","domain_execution_fee","domain_id","domain_id","domain_instance_data","domain_instantiation","domain_name","domain_operators","domain_runtime_code","domain_runtime_upgrade","domain_total_issuance_storage_key","domain_tx_range","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dummy","dummy","dummy_opaque_bundle","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimated_bundle_weight","estimated_weight","execution_receipt","execution_trace","execution_trace","execution_trace_root","execution_trace_root","extract_bundle","extract_receipts","extract_successful_bundles","extrinsic_index","extrinsics","extrinsics","extrinsics","extrinsics_root","extrinsics_root","extrinsics_root","extrinsics_root","extrinsics_shuffling_seed","final_state_root","final_state_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","genesis","genesis_state_root","get_hash","get_hash","hash","hash","hash","hash","hash","hash","head_receipt_number","header","header_hash","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inboxed_bundles","inboxed_bundles","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_balances","initialize_domain_balance","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_ffi_value","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_opaque_bundle","into_receipt","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","invalid","is_allowed","is_bad_er_pending_to_prune","is_clear","is_clear","is_clear","is_clear","is_consensus_chain","is_domain_owner","is_invalid","is_operator_allowed","is_valid","latest_confirmed_domain_block","max_block_size","max_block_size","max_block_weight","max_block_weight","max_bundle_size","max_bundle_weight","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","maybe_domain_chain","merkle_tree","minimum_nominator_stake","new","new","new","new","nomination_tax","non_empty_er_exists","note_transfer","oldest_unconfirmed_receipt_number","operator","operator_allow_list","operator_id","operator_id","operator_id_by_signing_key","owner_account_id","parent_block_receipt_hash","parent_domain_block_receipt_hash","parent_domain_block_receipt_hash","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pre_hash","proof_of_election","proof_of_time","proof_provider_and_verifier","raw_genesis","raw_genesis_storage","receipt","receipt","receipt_hash","reduce_domain_balance","reject_transfer","rejected_transfers_claimed","remove_chains","runtime_id","runtime_name","runtime_type","runtime_type","runtime_version","sealed_header","sealed_header","self_domain_id_storage_key","serialize","serialize","serialize","serialize","serialize","serialize","signature","signer_in_tx_range","signing_key","size","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_number","slot_number","state_root","storage","storage_fund_account_balance","sub","submit_bundle_unsigned","target_bundles_per_block","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_le_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total_fees","transfers","transfers","transfers_in","transfers_out","transfers_rejected","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","valid","valid_bundle_digest_at","valid_bundle_digests","valid_bundle_indexes","valued_trie","verify_vrf_signature","vrf_hash","vrf_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadVrfProof","BundleProducerElectionParams","ProofOfElectionError","ThresholdUnsatisfied","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","bundle_slot_probability","calculate_threshold","check_proof_of_election","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","is_below_threshold","make_transcript","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","total_domain_stake","try_from","try_from","try_into","try_into","try_into_key","try_into_key","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","DomainCoreApi","apply_extrinsic_with_post_state_root","block_digest","block_fees","block_weight","check_extrinsics_and_do_pre_dispatch","construct_consensus_chain_byte_fee_extrinsic","construct_domain_update_chain_allowlist_extrinsic","construct_set_code_extrinsic","construct_timestamp_extrinsic","decode_extrinsic","extract_signer","extrinsic_era","extrinsic_weight","initialize_block_with_post_state_root","intermediate_roots","is_inherent_extrinsic","is_within_tx_range","transfers","transfers_storage_key","deduplicate_and_shuffle_extrinsics","extrinsics_shuffling_seed","shuffle_extrinsics","Blake2b256Algorithm","MerkleProof","MerkleTree","Witness","__clone_box","__clone_box","authorities_merkle_tree","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","hash","identity","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","is_clear","leaf_index","number_of_leaves","proof","size_hint","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_key","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","FailedToDecode","InvalidProof","MissingValue","StorageProofProvider","StorageProofVerifier","UnusedNodesInTheProof","VerificationError","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","enumerated_storage_key","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","generate_enumerated_proof_of_inclusion","get_bare_value","get_decoded_value","identity","init","init","init","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","size_hint","to_keyed_vec","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","RawGenesis","StorageData","StorageKey","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dummy","encode","encode","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_storage","get_hash","get_hash","get_hash","get_runtime_code","hash","hash","hash","identity","identity","identity","init","init","init","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_storage","is_clear","is_clear","is_clear","partial_cmp","partial_cmp","partial_cmp","set_domain_id","set_evm_chain_id","set_top_storages","size_hint","size_hint","size_hint","state_root","take_runtime_code","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","valued_ordered_trie_root"],"q":[[0,"sp_domains"],[1675,"sp_domains::bundle_producer_election"],[1777,"sp_domains::core_api"],[1797,"sp_domains::extrinsics"],[1800,"sp_domains::merkle_tree"],[1885,"sp_domains::proof_provider_and_verifier"],[1982,"sp_domains::storage"],[2169,"sp_domains::valued_trie"],[2170,"dyn_clone::sealed"],[2171,"core::option"],[2172,"alloc::vec"],[2173,"parity_scale_codec::codec"],[2174,"sp_runtime::traits"],[2175,"sp_api"],[2176,"core::result"],[2177,"parity_scale_codec::codec"],[2178,"parity_scale_codec::codec"],[2179,"core::cmp"],[2180,"parity_scale_codec::error"],[2181,"parity_scale_codec::codec"],[2182,"sp_runtime::generic::digest"],[2183,"serde::de"],[2184,"serde::de"],[2185,"subspace_core_primitives"],[2186,"num_traits::identities"],[2187,"parity_scale_codec::codec"],[2188,"core::cmp"],[2189,"subspace_core_primitives"],[2190,"core::fmt"],[2191,"alloc::string"],[2192,"primitive_types"],[2193,"core::hash"],[2194,"core::hash"],[2195,"serde::ser"],[2196,"serde::ser"],[2197,"scale_info::ty"],[2198,"core::ops::function"],[2199,"core::marker"],[2200,"sp_core::sr25519::vrf"],[2201,"domain_runtime_primitives"],[2202,"domain_runtime_primitives"],[2203,"sp_runtime::generic::era"],[2204,"alloc::collections::vec_deque"],[2205,"sp_storage"],[2206,"sp_trie::storage_proof"],[2207,"sp_storage"]],"d":["","Anyone can operate for this domain.","","","","Domain bundle.","A digest of the bundle","","","","Identifier of a chain.","Holds the current reserved balance for channel opening","Channel identity.","Type holding the block details of confirmed domain block.","","Extrinsics shuffling seed","Actual extrinsic data that is inlined since it is less …","","Domain chains allowlist updates.","","","Post hook to know if the domain had bundle submitted in …","Domains specific digest item.","Unique identifier of a domain.","<code>DomainInstanceData</code> is used to construct the genesis …","","","Trait to check domain owner.","","API necessary for domains pallet.","Domains specific digest items.","Domains specific Identifier for Balances holds.","Trait that tracks the balances on Domains.","Empty extrinsics root.","Type representing domain epoch.","","","Receipt of a domain block execution.","","Represents the extrinsic either as full data or hash of …","The Trie root of all extrinsics included in a bundle.","","Extrinsic Hash.","Type alias for Header hash.","Type alias for Header Hashing.","Type alias for Header number.","Transaction is illegal (unable to pay the fee, etc).","<code>InboxedBundle</code> represents a bundle that was successfully …","Transaction is an inherent extrinsic.","","","Bundle invalidity type","The field <code>invalid_bundles</code> in <code>ExecutionReceipt</code> is invalid.","Receipt invalidity type.","Transaction is an invalid XDM","Key type for Operator.","Messenger specific hold identifier","Bundle with opaque extrinsics.","List of <code>OpaqueBundle</code>.","Type that represents an operator allow list for Domains.","Type representing operator ID","A type that implements <code>BoundToRuntimeAppPublic</code>, used for …","An operator authority keypair. Necessarily equivalent to …","An operator authority identifier.","An operator authority signature.","Only the specific operators are allowed to operate the …","Transaction is out of the tx range.","Permissioned actions allowed by either specific accounts …","","","Type representing the runtime ID.","Types of runtime pallet domains currently supports","Header of bundle.","Stake weight in the domain bundle election.","Holds all the currently staked funds to an Operator.","","Staking specific hold identifier","","Type that holds the transfers(in/out) for a given chain.","Failed to decode the opaque extrinsic.","","","Zero operator signing key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chains that are allowed to open channel with this chain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute and Domain storage fees are shared across …","Compute and Domain storage fees are shared across …","Block hash of the confirmed domain block.","Block number of the confirmed domain block.","Return the bundle body size in bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Merkle root of all new extrinsics included in this …","","","","","Burned balances on domain chain","","","Claims a rejected transfer between chains.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirms a transfer between chains.","The block hash corresponding to <code>consensus_block_number</code>.","The block hash corresponding to <code>consensus_block_number</code>.","Consensus block hash at which proof of election was …","A pointer to the consensus block index which contains all …","A pointer to the consensus block index which contains all …","Return the consensus chain byte fee that will used to …","","The consensus chain storage feeccount info on frame_system on Domains","Returns the current best number of the domain.","Extrinsic root field of the header of domain block …","Extrinsic root field of the header of domain block …","The block hash corresponding to <code>domain_block_number</code>.","The block hash corresponding to <code>domain_block_number</code>.","Returns the domain block limit of the given domain.","The index of the current domain block that forms the basis …","The index of the current domain block that forms the basis …","Returns the domain bundle limit of the given domain.","Called in the next block initialisation if there was a …","The domain execution fee including the storage and compute …","Returns the domain_id of this bundle.","Domain id.","Returns the domain instance data for given <code>domain_id</code>.","","","Returns the current epoch and the next epoch operators of …","Returns the WASM bundle for given <code>domain_id</code>.","","Total issuance storage for Domains.","Returns the current Tx range for the given domain Idhe total (estimated) weight of all extrinsics in the …","","Returns the execution receipt","List of storage roots collected during the domain block …","List of storage roots collected during the domain block …","The Merkle root of the execution trace for the current …","The Merkle root of the execution trace for the current …","Extract bundle from the extrinsic if the extrinsic is …","Extract the execution receipt stored successfully from the …","Extract the bundles stored successfully from the given …","","","The accompanying extrinsics.","The accompanying extrinsics.","Return the <code>bundle_extrinsics_root</code>","The Merkle root of all new extrinsics included in this …","Extrinsic root of the domain block.","","Generates a randomness seed for extrinsics shuffling.","The final state root for the current domain block …","The final state root for the current domain block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Return the genesis state root if not pruned","","","","","Returns the hash of this header.","Returns the hash of this header.","Returns the hash of this bundle.","Returns the hash of this execution receipt.","Returns the best execution chain number.","Unsealed header.","The hash of the bundle header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the bundles that being included in the consensus block.","All the bundles that being included in the consensus block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes the domain balance","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a bundle with generic extrinsic to a bundle with …","Consumes <code>Bundle</code> to extract the execution receipt.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return if the receipt is exist and pending to prune","","","","","","Returns true if the account is the domain owner.","","Returns true if the allow list is either <code>Anyone</code> or the …","","Returns the latest confirmed domain block number and hash","","The max block size for the domain.","","The max block weight for the domain.","The max bundle size for the domain.","The max bundle weight for the domain.","","","","","","","","","Creates a <code>DomainId</code>.","","Constructs a new instance of <code>SealedBundleHeader</code>.","","","Returns true if there are any ERs in the challenge period …","Notes a transfer between chains. Balance on from_chain_id …","Returns the block number of oldest unconfirmed execution …","","","Return the <code>operator_id</code>","Operator index in the OperatorRegistry.","Get operator id by signing key","","Parent block hash of the confirmed domain block.","The hash of the ER for the last domain block.","The hash of the ER for the last domain block.","","","","","","Returns the hash of the inner unsealed header.","Proof of bundle producer election.","The PoT output for <code>slot_number</code>.","","","","Return a reference of the execution receipt.","Execution receipt that should extend the receipt chain or …","Returns the execution receipt hash of the given domain and …","Reduces a given amount from the domain balance","Rejects a initiated transfer between chains.","Total transfers from this domain that were reverted.","Chains that are not allowed to open channel with this …","Returns the runtime id for given <code>domain_id</code>.","","","","","Sealed bundle header.","Sealed bundle header.","The storage key of the <code>SelfDomainId</code> storage item in the …","","","","","","","Signature of the bundle.","Checks if the signer Id hash is within the tx range","","Return the bundle size (include header and body) in bytes","The size of the bundle body in bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The slot number.","State root of the domain block.","","Return the balance of the storage fund account","","Submits the transaction bundle via an unsigned extrinsic.","","Returns the current timestamp at given height.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the inner integer to little-endian bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total fees that was collected and burned on …","List of transfers from this Domain to other chains","List of transfers from this Domain to other chains","Total transfers that came into the domain.","Total transfers that went out of the domain.","Total transfers to this domain that were rejectedomputes the VRF hash.","VRF signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invalid vrf proof.","","","Threshold unsatisfied error.","","","","","","","","","","","","","","Returns the election threshold based on the operator stake …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Generates a domain-specific vrf transcript from given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Base API that every domain runtime must implement.","Returns the storage root after applying the extrinsic.","Returns the block digest.","The accumulated transaction fee of all transactions …","Returns the consumed weight of the block.","Checks the validity of array of extrinsics + pre_dispatch …","Returns an encoded extrinsic to set domain transaction …","Returns an extrinsic to update chain allowlist.","Returns an encoded extrinsic aiming to upgrade the runtime …","Returns an encoded extrinsic to set timestamp.","Decodes the domain specific extrinsic from the opaque …","Extracts the optional signer per extrinsic.","Returns extrinsic Era if present.","Returns the extrinsic weight.","Returns the storage root after initializing the block.","Returns the intermediate storage roots in an encoded form.","Returns true if the extrinsic is an inherent extrinsic.","","Returns the transfers for this domain in the block.","Returns the storage key for the Transfers on Domain.","","","Shuffles the extrinsics in a deterministic way.","","Merkle proof using <code>Blake2b256Algorithm</code>.","Merkle tree using <code>Blake2b256Algorithm</code>.","Merke proof based Witness.","","","Constructs a merkle tree from given authorities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Index of the leaf the proof is for.","Number of leaves in the original tree.","Merkle proof in bytes.","","","","","","","","","","","","","","","","","","","","","","","Failed to decode value.","Emits when the given storage proof is invalid.","Value doesn’t exist in the Db for the given key.","Type that provides utilities to generate the storage proof.","Type that provides utilities to verify the storage proof.","Storage proof contains unused nodes after reading the …","Verification error.","","","","","","","","","","","","","","","","","","","","","","","","Constructs the storage key from a given enumerated index.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Generate storage proof for given index from the trie …","Returns the value against a given key. Note: Storage proof …","Extracts the value against a given key and returns a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raw storage content for genesis block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Construct <code>RawGenesis</code> from a given storage NOTE: This …","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Convert <code>RawGenesis</code> to storage, the opposite of <code>from_storage</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a modified version of trie root that takes trie …"],"i":[33,31,33,35,0,0,0,0,0,0,0,37,0,0,21,0,47,21,0,0,0,0,0,0,0,39,38,0,39,0,0,0,0,0,0,127,35,0,0,0,0,0,47,0,0,0,20,0,20,44,45,0,43,0,20,0,0,0,0,0,0,0,0,0,0,31,20,0,0,0,0,0,0,0,36,38,0,38,0,20,44,45,0,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,48,4,4,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,76,19,29,29,10,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,46,25,0,14,34,19,22,3,20,127,3,22,24,35,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,36,37,38,127,76,19,28,76,19,50,21,22,0,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,22,24,35,48,3,21,36,37,38,3,21,36,37,38,3,21,36,37,38,3,21,36,37,38,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,0,3,21,31,33,34,35,0,50,76,19,76,19,50,76,19,50,129,22,10,28,50,4,34,50,50,4,0,50,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,19,28,46,0,3,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,43,44,20,45,46,47,48,3,3,3,21,21,21,22,22,22,24,24,24,25,25,25,26,26,26,10,10,10,27,27,27,19,19,19,28,28,28,29,29,29,31,31,31,34,34,34,35,35,35,36,36,36,37,37,37,38,38,38,39,39,39,40,40,40,43,43,43,44,44,44,20,20,20,45,45,45,46,46,46,47,47,47,25,10,50,76,19,76,19,50,50,50,20,0,70,10,10,27,29,46,50,76,19,3,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,40,41,42,43,44,20,45,46,47,48,128,3,3,21,21,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,128,128,3,3,21,21,22,22,24,24,25,25,26,26,10,10,27,27,19,19,28,28,29,29,31,31,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,20,20,45,45,46,46,47,47,48,48,128,128,3,3,21,21,22,22,24,24,25,25,26,26,10,10,27,27,19,19,28,28,29,29,31,31,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,20,20,45,45,46,46,47,47,48,48,3,19,50,3,21,3,21,25,26,10,19,50,26,27,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,76,19,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,34,127,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,10,10,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,46,33,50,3,22,24,35,21,130,46,31,24,50,34,41,34,41,42,42,3,21,36,37,38,21,0,34,3,22,26,47,34,50,127,50,14,34,10,28,50,34,29,76,19,3,21,36,37,38,26,25,28,0,40,34,10,25,50,127,127,24,48,50,34,34,40,34,70,10,0,3,21,31,33,34,35,26,0,34,10,27,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,26,28,29,0,50,3,50,34,50,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,22,76,19,24,24,24,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,3,46,19,19,19,0,28,28,28,128,3,21,22,24,25,26,10,27,19,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,20,45,46,47,48,101,0,0,101,15,101,15,101,15,101,15,101,15,101,15,101,15,0,0,15,101,15,101,15,101,15,101,15,101,15,101,15,101,15,101,15,101,15,101,15,101,15,15,15,101,101,101,15,101,15,101,15,15,101,101,15,15,101,101,15,101,15,101,15,101,15,101,15,101,15,101,0,0,15,101,15,101,15,101,15,15,101,15,101,15,101,15,101,15,101,15,101,15,101,15,101,15,101,15,101,15,101,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,0,0,0,0,0,0,116,117,0,116,116,116,116,117,116,117,116,116,117,116,117,116,116,116,116,116,117,116,117,116,117,116,117,116,116,116,116,116,116,116,117,116,116,117,117,116,116,117,117,117,116,116,117,116,117,116,117,116,117,116,117,116,116,116,116,116,116,116,117,116,117,116,117,116,117,116,116,116,116,117,116,116,117,116,117,116,117,118,118,118,0,0,118,0,118,118,118,131,132,118,131,132,118,118,118,118,118,131,132,118,131,132,118,131,132,118,118,131,118,118,118,118,118,131,132,118,131,131,132,132,118,118,131,131,132,132,118,118,132,131,131,118,131,132,118,131,132,118,131,132,118,131,132,118,131,132,118,118,118,131,132,118,131,132,118,131,132,118,118,118,118,131,132,118,118,131,132,118,131,132,118,131,132,118,0,0,0,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,122,60,121,60,121,122,60,121,122,60,60,60,121,121,121,122,122,122,60,121,122,60,121,122,60,60,121,121,122,122,60,60,121,121,122,122,122,60,121,122,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,122,60,121,122,60,121,122,122,122,122,60,121,122,122,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,122,60,121,60,121,122,0],"f":"```````````````````````````````````````````````````````````````````````````````````{{cb}d{}}0000000000000000000000000000{{ff}f}`{h{{j{f}}}}{h{{j{l}}}}{c{{A`{n}}}{}}0000000000000000000000000000{c{{Ab{n}}}{}}000000000000000000000000000011111111111111111111111111111````{{{Ad{cegik}}}AfAhAhAhAjAh}{ce{}{}}00000000000000000000000000000000000000000000000000000000000```{{Alf}{{Bb{{j{{An{c}}}}B`}}}{AhBd}}`{{{Bf{cegik}}}{{Ab{i}}}{}{}{}{}{}}`{{ff}{{j{f}}}}{Bhn}{{BjBjc}{{Bb{de}}}{}{}}{{}c{}}000{ff}{BjBj}{{{Bl{c}}}{{Bl{c}}}Bn}{{{C`{c}}}{{C`{c}}}Bn}{{{Cb{cegi}}}{{Cb{cegi}}}BnBn{BnAj}Bn}{{{Cd{cegi}}}{{Cd{cegi}}}BnBn{BnAj}Bn}{{{Ad{cegik}}}{{Ad{cegik}}}BnBnBn{BnAj}Bn}{{{Cf{c}}}{{Cf{c}}}Bn}{{{Bf{cegik}}}{{Bf{cegik}}}BnBnBnBnBn}{{{Ch{c}}}{{Ch{c}}}Bn}{{{Cj{ce}}}{{Cj{ce}}}{BnCl}{BnCl}}{{{Cn{c}}}{{Cn{c}}}{BnD`}}{{{Db{c}}}{{Db{c}}}{BnClBn}}{{{Dd{ce}}}{{Dd{ce}}}{BnD`}Bn}{DfDf}{DhDh}{DjDj}{DlDl}{DnDn}{E`E`}{EbEb}{EdEd}{EfEf}{EhEh}{BhBh}{{{Ej{c}}}{{Ej{c}}}Bn}{{{El{c}}}{{El{c}}}Bn}{EnEn}{F`F`}{{ce}d{}{}}0000000000000000000000000000{{ff}Fb}{{BjBj}Fb}{{DhDh}Fb}{{DjDj}Fb}{{DlDl}Fb}{{BjBjc}{{Bb{de}}}{}{}}`````{Fd{{Bb{FfB`}}}}{{}Bj}``{c{{Bb{fFh}}}Fj}{c{{Bb{BjFh}}}Fj}{c{{Bb{{Bl{e}}Fh}}}FjBd}{c{{Bb{{C`{e}}Fh}}}Fj{}}{c{{Bb{{Cb{egik}}Fh}}}Fj{}{}Aj{}}{c{{Bb{{Cd{egik}}Fh}}}Fj{}{}Aj{}}{c{{Bb{{Ad{egikm}}Fh}}}Fj{}{}{}Aj{}}{c{{Bb{{Cf{e}}Fh}}}FjBd}{c{{Bb{{Bf{egikm}}Fh}}}FjBdBdBdBd{}}{c{{Bb{{Ch{e}}Fh}}}FjBd}{c{{Bb{{Cj{eg}}Fh}}}Fj{BdCl}{BdCl}}{c{{Bb{{Cn{e}}Fh}}}FjD`}{c{{Bb{{Db{e}}Fh}}}Fj{ClBn}}{c{{Bb{{Dd{eg}}Fh}}}Fj{BdD`}Bd}{c{{Bb{DfFh}}}Fj}{c{{Bb{DhFh}}}Fj}{c{{Bb{DjFh}}}Fj}{c{{Bb{DlFh}}}Fj}{c{{Bb{DnFh}}}Fj}{c{{Bb{E`Fh}}}Fj}{c{{Bb{EbFh}}}Fj}{c{{Bb{EdFh}}}Fj}{c{{Bb{EfFh}}}Fj}{c{{Bb{EhFh}}}Fj}{c{{Bb{BhFh}}}Fj}{c{{Bb{{Ej{e}}Fh}}}FjBd}{c{{Bb{{El{e}}Fh}}}FjBd}{c{{Bb{EnFh}}}Fj}{c{{Bb{F`Fh}}}Fj}{{{Fl{n}}}{{Bb{cFh}}}{}}0000000000000000000000000000{{Af{Fl{n}}}{{Bb{cFh}}}{}}0000000000000000000000000000{{Afc}{{Bb{eFh}}}Fj{}}0000000000000000000000000000{{}f}{{}{{Bl{c}}}Fn}{{}{{C`{c}}}Fn}{{}Df}{{}F`}{{ce}e{}{}}0000000000000000000{G`c{}}00000000000000000000000000000000000000000000000000000000000{Gb}{c{{Bb{f}}}Gd}{c{{Bb{Bj}}}Gd}{c{{Bb{{Cn{e}}}}}Gd{GfD`}}{c{{Bb{{Db{e}}}}}Gd{GfClBn}}{c{{Bb{{Dd{eg}}}}}Gd{GfD`}Gf}{c{{Bb{Df}}}Gd}{cGhAh}{{Fdf}{{Bb{{j{{Gj{c}}}}B`}}}Aj}````{{Fdf}{{Bb{{j{Eb}}B`}}}}``{{Fdf}{{Bb{{j{Ed}}B`}}}}{fd}`{{{Ad{cegik}}}fAhAhAhAjAh}`{{Fdf}{{Bb{{j{{Gn{E`{Gl{c}}}}}}B`}}}H`}{fh}`{{Fdf}{{Bb{{j{{Gn{{Hd{HbFf}}{Ab{Hb}}}}}}B`}}}}{{Fdf}{{Bb{{j{{Ab{n}}}}B`}}}}{lh}{{}Gh}{{Fdf}{{Bb{HfB`}}}}{G`d}00000000000000000000000000000{{cegi}{{Bf{cegik}}}{AhHh}{AhFn}{AhHh}{BnAhFn}{AhHhFn}}{{fHb}{{Ch{c}}}Fn}{c{{El{c}}}Fn}{{fHb{Bf{ce{Gj{g}}{Hj{g}}i}}}{{Hl{cegi}}}Ah{FnAh}AjAh}{f{{Ab{n}}}}{{fc}d{HnI`}}{{Bjc}d{HnI`}}{{{Bl{c}}e}dAh{HnI`}}{{{C`{c}}e}d{}{HnI`}}{{{Cb{cegi}}k}d{}{}Aj{}{HnI`}}{{{Cd{cegi}}k}d{}{}Aj{}{HnI`}}{{{Ad{cegik}}m}d{}{}{}Aj{}{HnI`}}{{{Cf{c}}e}dAh{HnI`}}{{{Bf{cegik}}m}dAhAhAhAh{}{HnI`}}{{{Ch{c}}e}dAh{HnI`}}{{{Cj{ce}}g}d{AhCl}{AhCl}{HnI`}}{{{Cn{c}}e}dD`{HnI`}}{{{Db{c}}e}d{ClBn}{HnI`}}{{{Dd{ce}}g}d{AhD`}Ah{HnI`}}{{Dfc}d{HnI`}}{{Dhc}d{HnI`}}{{Djc}d{HnI`}}{{Dlc}d{HnI`}}{{Dnc}d{HnI`}}{{E`c}d{HnI`}}{{Ebc}d{HnI`}}{{Edc}d{HnI`}}{{Efc}d{HnI`}}{{Ehc}d{HnI`}}{{Bhc}d{HnI`}}{{{Ej{c}}e}dAh{HnI`}}{{{El{c}}e}dAh{HnI`}}{{Enc}d{HnI`}}{{F`c}d{HnI`}}{{ff}Ib}{{BjBj}Ib}{{{Bl{c}}{Bl{c}}}IbId}{{{C`{c}}{C`{c}}}IbId}{{{Cb{cegi}}{Cb{cegi}}}IbIdId{IdAj}Id}{{{Cd{cegi}}{Cd{cegi}}}IbIdId{IdAj}Id}{{{Ad{cegik}}{Ad{cegik}}}IbIdIdId{IdAj}Id}{{{Cf{c}}{Cf{c}}}IbId}{{{Bf{cegik}}{Bf{cegik}}}IbIdIdIdIdId}{{{Ch{c}}{Ch{c}}}IbId}{{{Cj{ce}}{Cj{ce}}}Ib{IdCl}{IdCl}}{{{Cn{c}}{Cn{c}}}Ib{IdD`}}{{{Db{c}}{Db{c}}}Ib{IdClBn}}{{{Dd{ce}}{Dd{ce}}}Ib{IdD`}Id}{{DfDf}Ib}{{DhDh}Ib}{{DjDj}Ib}{{DlDl}Ib}{{DnDn}Ib}{{E`E`}Ib}{{EfEf}Ib}{{EhEh}Ib}{{BhBh}Ib}{{{Ej{c}}{Ej{c}}}IbId}{{{El{c}}{El{c}}}IbId}{{EnEn}Ib}{{F`F`}Ib}{{ce}Ib{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000`{{{Ad{cegik}}}IfAhAhAhAjAh}{{Fd{Hj{c}}}{{Bb{{j{{Ih{ceFf}}}}B`}}}AjH`}````{Fd{{Bb{{j{{Hl{{Gl{c}}eFf}}}}B`}}}H`Aj}{{FdfAb}{{Bb{{Ab{{Ih{ceFf}}}}B`}}}AjH`}{{FdfAb}{{Bb{{Ij{ceFf}}B`}}}H`Aj}{BhAf}```{{{Ad{cegik}}}{{Hj{i}}}AhAhAhAjAh}```{Fd{{Bb{IlB`}}}}``{{fIn}J`}0{{BjIn}J`}{{{Bl{c}}In}J`Jb}{{{C`{c}}In}J`Jb}{{{Cb{cegi}}In}J`JbJb{JbAj}Jb}{{{Cd{cegi}}In}J`JbJb{JbAj}Jb}{{{Ad{cegik}}In}J`JbJbJb{JbAj}Jb}{{{Cf{c}}In}J`Jb}{{{Bf{cegik}}In}J`JbJbJbJbJb}{{{Ch{c}}In}J`Jb}{{{Cj{ce}}In}J`{JbCl}{JbCl}}{{{Cn{c}}In}J`{JbD`}}{{{Db{c}}In}J`{JbClBn}}{{{Dd{ce}}In}J`{JbD`}Jb}{{DfIn}J`}{{DhIn}J`}{{DjIn}J`}{{DlIn}J`}{{E`In}J`}{{EbIn}J`}{{EdIn}J`}{{EfIn}J`}{{EhIn}J`}{{BhIn}J`}{{{Ej{c}}In}J`Jb}{{{El{c}}In}J`Jb}{{EnIn}J`}{{F`In}J`}{cc{}}0{Aff}{AfBj}2{fBj}333333333333333333333333333{Jd{{Bb{cJf}}}{}}4{ce{}{}}0505505005055005050550055005500505055050500505050550500505050550505005505005505005500550055050050550500505500505505005{Jh{{Bb{fc}}}{}}{{ccc}{{Bf{egick}}}{BnAhFn}{AhHh}{AhFn}{AhHh}{AhHhFn}}{{Fdf}{{Bb{{j{Jj}}B`}}}}{{ce}Jl{JnI`}K`}0{{fc}dKb}{{Bjc}dKb}{{{Cb{cegi}}}{{Hj{g}}}AhAhAjAh}{{{Cd{cegi}}}{{Hj{g}}}AhAhAjAh}{{{Ad{cegik}}}JjAhAhAhAjAh}{{{Bf{cegik}}}i{AhHh}{AhFn}{AhHh}{BnAhFn}{AhHhFn}}{{Fdf}{{Bb{{Gj{c}}B`}}}Aj}``{c{{Ab{n}}}{}}0000000000000000000000000000``{{}G`}00000000000000000000000000000`{{fc}{{Bb{de}}}{}{}}>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>{{cJd}{{Bb{Jf}}}{}}????????????????????????????????????????????????????????????{{{Ad{cegik}}}{{Hl{egik}}}Ah{}{}Aj{}}{{{Ad{cegik}}}{{Bf{eg{Gj{i}}{Hj{i}}k}}}AhAhAhAjAh}{ce{}{}}00000000000000000000000000000{{Bhc}{{El{c}}}{}}{{{Db{c}}c}Ib{ClIdBn}}{{Fdf{Hj{c}}}{{Bb{IbB`}}}Aj}{cIb{}}000{BjIb}{{fc}Ib{}}{{{El{c}}}Ib{}}{{{Cn{c}}c}IbD`}{{{C`{c}}Bj}Ib{}}{{Fdf}{{Bb{{j{{Gn{{Gj{c}}{Hj{c}}}}}}B`}}}Aj}``````?????{Bj{{j{f}}}}``{Aff}{{ccc}{{Bl{c}}}Kd}{{{Cb{cegi}}Kf}{{Cd{cegi}}}AhAhAjAh}{{{Ab{n}}}En}`{{Fdf}{{Bb{IbB`}}}}{{BjBjc}{{Bb{de}}}{}{}}{{Fdf}{{Bb{{j{{Gj{c}}}}B`}}}Aj}{{AlHb}{{Bb{{j{{Gn{Khc}}}}B`}}}{AhBd}}`{{{Ad{cegik}}}HbAhAhAhAjAh}`{{FdKh}{{Bb{{j{Hb}}B`}}}}````{{ff}{{j{Fb}}}}{{BjBj}{{j{Fb}}}}{{DhDh}{{j{Fb}}}}{{DjDj}{{j{Fb}}}}{{DlDl}{{j{Fb}}}}{{{Cd{cegi}}}{{Hj{g}}}AhAhAjAh}`````{{{Ad{cegik}}}{{Bf{eg{Gj{i}}{Hj{i}}k}}}AhAhAhAjAh}`{{Fdf{Gj{c}}}{{Bb{{j{{Hj{c}}}}B`}}}Aj}{{fc}{{Bb{de}}}{}{}}=``{{Fdf}{{Bb{{j{l}}B`}}}}``````{{}Gh}{{fc}BbKj}{{Bjc}BbKj}{{{Cn{c}}e}Bb{KlD`}Kj}{{{Db{c}}e}Bb{KlClBn}Kj}{{{Dd{ce}}g}Bb{KlD`}KlKj}{{Dfc}BbKj}`{{HfHfHf}Ib}`{{{Ad{cegik}}}AfAhAhAhAjAh}`{fG`}{BjG`}{{{Bl{c}}}G`Ah}{{{C`{c}}}G`{}}{{{Cb{cegi}}}G`{}{}Aj{}}{{{Cd{cegi}}}G`{}{}Aj{}}{{{Ad{cegik}}}G`{}{}{}Aj{}}{{{Cf{c}}}G`Ah}{{{Bf{cegik}}}G`AhAhAhAh{}}{{{Ch{c}}}G`Ah}{{{Cj{ce}}}G`{AhCl}{AhCl}}{{{Cn{c}}}G`D`}{{{Db{c}}}G`{ClBn}}{{{Dd{ce}}}G`{AhD`}Ah}{DfG`}{DhG`}{DjG`}{DlG`}{DnG`}{E`G`}{EbG`}{EdG`}{EfG`}{EhG`}{BhG`}{{{Ej{c}}}G`Ah}{{{El{c}}}G`Ah}{EnG`}{F`G`}{{{Cd{cegi}}}JlAhAhAjAh}```{{FdHb}{{Bb{FfB`}}}}{{ff}f}{{Fd{Hl{{Gl{c}}eFf}}}{{Bb{dB`}}}H`Aj}`{Fd{{Bb{KnB`}}}}{{c{Fl{n}}}{{Ab{n}}}{}}0000000000000000000000000000{f{{A`{n}}}}{ce{}{}}0000000000000000000000000000{cJf{}}{{{Bl{c}}}{{j{c}}}Kd}`````{c{{Bb{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{c{{A`{n}}}{}}000000000000000000000000000000000000000000000000000000000{c{{Ab{n}}}{}}0000000000000000000000000000{cL`{}}00000000000000000000000000000{{}Lb}0000000000000000000000000000777777777777777777777777777777777777777777777777777777777777{{fe}c{}{{Lf{{Fl{n}}}{{Ld{c}}}}}}{{cc}{{El{c}}}{}}{{{Bf{cegik}}G`}{{j{i}}}{}{}{}Lh{}}{{{Bf{cegik}}}{{Ab{i}}}{}{}{}Lh{}}{{{Bf{cegik}}}{{Ab{Af}}}{}{}{}{}{}}`{{{Ch{c}}Kh}{{Bb{dLj}}}{}}{{{Ch{c}}}Ll{}}`>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>````{{cb}d{}}0;;::;;????`{{LnLn{Gn{JlJl}}}M`}{{Kh{Gn{JlJl}}{Ch{c}}LnLn}{{Bb{dLj}}}{}}{{{An{c}}}{{An{c}}}Bn}{LjLj}{{ce}d{}{}}0{c{{Bb{{An{e}}Fh}}}FjBd}{c{{Bb{LjFh}}}Fj}{{{Fl{n}}}{{Bb{cFh}}}{}}0{{Af{Fl{n}}}{{Bb{cFh}}}{}}0{{Afc}{{Bb{eFh}}}Fj{}}0{G`c{}}000{G`d}0{{{An{c}}e}dAh{HnI`}}{{Ljc}d{HnI`}}{{{An{c}}{An{c}}}IbId}{{LjLj}Ib}{{ce}Ib{}{}}00000{{{An{c}}In}J`Jb}{{LjIn}J`}{cc{}}00{ce{}{}}010110{c{{Ab{n}}}{}}0{{}G`}022222222{{MbM`}Ib}{{fLl}Md}{{{An{c}}}G`Ah}{LjG`}{{c{Fl{n}}}{{Ab{n}}}{}}077`{c{{Bb{e}}}{}{}}00000{c{{A`{n}}}{}}00088{cL`{}}0{{}Lb}0;;;;;;`{Mf{{Bb{{Ab{n}}B`}}}}{Mf{{Bb{GbB`}}}}{Mf{{Bb{{Bl{Mh}}B`}}}}{Mf{{Bb{IfB`}}}}{{MfAb{Gl{c}}}{{Bb{{Bb{dMj}}B`}}}H`}{{MfMh}{{Bb{B`}}}}{{MfF`}{{Bb{B`}}}}{{Mf{Ab{n}}}{{Bb{{Ab{n}}B`}}}}{{MfKn}{{Bb{B`}}}}{{MfMl}{{Bb{{Bb{Mn}}B`}}}}{{MfAb}{{Bb{{Ab{{Gn{{j{N`}}}}}}B`}}}}{Mf{{Bb{{j{Nb}}B`}}}}8;{Mf{{Bb{{Ab{{A`{n}}}}B`}}}}{Mf{{Bb{IbB`}}}}{{MfHfHf}{{Bb{IbB`}}}}{Mf{{Bb{{C`{Mh}}B`}}}}?{{{Ab{{Gn{{j{N`}}c}}}}Il}{{Nd{c}}}{JbIdBn}}{Il}{{{Ab{{Gn{{j{c}}e}}}}Il}{{Nd{e}}}{D`Bn}Jb}````{{cb}d{}}0{{{Fl{{Gn{Khc}}}}}NfAh}{c{{A`{n}}}{}}{c{{Ab{n}}}{}}1{ce{}{}}000{{}c{}}{NhNh}{NjNj}{{ce}d{}{}}0{c{{Bb{NhFh}}}Fj}{{{Fl{n}}}{{Bb{cFh}}}{}}{{Af{Fl{n}}}{{Bb{cFh}}}{}}{{Afc}{{Bb{eFh}}}Fj{}}{{}Nh}{{}Nj}{G`c{}}000{G`d}0{{Nhc}d{HnI`}}{{NhNh}Ib}{{ce}Ib{}{}}00{{NhIn}J`}{cc{}}00{ce{}{}}011010{{{Fl{n}}}Ll}{c{{Ab{n}}}{}}{{}G`}033333333{cIb{}}```{NhG`}{{c{Fl{n}}}{{Ab{n}}}{}}66{c{{Bb{e}}}{}{}}00000{c{{A`{n}}}{}}06{cL`{}}0{{}Lb}::::::```````282::::::{c{{Bb{NlFh}}}Fj}{{{Fl{n}}}{{Bb{cFh}}}{}}{{Af{Fl{n}}}{{Bb{cFh}}}{}}{{Afc}{{Bb{eFh}}}Fj{}}{G`c{}}00000{G`d}00{{Nlc}d{HnI`}}{AfNn}{{NlNl}Ib}{{ce}Ib{}{}}00{{NlIn}J`}{cc{}}00{ce{}{}}10101100101{{{Fl{{Ab{n}}}}Af}{{j{O`}}}}{{O`Nn}{{Bb{{Ab{n}}Nl}}}}{{O`Nn}{{Bb{cNl}}}Bd}{c{{Ab{n}}}{}}{{}G`}00555555555555{NlG`}{{c{Fl{n}}}{{Ab{n}}}{}}{c{{Bb{e}}}{}{}}00000000{c{{A`{n}}}{}}05{cL`{}}00{{}Lb};;;;;;;;;```{{cb}d{}}00333888333<<<<<<{{}c{}}00{GhGh}{ObOb}{OdOd}{{ce}d{}{}}00{{GhGh}Fb}{{ObOb}Fb}{{OdOd}Fb}{c{{Bb{GhFh}}}Fj}{c{{Bb{ObFh}}}Fj}{c{{Bb{OdFh}}}Fj}{{{Fl{n}}}{{Bb{cFh}}}{}}00{{Af{Fl{n}}}{{Bb{cFh}}}{}}00{{Afc}{{Bb{eFh}}}Fj{}}00{{}Gh}{{}Ob}{{}Od}{{ce}e{}{}}00000000000{G`c{}}00000{G`d}00{{{Ab{n}}}Od}{Gh{{Ab{n}}}}{Ob{{Ab{n}}}}{{Ghc}d{HnI`}}{{Obc}d{HnI`}}{{Odc}d{HnI`}}{{GhGh}Ib}{{ObOb}Ib}{{OdOd}Ib}{{ce}Ib{}{}}00000000{{GhIn}J`}{{ObIn}J`}{{OdIn}J`}{cc{}}000{ce{}{}}1010011001{OfOd}{{ce}Jl{JnI`}K`}00{Od{{j{{Fl{n}}}}}}{{Ghc}dKb}{{Obc}dKb}{{Odc}dKb}{c{{Ab{n}}}{}}00{{}G`}00888888888888{OdOf}{cIb{}}00{{GhGh}{{j{Fb}}}}{{ObOb}{{j{Fb}}}}{{OdOd}{{j{Fb}}}}{{Odf}d}{{OdOh}d}{{Od{Ab{{Gn{GhOb}}}}}d}{GhG`}{ObG`}{OdG`}{{OdOj}}{Od{{j{{Ab{n}}}}}}{{c{Fl{n}}}{{Ab{n}}}{}}00{ce{}{}}00{c{{Bb{e}}}{}{}}00000000{c{{A`{n}}}{}}00000{c{{Ab{n}}}{}}00{cL`{}}00{{}Lb}00555555{{Ghe}c{}{{Lf{{Fl{n}}}{{Ld{c}}}}}}{{Obe}c{}{{Lf{{Fl{n}}}{{Ld{c}}}}}}777{{{Ab{Ol}}}}","c":[],"p":[[5,"Private",2170],[1,"unit"],[5,"DomainId",0],[10,"DomainsDigestItem",0],[6,"Option",2171],[8,"RuntimeId",0],[1,"u8"],[1,"array"],[5,"Vec",2172],[5,"Bundle",0],[1,"u32"],[10,"Encode",2173],[10,"Header",2174],[10,"BundleProducerElectionApi",0],[5,"BundleProducerElectionParams",1675],[6,"ApiError",2175],[6,"Result",2176],[10,"Decode",2173],[5,"ExecutionReceipt",0],[6,"InvalidBundleType",0],[6,"ChainId",0],[5,"BlockFees",0],[10,"Clone",2177],[5,"Transfers",0],[5,"BundleHeader",0],[5,"SealedBundleHeader",0],[5,"BundleDigest",0],[5,"ProofOfElection",0],[5,"ConfirmedDomainBlock",0],[10,"Codec",2173],[6,"OperatorAllowList",0],[10,"Ord",2178],[6,"PermissionedActionAllowedBy",0],[5,"GenesisDomain",0],[6,"RuntimeType",0],[6,"StakingHoldIdentifier",0],[6,"MessengerHoldIdentifier",0],[6,"DomainsHoldIdentifier",0],[6,"DomainDigestItem",0],[5,"DomainInstanceData",0],[5,"DomainBlockLimit",0],[5,"DomainBundleLimit",0],[6,"InvalidReceipt",0],[6,"ReceiptValidity",0],[6,"BundleValidity",0],[5,"InboxedBundle",0],[6,"ExtrinsicDigest",0],[5,"DomainAllowlistUpdates",0],[6,"Ordering",2178],[10,"DomainsApi",0],[8,"Balance",2179],[5,"Error",2180],[10,"Input",2173],[1,"slice"],[10,"Default",2181],[1,"usize"],[5,"Digest",2182],[10,"Deserializer",2183],[10,"Deserialize",2183],[5,"StorageKey",1982],[8,"HeaderNumberFor",0],[8,"NumberFor",2174],[1,"tuple"],[10,"Block",2174],[8,"OperatorId",0],[5,"BTreeMap",2184],[5,"U256",2185],[10,"Zero",2186],[8,"HeaderHashFor",0],[8,"OpaqueBundle",0],[10,"Output",2173],[10,"Sized",2187],[1,"bool"],[10,"PartialEq",2178],[5,"Weight",2188],[8,"ExecutionReceiptFor",0],[8,"OpaqueBundles",0],[5,"Randomness",2185],[5,"Formatter",2189],[8,"Result",2189],[10,"Debug",2189],[10,"FunctionContext",2190],[5,"String",2191],[1,"str"],[5,"H256",2192],[1,"u64"],[10,"Hash",2193],[10,"BuildHasher",2193],[10,"Hasher",2193],[10,"CheckedAdd",2194],[8,"OperatorSignature",0],[8,"OperatorPublicKey",0],[10,"Serializer",2195],[10,"Serialize",2195],[8,"Moment",2179],[5,"TypeId",2196],[5,"Type",2197],[17,"Output"],[10,"FnOnce",2198],[10,"Copy",2187],[6,"ProofOfElectionError",1675],[8,"Blake3Hash",2185],[8,"StakeWeight",0],[1,"u128"],[5,"VrfPreOutput",2199],[5,"VrfTranscript",2199],[10,"DomainCoreApi",1777],[8,"Balance",2200],[5,"CheckExtrinsicsValidityError",2200],[5,"OpaqueExtrinsic",2201],[5,"DecodeExtrinsicError",2200],[8,"AccountId",2202],[6,"Era",2203],[5,"VecDeque",2204],[8,"MerkleTree",1800],[5,"Witness",1800],[5,"Blake2b256Algorithm",1800],[6,"VerificationError",1885],[5,"StorageKey",2205],[5,"StorageProof",2206],[5,"StorageData",1982],[5,"RawGenesis",1982],[5,"Storage",2205],[8,"EVMChainId",2200],[6,"StateVersion",2205],[6,"Value",2207],[10,"DomainsTransfersTracker",0],[5,"OperatorKey",0],[10,"DomainBundleSubmitted",0],[10,"DomainOwner",0],[5,"StorageProofVerifier",1885],[5,"StorageProofProvider",1885]],"b":[[772,"impl-Debug-for-DomainId"],[773,"impl-Display-for-DomainId"],[804,"impl-From%3Cu32%3E-for-ChainId"],[806,"impl-From%3CDomainId%3E-for-ChainId"]]}],\
["sp_domains_fraud_proof",{"doc":"Subspace fraud proof primitives for consensus chain.","t":"PPPPPPPPPPPGPPPPPPPPPPPPPPPPKFKFGGFPPGPPPPGPPGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNCNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOIPPHFNNNNNNNNNNNNNNNNNNNNNNNNPGPPFPPPPPPGPPPPPPPPPPPPPPPGGPPFPPPPPFPPPFPFPPFPPPFPPFPFPPPPPPPPPPPPPFFPGNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOOOOOOOOOONNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONHNOOONNNNNNNNNNNNNNNONOOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNOOOOOOOOFNNNNHNHNNNNNHNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHN","n":["BlockRandomness","BlockRandomness","Bundle","BundleEquivocation","BundleStorageFeePayment","CheckExtrinsicsInSingleContext","CheckExtrinsicsInSingleContext","ConsensusChainByteFeeExtrinsic","ConsensusChainByteFeeExtrinsic","DomainBundleBody","DomainBundleBody","DomainChainAllowlistUpdateExtrinsic","DomainChainAllowlistUpdateExtrinsic","DomainChainsAllowlistUpdateExtrinsic","DomainElectionParams","DomainElectionParams","DomainRuntimeCode","DomainRuntimeCode","DomainSetCodeExtrinsic","DomainSetCodeExtrinsic","DomainTimestampExtrinsic","DomainTimestampExtrinsic","EncodedExtrinsic","EncodedExtrinsic","ExecutionReceipt","ExtrinsicDecodableCheck","ExtrinsicDecodableCheck","FraudProof","FraudProofApi","FraudProofExtension","FraudProofHostFunctions","FraudProofHostFunctionsImpl","FraudProofVerificationInfoRequest","FraudProofVerificationInfoResponse","HostFunctions","InherentExtrinsicCheck","InherentExtrinsicCheck","InvalidTransactionCode","None","None","OperatorStake","OperatorStake","SetCodeExtrinsic","StorageKey","StorageKey","StorageKeyRequest","TransactionProof","Transfers","TxRangeCheck","TxRangeCheck","XDMValidationCheck","XDMValidationCheck","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_mut_any","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle_equivocation","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derive_bundle_digest","derive_bundle_digest","drop","drop","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execution_proof_check","execution_proof_check","execution_prover","extract_fraud_proofs","fmt","fmt","fmt","fmt","fmt","fraud_proof","fraud_proof_runtime_interface","from","from","from","from","from","from","from","from","from","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_fraud_proof_verification_info","get_fraud_proof_verification_info","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_block_randomness","into_bundle_body","into_consensus_chain_byte_fee_extrinsic","into_domain_chain_allowlist_update_extrinsic","into_domain_election_params","into_domain_runtime_code","into_domain_set_code_extrinsic","into_domain_timestamp_extrinsic","into_extrinsic_decodable_check","into_ffi_value","into_inherent_extrinsic_check","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_operator_stake","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_single_context_extrinsic_check","into_storage_key","into_tx_range_check","into_xdm_validation_check","new","new","size_hint","size_hint","size_hint","size_hint","size_hint","submit_fraud_proof_unsigned","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","verification","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","bundle_index","bundle_index","domain_block_hash","domain_block_number","domain_block_state_root","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","extrinsics","opaque_extrinsic","opaque_extrinsic","opaque_extrinsic","opaque_extrinsic","operator_id","req","storage_proof","bundle_slot_probability","domain_total_stake","CheckEquivocationResult","Err","Ok","check_equivocation","ExecutionProver","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","new","prove_execution","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip","ApplyExtrinsic","ApplyExtrinsicMismatch","BadExecutionProof","BundleEquivocation","BundleEquivocationProof","BundleNotFound","Client","ConsensusBlockHashNotFound","Decode","DomainStateRootNotFound","Dummy","ExecutionPhase","FailedToCheckExtrinsicDecodable","FailedToCheckExtrinsicsInSingleContext","FailedToCheckInherentExtrinsic","FailedToDeriveBundleDigest","FailedToDeriveConsensusChainByteFeeExtrinsic","FailedToDeriveDomainChainAllowlistExtrinsic","FailedToDeriveDomainSetCodeExtrinsic","FailedToDeriveDomainTimestampExtrinsic","FailedToGetBlockRandomness","FailedToGetDomainBundleBody","FailedToGetDomainRuntimeCode","FailedToGetDomainTransfersStorageKey","FailedToGetResponseFromTxRangeHostFn","FailedToValidateXDM","FinalizeBlock","FinalizeBlockMismatch","FraudProof","HeaderDecode","ImproperTransactionSortition","ImproperTransactionSortitionProof","InitializeBlock","InitializeBlockOrApplyExtrinsicDecode","InvalidApplyExtrinsicCallData","InvalidApplyExtrinsicTraceIndex","InvalidBlockFees","InvalidBlockFeesProof","InvalidBundleDigest","InvalidBundleEquivocationFraudProof","InvalidBundles","InvalidBundlesFraudProof","InvalidDomainBlockHash","InvalidDomainBlockHashProof","InvalidExecutionTrace","InvalidExtrinsicsRoot","InvalidExtrinsicsRootProof","InvalidLongerMismatchTraceIndex","InvalidProof","InvalidStateTransition","InvalidStateTransitionProof","InvalidStorageProof","InvalidTransaction","InvalidTransactionProof","InvalidTransfers","InvalidTransfersProof","Longer","Oneshot","RuntimeApi","RuntimeCode","Shorter","SignerNotFound","StateNotFound","StateRoot","StateRoot","StorageRootDecode","TargetValidBundleNotFound","UnexpectedTargetedBundleEntry","ValidBundle","ValidBundleDigest","ValidBundleProof","ValidTransaction","VerificationError","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","bad_receipt_hash","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle_digest","bundle_index","bundle_index","bundle_index","call_data","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_execution_result","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","digest_storage_proof","domain_block_hash","domain_block_number","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","domain_id","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy_fraud_proof","dummy_invalid_state_transition_proof","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execution_method","execution_phase","first_header","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","invalid_bundle_type","invalid_extrinsic","is_state_root_mismatch","is_true_invalid_fraud_proof","new","operator_block_fees_final_key","pre_post_state_root","proof","proof_data","second_header","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot","source","storage_proof","storage_proof","storage_proof","system_digest_final_key","targeted_bad_operator_and_slot_for_bundle_equivocation","targeted_bad_receipt_hash","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","valid_bundle_digests","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","extrinsic_proof","mismatch","mismatch","bad_receipt_hash","domain_id","bundle_index","fraud_proof_invalid_type_of_proof","targeted_entry_bundle","HostFunctions","borrow","borrow_mut","deref","deref_mut","derive_bundle_digest","drop","execution_proof_check","from","from_mut","from_mut","from_ref","from_ref","get_fraud_proof_verification_info","host_functions","init","into","into_key","into_mut","into_ref","register_static","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","vzip","BadBundleSignature","BundleSlotMismatch","FailedToGetDomainTotalStake","FailedToGetOperatorStake","InvalidBundleEquivocationError","InvalidProofOfElection","MismatchedOperatorAndDomain","SameBundleHash","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from_mut","from_mut","from_ref","from_ref","init","into","into_key","into_mut","into_ref","to_string","try_from","try_into","try_into_key","type_id","unchecked_into","unique_saturated_into","verify_bundle_equivocation_fraud_proof","verify_invalid_block_fees_fraud_proof","verify_invalid_bundles_fraud_proof","verify_invalid_domain_block_hash_fraud_proof","verify_invalid_domain_extrinsics_root_fraud_proof","verify_invalid_state_transition_fraud_proof","verify_invalid_transfers_fraud_proof","verify_valid_bundle_fraud_proof","vzip"],"q":[[0,"sp_domains_fraud_proof"],[400,"sp_domains_fraud_proof::FraudProofVerificationInfoRequest"],[421,"sp_domains_fraud_proof::FraudProofVerificationInfoResponse"],[423,"sp_domains_fraud_proof::bundle_equivocation"],[427,"sp_domains_fraud_proof::execution_prover"],[452,"sp_domains_fraud_proof::fraud_proof"],[1344,"sp_domains_fraud_proof::fraud_proof::ExecutionPhase"],[1347,"sp_domains_fraud_proof::fraud_proof::FraudProof"],[1349,"sp_domains_fraud_proof::fraud_proof::VerificationError"],[1352,"sp_domains_fraud_proof::fraud_proof_runtime_interface"],[1380,"sp_domains_fraud_proof::verification"],[1421,"dyn_clone::sealed"],[1422,"core::any"],[1423,"alloc::vec"],[1424,"parity_scale_codec::error"],[1425,"core::result"],[1426,"parity_scale_codec::codec"],[1427,"primitive_types"],[1428,"sp_domains"],[1429,"sp_runtime"],[1430,"core::option"],[1431,"sp_runtime::traits"],[1432,"sc_client_api::client"],[1433,"sp_blockchain::backend"],[1434,"sp_api"],[1435,"sp_core::traits"],[1436,"sc_executor"],[1437,"alloc::sync"],[1438,"sc_client_api::execution_extensions"],[1439,"alloc::boxed"],[1440,"core::ops::function"],[1441,"core::marker"],[1442,"core::marker"],[1443,"sp_runtime::traits"],[1444,"core::fmt"],[1445,"alloc::string"],[1446,"subspace_core_primitives"],[1447,"subspace_runtime_primitives"],[1448,"core::any"],[1449,"core::ops::function"],[1450,"sp_domains"],[1451,"sc_client_api::backend"],[1452,"sp_blockchain::error"],[1453,"sp_runtime::traits"],[1454,"hash_db"],[1455,"sp_domains"],[1456,"parity_scale_codec::codec"],[1457,"parity_scale_codec::codec"],[1458,"core::fmt"],[1459,"sp_domains"],[1460,"sp_domains"]],"d":["Block randomness at a given consensus block hash.","Block randomness fetched from consensus state at a …","","","","Request to check extrinsics in single context","Result of check extrinsics in single context","Domain <code>set_consensus_chain_byte_fee</code> extrinsic using the …","Encoded domain <code>set_consensus_chain_byte_fee</code> extrinsic …","The body of domain bundle included in a given consensus …","Domain block body fetch from a specific consensus block …","Type that maybe holds an encoded update domain chain …","Encoded domain update_chain_allowlist extrinsic if there …","Domains <code>update_domain_chain_allowlist</code> extrinsic at a given …","Request to get Domain election params.","Domain’s total stake at a given Consensus hash.","The domain runtime code","The domain runtime code","Domain set_code extrinsic if there is a runtime upgrade at …","Encoded domain set_code extrinsic if there is a runtime …","Domain timestamp extrinsic using the timestamp at a given …","Encoded domain timestamp extrinsic using the timestamp …","Holds an encoded set_code extrinsic with an upgraded …","Holds an encoded extrinsic with updates.","","Request to check if the domain extrinsic is decodable or …","If the domain extrinsic is decodable or not.","","API necessary for fraud proof.","Domains fraud proof host function","Trait to query and verify Domains Fraud proof.","Trait Impl to query and verify Domains Fraud proof.","Request type to fetch required verification information …","Response holds required verification information for fraud …","Provides implementations for the extern host functions.","Request to check if particular extrinsic is an inherent …","If the particular extrinsic provided is either inherent or …","Custom invalid validity code for the extrinsics in …","No runtime upgrade.","No updates","Request to get Operator stake.","Operators Stake at a given Consensus hash.","Type that maybe holds an encoded set_code extrinsic with …","Request to fetch a specific storage key","Result of the storage key request","Type that specifies the request of storage keys","","Domain’s transfers storage key","Request to check if particular extrinsic is in range for …","If particular extrinsic is in range for (domain, bundle) …","Request to check if the XDM is valid","If the particular xdm extrinsic is valid or not. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Module to check bundle equivocation and produce the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derive the bundle digest for the given bundle body.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check the execution proof","","This module provides the feature of generating and …","Extract the fraud proof handled successfully from the …","","","","","","","Domain fraud proof related runtime interface","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Returns the required verification info for the runtime to …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new instance of <code>FraudProofExtension</code>.","","","","","","Submit the fraud proof via an unsigned extrinsic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the bundle in which the extrinsic exists","Domain block hash from ER","Domain block number from ER","Domain block state root from ER","","","","","","","","","Extrinsics which we want to check in single context","Extrinsic for which we need to check the range","Extrinsic for which we need to if it is inherent or not.","Extrinsic for which we need to if it is decodable or not.","Encoded XDM extrinsic that needs to be validated.","","","Storage proof for the keys used in validating the extrinsic","","","","Contains the error value","Contains the success value","Checks if the header is an equivocation and returns the …","Creates storage proof for verifying an execution without …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","Constructs a new instance of <code>ExecutionProver</code>.","Returns a storage proof which can be used to reconstruct a …","","","","","","","","Executes some extrinsic.","Mismatch type possible for ApplyExtrinsic execution phase","Failed to pass the execution proof check.","","Represents a bundle equivocation proof. An equivocation …","Bundle with requested index not found in execution receipt","Runtime api error.","Hash of the consensus block being challenged not found.","Decode error.","Domain state root not found.","","A phase of a block’s execution, carrying necessary …","Failed to check if a given extrinsic is decodable or not.","Failed to check extrinsics in single context","Failed to check if a given extrinsic is inherent or not.","Failed to derive bundle digest","Failed to derive consensus chain byte fee extrinsic","Failed to derive domain chain allowlist extrinsic","Failed to derive domain set code extrinsic","Failed to derive domain timestamp extrinsic","Failed to get block randomness","Failed to get the bundle body","","","Tx range host function did not return response (returned …","Failed to check if a given extrinsic is inherent or not.","Executes the <code>finalize_block</code> hook.","Mismatch type possible for FinalizBlock execution phase","Fraud proof.","Failed to decode the header produced by <code>finalize_block</code>.","","Represents an invalid transaction proof.","Executes the <code>initialize_block</code> hook.","Failed to decode the return value of <code>initialize_block</code> and …","","","","Represents an invalid block fees proof.","Invalid bundle digest","Invalid bundle equivocation fraud proof.","","","","Represents an invalid domain block hash fraud proof.","","","Represents an Invalid domain extrinsics root proof with …","","The fraud proof prove nothing invalid","","Proves an invalid state transition by challenging the …","Invalid storage proof.","","Represents an invalid transaction proof.","","Represents an invalid transfers proof.","","","Runtime api error.","Fail to get runtime code.","","Can not find signer from the domain extrinsic.","State not found in the storage proof.","","","Failed to decode the storage root produced by verifying …","The target valid bundle not found from the target bad …","Invalid bundle entry in bad receipt was expected to be …","","Represents a valid bundle index and all the extrinsics …","Fraud proof for the valid bundles in …","Transaction validity check passes.","Error type of fraud proof verification on consensus node.","","","","","","","","","","","","","","","","","Hash of the bad receipt in which an invalid trace occurred.","Hash of the bad receipt this fraud proof targeted","Hash of the bad receipt this fraud proof targeted","Hash of the bad receipt this fraud proof targeted","Hash of the bad receipt this fraud proof targeted","Hash of the bad receipt this fraud proof targeted","Hash of the bad receipt this fraud proof targeted","The targetted bad receipt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Vec&lt;(tx_signer, tx_hash)&gt;</code> of all extrinsics","","Index of this bundle in the original list of bundles in …","The index of the targetted bundle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the post state root for the given execution result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Digests storage proof that is used to derive Domain block …","Hash of the domain block corresponding to <code>block_number</code>.","Number of the block at which the invalid transaction …","","","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","The id of the domain this fraud proof targeted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the method for generating the proof.","Execution phase.","The first header involved in the equivocation.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Returns the hash of this bundle equivocation proof.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if execution phase refers to mismatch between …","","","This is a representation of actual Block Fees storage in …","","Proof recorded during the computation.","","The second header involved in the equivocation.","","","","","","","","","","","","","","","","The slot at which the equivocation happened.","","Storage witness needed for verifying this proof.","Storage witness needed for verifying this proof.","Storage witness needed for verifying this proof.","Digest storage key in frame_system. Unfortunately, the …alid Bundle digests","","","","","","","","","","","","","","","","","","","","Hash of the bad receipt this fraud proof targeted","Id of the domain this fraud proof targeted","","","","Provides implementations for the extern host functions.","","","","","Derive the bundle digest for the given bundle body.","","Check the execution proof with also included domain block …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Returns required fraud proof verification information to …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Bundle signature is invalid.","Bundle slot mismatch.","Failed to get domain total stake.","Failed to get operator stake.","Represents error for invalid bundle equivocation proof.","Invalid Proof of election.","Mismatched operatorId and Domain.","Same bundle hash.","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Verifies Bundle equivocation fraud proof.","Verifies invalid block fees fraud proof.","","Verifies invalid domain block hash fraud proof.","Verifies invalid domain extrinsic root fraud proof.","Verifies invalid state transition fraud proof.","Verifies invalid transfers fraud proof.","Verifies valid bundle fraud proof.",""],"i":[9,12,106,106,106,9,12,9,12,9,12,0,12,9,9,12,9,12,9,12,9,12,10,11,106,9,12,106,0,0,0,0,0,0,0,9,12,0,10,11,9,12,0,9,12,0,106,8,9,12,9,12,8,9,10,11,12,3,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,24,106,3,8,9,10,11,12,24,106,3,8,9,10,11,12,0,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,24,106,3,3,8,9,10,11,12,24,106,3,3,8,9,10,11,12,19,24,24,106,3,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,19,24,0,44,8,9,10,11,12,0,0,24,106,3,3,8,9,10,11,12,9,24,24,106,106,3,3,8,8,9,9,10,10,11,11,12,12,24,24,106,106,3,3,8,8,9,9,10,10,11,11,12,12,19,24,8,9,10,11,12,24,106,3,8,9,10,11,12,24,106,3,8,9,10,11,12,12,12,12,12,12,12,12,12,12,9,12,24,106,3,8,9,10,11,12,24,106,3,8,9,10,11,12,12,24,106,3,8,9,10,11,12,12,12,12,12,24,3,8,9,10,11,12,44,8,9,10,11,12,8,9,10,11,12,24,106,3,8,9,10,11,12,24,106,3,8,9,10,11,12,24,106,3,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,24,106,3,3,8,9,10,11,12,8,9,10,11,12,24,106,3,8,9,10,11,12,24,106,3,8,9,10,11,12,8,9,10,11,12,0,24,106,3,8,9,10,11,12,107,108,109,109,109,107,108,110,111,112,113,109,114,109,108,110,111,112,115,114,109,116,116,0,61,61,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,65,0,72,46,0,72,72,72,72,72,46,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,65,0,0,72,46,0,65,72,72,72,46,0,72,72,46,0,46,0,72,46,0,72,72,46,0,72,46,0,46,0,74,72,72,72,73,72,72,73,74,72,72,72,46,0,0,72,0,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,75,77,79,80,81,82,83,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,84,75,84,86,65,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,65,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,83,79,79,46,75,77,78,79,80,81,82,83,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,46,0,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,73,73,73,73,74,74,74,74,74,65,65,65,65,65,75,75,75,75,75,46,46,46,46,46,77,77,77,77,77,78,78,78,78,78,79,79,79,79,79,80,80,80,80,80,81,81,81,81,81,82,82,82,82,82,83,83,83,83,83,84,84,84,84,84,85,85,85,85,85,86,86,86,86,86,65,77,78,73,74,65,72,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,72,72,72,72,75,46,77,78,79,80,81,82,83,84,85,86,73,73,74,74,65,65,72,72,75,75,46,46,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,73,73,74,74,65,65,72,72,75,75,46,46,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,46,78,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,75,79,65,75,75,0,65,77,75,78,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,78,72,79,81,82,0,46,46,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,72,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,73,74,65,75,46,77,78,79,80,81,82,83,84,85,86,85,73,74,65,72,75,46,77,78,79,80,81,82,83,84,85,86,117,117,118,119,119,120,120,120,0,121,121,121,121,0,121,0,121,121,121,121,121,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,93,93,93,93,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,0,0,0,0,0,0,93],"f":"````````````````````````````````````````````````````{{cb}d{}}0000{fh}{c{{l{j}}}{}}0000{c{{n{j}}}{}}000011111{ce{}{}}000000000000000`{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{{ce}d{}{}}0000{c{{Al{A`Aj}}}An}{c{{Al{AbAj}}}An}{c{{Al{AdAj}}}An}{c{{Al{AfAj}}}An}{c{{Al{AhAj}}}An}{{{B`{j}}}{{Al{cAj}}}{}}0000{{Bb{B`{j}}}{{Al{cAj}}}{}}0000{{Bbc}{{Al{eAj}}}An{}}0000{Bdc{}}0{fc{}}111111111011111{{BfBhBj{n{Bl}}}{{Bn{Bh}}}}{{{C`{cegik}}BhBj{n{Bl}}}{{Bn{Bh}}}Cb{{Cd{c}}{Cf{c}}{Ch{c}}}Cb{CjCl}{{Df{{Cn{e}}{Cn{i}}}{{D`{{Dd{Db}}}}}}DhDj}}{Bdd}0000000{{A`c}d{DlDn}}{{Abc}d{DlDn}}{{Adc}d{DlDn}}{{Afc}d{DlDn}}{{Ahc}d{DlDn}}{{A`A`}E`}{{AbAb}E`}{{AdAd}E`}{{AfAf}E`}{{AhAh}E`}{{ce}E`{}{}}000000000000000000000000{{Bf{Ed{EbBh}}Bh{n{j}}Ef{B`{j}}{n{j}}}{{Bn{{n{j}}}}}}{{{C`{cegik}}{Ed{EbBh}}Bh{n{j}}Ef{B`{j}}{n{j}}}{{Bn{{n{j}}}}}Cb{{Cd{c}}{Cf{c}}{Ch{c}}}Cb{CjCl}{{Df{{Cn{e}}{Cn{i}}}{{D`{{Dd{Db}}}}}}DhDj}}`{{EhBjn}{{Al{{n{{El{{Ej{c}}e}}}}En}}}CbF`}{{A`Fb}Fd}{{AbFb}Fd}{{AdFb}Fd}{{AfFb}Fd}{{AhFb}Fd}``{cc{}}0{{{Cn{Bf}}}f}111111{Ff{{Al{cFh}}}{}}2{ce{}{}}030303030330030330030330030303{{BfBhAb}{{Bn{Ah}}}}{{{C`{cegik}}BhAb}{{Bn{Ah}}}Cb{{Cd{c}}{Cf{c}}{Ch{c}}}Cb{CjCl}{{Df{{Cn{e}}{Cn{i}}}{{D`{{Dd{Db}}}}}}DhDj}}{c{{n{j}}}{}}0000{{}Bd}000000044444444{Ah{{Bn{Fj}}}}{Ah{{Bn{{n{Bl}}}}}}{Ah{{Bn{{n{j}}}}}}{AhAf}{Ah{{Bn{{Ed{Fl{Ed{FnFn}}}}}}}}2{AhAd}3{Ah{{Bn{E`}}}}{{cFf}{{Al{Fh}}}{}}1<<<<<<<<<<<<<<<<{Ah{{Bn{Fl}}}}========{Ah{{Bn{{Bn{Bb}}}}}}733{{{Cn{c}}{Cn{e}}g}{{C`{ickeg}}}{}{}{}{}{}}{{{Cn{Bf}}}f}{A`Bd}{AbBd}{AdBd}{AfBd}{AhBd}{{Eh{El{{Ej{c}}e}}}{{Al{dEn}}}CbF`}{{c{B`{j}}}{{n{j}}}{}}0000{ce{}{}}0000{c{{Al{e}}}{}{}}00000000000000000000000{c{{l{j}}}{}}000000000{c{{n{j}}}{}}0000{cG`{}}0{fG`}111111{{}Gb}00006666666666666666{{cgE`}e{}{}{{Gd{{B`{j}}}{{D`{e}}}}}}0000`77777777``````````````````````````{{{Cn{c}}Gf{Gh{{Ej{e}}gFl}}}{{Gj{{Ej{e}}g}}}GlCbF`}`88{Bdc{}}0{Bdd}{cc{}}0;;0{{}Bd}<<<<{{{Cn{e}}{Cn{g}}}{{Gn{ceg}}}Cb{{H`{c}}}Cj}{{{Gn{ceg}}Hb{B`{j}}{Bn{{Ed{i}}}}}{{Hf{Hd}}}Cb{{H`{c}}}Cj{{Hl{{Hh{c}}Hj}}}}===:>>>`````````````````````````````````````````````````````````````````````````{{cb}d{}}00000000000000`````````===============<<<<<<<<<<<<<<<===============????????????????????????????????````{{Hb{Hn{ceg}}{Hn{ceg}}}{{Al{{n{j}}I`}}}F`Cb{}}{IbIb}{IdId}{HbHb}{{{If{c}}}{{If{c}}}Ih}{{{El{ceg}}}{{El{ceg}}}IhIh{IhF`}}{{{Ij{c}}}{{Ij{c}}}Ih}{{{Il{ceg}}}{{Il{ceg}}}IhIh{IhF`}}{{{In{c}}}{{In{c}}}Ih}{{{J`{c}}}{{J`{c}}}Ih}{{{Jb{c}}}{{Jb{c}}}Ih}{{{Jd{c}}}{{Jd{c}}}Ih}{{{Jf{c}}}{{Jf{c}}}Ih}{JhJh}{{{Jj{c}}}{{Jj{c}}}Ih}{{{Jl{c}}}{{Jl{c}}}Ih}{{ce}d{}{}}00000000000000{c{{Al{IbAj}}}An}{c{{Al{IdAj}}}An}{c{{Al{HbAj}}}An}{c{{Al{{If{e}}Aj}}}AnJn}{c{{Al{{El{egi}}Aj}}}An{}{}F`}{c{{Al{{Ij{e}}Aj}}}AnJn}{c{{Al{{Il{egi}}Aj}}}An{}{}F`}{c{{Al{{In{e}}Aj}}}AnJn}{c{{Al{{J`{e}}Aj}}}AnJn}{c{{Al{{Jb{e}}Aj}}}AnJn}{c{{Al{{Jd{e}}Aj}}}AnJn}{c{{Al{{Jf{e}}Aj}}}AnJn}{c{{Al{JhAj}}}An}{c{{Al{{Jj{e}}Aj}}}AnJn}{c{{Al{{Jl{e}}Aj}}}AnJn}{{{B`{j}}}{{Al{cAj}}}{}}00000000000000{{Bb{B`{j}}}{{Al{cAj}}}{}}00000000000000{{Hb{n{j}}}{{Al{I`}}}}{{Bbc}{{Al{eAj}}}An{}}00000000000000{Bdc{}}0000000000000000000000000000000```{{{El{ceg}}}Bj{}{}F`}``````````{Bdd}000000000000000{{Bj{K`{c}}}{{El{egc}}}F`{}{}}{Bj{{Ij{c}}}Kb}{{Ibc}d{DlDn}}{{Idc}d{DlDn}}{{Hbc}d{DlDn}}{{{If{c}}e}dKd{DlDn}}{{{El{ceg}}i}d{}{}F`{DlDn}}{{{Ij{c}}e}dKd{DlDn}}{{{Il{ceg}}i}d{}{}F`{DlDn}}{{{In{c}}e}dKd{DlDn}}{{{J`{c}}e}dKd{DlDn}}{{{Jb{c}}e}dKd{DlDn}}{{{Jd{c}}e}dKd{DlDn}}{{{Jf{c}}e}dKd{DlDn}}{{Jhc}d{DlDn}}{{{Jj{c}}e}dKd{DlDn}}{{{Jl{c}}e}dKd{DlDn}}{{IbIb}E`}{{IdId}E`}{{HbHb}E`}{{{If{c}}{If{c}}}E`Kf}{{{El{ceg}}{El{ceg}}}E`KfKf{KfF`}}{{{Ij{c}}{Ij{c}}}E`Kf}{{{Il{ceg}}{Il{ceg}}}E`KfKf{KfF`}}{{{In{c}}{In{c}}}E`Kf}{{{J`{c}}{J`{c}}}E`Kf}{{{Jb{c}}{Jb{c}}}E`Kf}{{{Jd{c}}{Jd{c}}}E`Kf}{{{Jf{c}}{Jf{c}}}E`Kf}{{JhJh}E`}{{{Jj{c}}{Jj{c}}}E`Kf}{{{Jl{c}}{Jl{c}}}E`Kf}{{ce}E`{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000{HbEf}``{{IbFb}Fd}{{IdFb}Fd}{{HbFb}Fd}{{{I`{c}}Fb}FdKh}{{{I`{c}}Fb}Fd{}}{{{If{c}}Fb}FdKh}{{{El{ceg}}Fb}Fd{}{}F`}{{{Ij{c}}Fb}FdKh}{{{Il{ceg}}Fb}FdKhKh{KhF`}}{{{In{c}}Fb}FdKh}{{{J`{c}}Fb}FdKh}{{{Jb{c}}Fb}FdKh}{{{Jd{c}}Fb}FdKh}{{{Jf{c}}Fb}FdKh}{{JhFb}Fd}{{{Jj{c}}Fb}FdKh}{{{Jl{c}}Fb}FdKh}{cc{}}00{Kj{{I`{c}}}{}}{Kl{{I`{c}}}{}}2{Aj{{I`{c}}}{}}{En{{I`{c}}}{}}444444444444{ce{}{}}550500550055050050550055005500550055050050505050550505005050505{{{El{ceg}}}{{K`{g}}}KdKdF`}{{{Il{ceg}}}{{K`{g}}}{Ih{Kn{Bb}}Kd}{IhKbKd}F`}{c{{n{j}}}{}}00000000000000{{}Bd}0000000000000004444444444444444444444444444444444444444444444444444444444444444``{HbE`}`{{cBjBbL`HdE`}{{If{c}}}{}}{{}{{n{j}}}}{{Hb{Hn{ceg}}{Hn{ceg}}}{{Al{{Ed{BhBh}}I`}}}F`Cb{}}```{IbBd}{IdBd}{HbBd}{{{If{c}}}BdKd}{{{El{ceg}}}Bd{}{}F`}{{{Ij{c}}}BdKd}{{{Il{ceg}}}Bd{}{}F`}{{{In{c}}}BdKd}{{{J`{c}}}BdKd}{{{Jb{c}}}BdKd}{{{Jd{c}}}BdKd}{{{Jf{c}}}BdKd}{JhBd}{{{Jj{c}}}BdKd}{{{Jl{c}}}BdKd}`{{{I`{c}}}{{Bn{Lb}}}{}}```{{}{{n{j}}}}{{{El{ceg}}}{{Bn{{Ed{LdGf}}}}}{}{}F`}{{{El{ceg}}}{{Bn{{K`{g}}}}}{}{}F`}{{c{B`{j}}}{{n{j}}}{}}00000000000000{ce{}{}}00000000000000{cFh{}}{c{{Al{e}}}{}{}}00000000000000000000000000000000000000000000000{c{{l{j}}}{}}00000000000000000000000000000{c{{n{j}}}{}}00000000000000{cG`{}}000000000000000{{}Gb}0000000000000066666666666666666666666666666666{{cgE`}e{}{}{{Gd{{B`{j}}}{{D`{e}}}}}}00000000000000`7777777777777777`````````77{Bdc{}}0{{BhBj{n{Bl}}}{{Bn{Bh}}}}{Bdd}{{{Ed{EbBh}}Bh{n{j}}Ef{B`{j}}{n{j}}}{{Bn{{n{j}}}}}}{cc{}}0<0<{{BhAb}{{Bn{Ah}}}}{{}{{n{Lf}}}}{{}Bd}????{c{{Al{d}}}Lh}>>>;{ce{}{}}00````````00997{{KjFb}Fd}06616131111{cFh{}}{c{{Al{e}}}{}{}}00?33{{Lj{Gh{{Ej{c}}eg}}{Gh{{Ej{c}}eg}}}{{Al{dKj}}}CbF`Kd}{{{Ll{{Ej{c}}egi}}Hd}{{Al{d{I`{g}}}}}Cb{}{}{KfJn}}{{{Ll{{Ej{c}}{Ln{e}}{K`{e}}g}}{Ll{{Ej{c}}{Ln{e}}{K`{e}}g}}{If{{K`{e}}}}}{{Al{dI`}}}CbF`{}}{{{Ll{{Ej{c}}e}}Hd}{{Al{dI`}}}Cb{KfJn}}{{{Ll{{Ej{c}}{Ln{e}}{K`{e}}g}}{Jj{{K`{e}}}}}{{Al{dI`}}}CbF`{}}{{{Ll{{Ej{c}}e}}{Ll{{Ej{c}}e}}{Ij{{K`{g}}}}}{{Al{dI`}}}Cb{}F`}{{{Ll{{Ej{c}}egi}}{Jd{g}}}{{Al{d{I`{g}}}}}Cb{}{}{KfJn}}{{{Ll{{Ej{c}}egi}}{Jl{g}}}{{Al{d{I`{g}}}}}Cb{}{M`{Mb{Bh}}}{}};","c":[],"p":[[5,"Private",1421],[1,"unit"],[5,"FraudProofExtension",0],[10,"Any",1422],[1,"u8"],[1,"array"],[5,"Vec",1423],[6,"StorageKeyRequest",0],[6,"FraudProofVerificationInfoRequest",0],[6,"SetCodeExtrinsic",0],[6,"DomainChainAllowlistUpdateExtrinsic",0],[6,"FraudProofVerificationInfoResponse",0],[5,"Error",1424],[6,"Result",1425],[10,"Input",1426],[1,"slice"],[1,"u32"],[1,"usize"],[10,"FraudProofHostFunctions",0],[5,"H256",1427],[5,"DomainId",1428],[5,"OpaqueExtrinsic",1429],[6,"Option",1430],[5,"FraudProofHostFunctionsImpl",0],[10,"Block",1431],[10,"BlockBackend",1432],[10,"HeaderBackend",1433],[10,"ProvideRuntimeApi",1434],[10,"CodeExecutor",1435],[10,"RuntimeVersionOf",1436],[5,"Arc",1437],[17,"Output"],[10,"ExtensionsFactory",1438],[5,"Box",1439],[10,"Fn",1440],[10,"Send",1441],[10,"Sync",1441],[10,"Output",1426],[10,"Sized",1441],[1,"bool"],[8,"BlockNumber",1442],[1,"tuple"],[1,"str"],[10,"FraudProofApi",0],[8,"NumberFor",1431],[6,"FraudProof",452],[6,"ApiError",1434],[10,"Header",1431],[5,"Formatter",1443],[8,"Result",1443],[10,"FunctionContext",1444],[5,"String",1445],[5,"Randomness",1446],[8,"Balance",1447],[1,"u64"],[5,"TypeId",1422],[5,"Type",1448],[10,"FnOnce",1440],[5,"Slot",1449],[5,"SealedBundleHeader",1428],[8,"CheckEquivocationResult",423],[10,"AuxStore",1450],[5,"ExecutionProver",427],[10,"Backend",1450],[6,"ExecutionPhase",452],[5,"StorageProof",1451],[8,"Result",1452],[8,"HashingFor",1431],[8,"DBValue",1453],[10,"HashDB",1454],[8,"ExecutionReceiptFor",1428],[6,"VerificationError",452],[6,"ApplyExtrinsicMismatch",452],[6,"FinalizeBlockMismatch",452],[5,"InvalidBundlesFraudProof",452],[10,"Clone",1455],[5,"InvalidStateTransitionProof",452],[5,"BundleEquivocationProof",452],[5,"InvalidTransactionProof",452],[5,"ImproperTransactionSortitionProof",452],[5,"InvalidBlockFeesProof",452],[5,"InvalidTransfersProof",452],[5,"InvalidDomainBlockHashProof",452],[5,"ValidBundleDigest",452],[5,"InvalidExtrinsicsRootProof",452],[5,"ValidBundleProof",452],[10,"Decode",1426],[8,"HeaderHashFor",1428],[10,"Default",1456],[10,"Encode",1426],[10,"PartialEq",1457],[10,"Debug",1443],[6,"InvalidBundleEquivocationError",1380],[6,"Error",1452],[10,"From",1458],[6,"InvalidBundleType",1428],[10,"Error",1459],[8,"OperatorId",1428],[10,"Function",1444],[10,"HostFunctionRegistry",1444],[8,"OperatorPublicKey",1428],[5,"ExecutionReceipt",1428],[8,"HeaderNumberFor",1428],[10,"Copy",1441],[10,"Into",1458],[6,"InvalidTransactionCode",0],[15,"DomainBundleBody",400],[15,"TxRangeCheck",400],[15,"CheckExtrinsicsInSingleContext",400],[15,"InherentExtrinsicCheck",400],[15,"ExtrinsicDecodableCheck",400],[15,"XDMValidationCheck",400],[15,"DomainElectionParams",400],[15,"StorageKey",400],[15,"OperatorStake",400],[15,"DomainElectionParams",421],[15,"ApplyExtrinsic",1344],[15,"FinalizeBlock",1344],[15,"Dummy",1347],[15,"UnexpectedTargetedBundleEntry",1349],[5,"HostFunctions",1352]],"b":[[897,"impl-Debug-for-VerificationError%3CDomainHash%3E"],[898,"impl-Display-for-VerificationError%3CDomainHash%3E"],[914,"impl-From%3CInvalidBundleEquivocationError%3E-for-VerificationError%3CDomainHash%3E"],[915,"impl-From%3CError%3E-for-VerificationError%3CDomainHash%3E"],[917,"impl-From%3CError%3E-for-VerificationError%3CDomainHash%3E"],[918,"impl-From%3CApiError%3E-for-VerificationError%3CDomainHash%3E"],[1393,"impl-Display-for-InvalidBundleEquivocationError"],[1394,"impl-Debug-for-InvalidBundleEquivocationError"]]}],\
["sp_executive",{"doc":"Inherents for Executive pallet","t":"SPFGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNN","n":["INHERENT_IDENTIFIER","IncorrectRuntimeCode","InherentDataProvider","InherentError","InherentType","MissingRuntimeCode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode","encode_to","encode_to","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","init","init","init","into","into","into","is_fatal_error","maybe_code","new","provide_inherent_data","size_hint","size_hint","to_keyed_vec","to_keyed_vec","try_from","try_from","try_from","try_handle_error","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip"],"q":[[0,"sp_executive"],[78,"parity_scale_codec::error"],[79,"core::result"],[80,"parity_scale_codec::codec"],[81,"alloc::vec"],[82,"parity_scale_codec::codec"],[83,"core::fmt"],[84,"core::fmt"],[85,"sp_inherents"],[86,"core::future::future"],[87,"alloc::boxed"],[88,"core::pin"],[89,"sp_inherents"],[90,"core::ops::function"]],"d":["Executive inherent identifier.","","Provides the set code inherent data.","","The type of the Subspace inherent data.","","","","","","","","Returns the <code>data</code> of this inherent data provider.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Upgraded runtime code.","Create new inherent data provider from the given <code>data</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,0,0,0,3,1,3,2,1,3,2,1,3,2,3,2,3,2,3,2,1,3,2,1,3,2,1,3,2,2,3,2,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,3,2,1,1,3,2,3,2,1,3,2,1,1,3,2,1,3,2,1,3,2,1,3,2,2,1,3,2],"f":"``````{ce{}{}}00000{bd}{c{{j{fh}}}l}{c{{j{dh}}}l}{{{A`{n}}}{{j{ch}}}{}}0{{Ab{A`{n}}}{{j{ch}}}{}}0{{Abc}{{j{eh}}}l{}}0{Adc{}}00000{AdAf}00{d{{Ah{n}}}}{{fc}Af{AjAl}}{{dc}Af{AjAl}}{{fAn}B`}{{dAn}B`}{cc{}}00>>>>>>{{}Ad}00???{fBb}`{{{Bd{{Ah{n}}}}}b}{{bBf}{{Bl{{Bj{Bh}}}}}}{fAd}{dAd}{{c{A`{n}}}{{Ah{n}}}{}}0{c{{j{e}}}{}{}}00{{bBn{A`{n}}}{{Bl{{Bj{Bh}}}}}}111{cC`{}}00{ce{}{}}00000{{de}c{}{{Cd{{A`{n}}}{{Cb{c}}}}}}111","c":[],"p":[[5,"InherentDataProvider",0],[5,"InherentType",0],[6,"InherentError",0],[5,"Error",78],[6,"Result",79],[10,"Input",80],[1,"u8"],[1,"slice"],[1,"u32"],[1,"usize"],[1,"unit"],[5,"Vec",81],[10,"Output",80],[10,"Sized",82],[5,"Formatter",83],[8,"Result",83],[1,"bool"],[6,"Option",84],[5,"InherentData",85],[10,"Future",86],[5,"Box",87],[5,"Pin",88],[8,"InherentIdentifier",85],[5,"TypeId",89],[17,"Output"],[10,"FnOnce",90]],"b":[]}],\
["sp_messenger",{"doc":"Primitives for Messenger.","t":"SPFGFKPKKKKNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNOCNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNGKIIFIPPRPKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMOMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNFFGPIPPPFFPPPPPPFFFIIGIPPGGPPPGIPGPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNOOOONONOOOONNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOO","n":["INHERENT_IDENTIFIER","IncorrectAllowlistUpdates","InherentDataProvider","InherentError","InherentType","MessengerApi","MissingAllowlistUpdates","MmrProofVerifier","OnXDMRewards","RelayerApi","StorageKeys","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","block_messages","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","confirmed_domain_block_storage_key","confirmed_domain_block_storage_key","data","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","domain_chains_allowlist_update","drop","drop","drop","encode","encode_to","encode_to","endpoint","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","inbox_response_message_unsigned","inbox_response_storage_key","inbox_responses_storage_key","init","init","init","into","into","into","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_fatal_error","is_xdm_valid","maybe_updates","messages","new","on_xdm_rewards","outbox_message_unsigned","outbox_storage_key","outbox_storage_key","provide_inherent_data","should_relay_inbox_message_response","should_relay_outbox_message","size_hint","size_hint","to_keyed_vec","to_keyed_vec","try_from","try_from","try_from","try_handle_error","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","verify_proof_and_extract_consensus_state_root","vzip","vzip","vzip","Endpoint","EndpointHandler","EndpointId","EndpointPayload","EndpointRequest","EndpointResponse","Err","Id","MessageId","Ok","Sender","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","dst_endpoint","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_key","into_key","into_mut","into_mut","into_ref","into_ref","message","message_response","message_response_weight","message_weight","payload","send_message","size_hint","size_hint","src_endpoint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_key","try_into_key","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","BlockMessageWithStorageKey","BlockMessagesWithStorageKey","ChainId","ChannelClose","ChannelId","ChannelOpen","Consensus","Consensus","ConsensusChainMmrLeafProof","CrossDomainMessage","Domain","Domain","Endpoint","EndpointRequest","EndpointResponse","Err","FeeModel","InitiateChannelParams","Message","MessageId","MessageKey","MessageWeightTag","Nonce","None","Ok","Payload","Proof","Protocol","ProtocolChannelClose","ProtocolChannelOpen","ProtocolMessageRequest","ProtocolMessageResponse","Request","RequestResponse","Response","V0","VersionedPayload","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","channel_id","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_block_hash","consensus_chain_id","consensus_mmr_proof","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","domain_proof","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_chain_id","dst_chain_id","dst_chain_id","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fee_model","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_relayer_msg_with_proof","get_hash","hash","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response","inbox_responses","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_consensus_chain","last_delivered_message_response_nonce","max_encoded_len","max_outgoing_messages","maybe_domain_chain","message_proof","nonce","nonce","nonce","opaque_mmr_leaf","outbox","outbox","partial_cmp","payload","proof","proof","relay_fee","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","src_chain_id","src_chain_id","src_chain_id","storage_key","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight_tag","weight_tag","consensus_chain_mmr_proof","consensus_chain_mmr_proof","domain_proof","message_proof","message_proof"],"q":[[0,"sp_messenger"],[132,"sp_messenger::endpoint"],[245,"sp_messenger::messages"],[1002,"sp_messenger::messages::Proof"],[1007,"alloc::vec"],[1008,"sp_api"],[1009,"core::result"],[1010,"sp_domains"],[1011,"core::option"],[1012,"parity_scale_codec::error"],[1013,"parity_scale_codec::codec"],[1014,"sp_domains"],[1015,"core::fmt"],[1016,"core::fmt"],[1017,"parity_scale_codec::codec"],[1018,"core::future::future"],[1019,"alloc::boxed"],[1020,"core::pin"],[1021,"sp_inherents"],[1022,"core::ops::function"],[1023,"sp_mmr_primitives"],[1024,"sp_mmr_primitives"],[1025,"sp_runtime"],[1026,"sp_weights::weight_v2"],[1027,"sp_runtime"],[1028,"core::clone"],[1029,"core::cmp"],[1030,"core::default"],[1031,"serde::de"],[1032,"sp_trie::storage_proof"],[1033,"core::cmp"],[1034,"core::hash"]],"d":["Messenger inherent identifier.","","Provides the set code inherent data.","Inherent specific errors","The type of the messenger inherent data.","Api to provide XDM extraction from Runtime Calls.","","Trait to verify MMR proofs","Trait to handle XDM rewards.","Api useful for relayers to fetch messages and submit …","Trait that return various storage keys for storages on …","","","","","","","Returns all the outbox and inbox responses to deliver. …","","","","","","","Returns the storage key for confirmed domain block on …","Returns the confirmed domain block storage for given …","Returns the <code>data</code> of this inherent data provider.","","","","","","","","","","","","","","","Returns any domain’s chains allowlist updates on …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Constructs an inbox response message to the dst_chain as …","Returns storage key for inbox response for a given …","Returns the inbox responses storage key for given chain.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns <code>Some(true)</code> if valid XDM or <code>Some(false)</code> if not …","","","Create new inherent data provider from the given <code>data</code>.","","Constructs an outbox message to the dst_chain as an …","Returns the outbox storage key for given chain.","Returns storage key for outbox for a given message_id.","","Returns true if the inbox message response is ready to be …","Returns true if the outbox message is ready to be relayed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns consensus state root if the given MMR proof is …","","","","Endpoint as defined in the formal spec. Endpoint is an …","Handler to","Represents a particular endpoint in a given Execution …","Endpoint request or response payload.","Request sent by src_endpoint to dst_endpoint.","Response for the message request.","Contains the error value","Id of the endpoint on a specific chain.","Unique Id of the message between dst_chain and src_chain.","Contains the success value","Sender provides abstraction on sending messages to other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Triggered by pallet-messenger when a new inbox message is …","Triggered by pallet-messenger when a response for a …","Return the maximal possible consume weight of …","Return the maximal possible consume weight of <code>message</code>","","Sends a message to dst_chain_id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message with storage key to generate storage proof using …","Set of messages with storage keys to be relayed in a given …","Identifier of a chain.","Request to close an open channel with foreign chain.","Channel identity.","Request to open a channel with foreign chain.","","","Consensus chain MMR leaf and its Proof at specific block","Cross Domain message contains Message and its proof on …","","","Endpoint message.","","","Contains the error value","Fee model to send a request and receive a response from …","Parameters for a new channel between two chains.","Message contains information to be sent to or received …","Unique Id of a message between two chains.","Unique message key for Outbox and Inbox responses","Message weight tag used to indicate the consumed weight …","Nonce used as an identifier and ordering of messages …","","Contains the success value","Payload of the message","","Protocol message.","","","Defines protocol requests performed on chains.","Defines protocol requests performed on chains.","","Protocol message that encompasses  request or its response.","","","Versioned message payload","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ChannelId the message was sent through.","ChannelId the message was sent through.","ChannelId the message was sent through.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus block info from which this proof was generated.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chain this message is intended for.","Chain this message is intended for.","Chain this message is intended for.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Last delivered message response nonce on src_chain.","","","","","Message nonce within the channel.","Message nonce within the channel.","Message nonce within the channel.","Encoded MMR leaf","","","","Payload of the message","MMR proof for the leaf above.","Proof of message processed on src_chain.","Fee to relay message from one chain to another","","","","","","","","","","","","","","","","Chain which initiated this message.","Chain which initiated this message.","Chain which initiated this message.","Storage key to generate proof for using proof backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The message weight tag","The message weight tag","Consensus chain MMR leaf proof.","Consensus chain MMR leaf proof.","Storage proof that src domain chain’s block is out of …","Storage proof that message is processed on src_chain.","Storage proof that message is processed on src_chain."],"i":[0,15,0,0,0,0,15,0,0,0,0,12,15,12,15,12,15,4,11,12,15,11,12,15,76,10,11,12,15,12,15,12,15,12,15,11,12,15,11,12,15,10,11,12,15,12,12,15,0,12,15,11,12,15,11,11,12,12,15,15,11,11,12,12,15,15,12,15,4,10,76,11,12,15,11,12,15,11,12,15,11,12,15,11,12,15,15,10,12,0,11,77,4,76,10,11,4,4,12,15,12,15,11,12,15,11,11,12,15,11,12,15,12,15,12,15,12,15,11,12,15,11,12,15,11,12,15,12,78,11,12,15,0,0,0,0,0,0,47,44,79,47,0,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,45,44,45,44,45,44,44,44,45,45,45,44,45,44,45,44,44,45,45,44,44,45,45,44,45,44,45,44,45,44,45,44,45,44,45,46,46,46,46,45,79,44,45,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,0,0,0,55,0,55,62,30,0,0,62,30,57,59,59,80,0,0,0,0,0,0,0,59,80,0,0,57,59,59,0,0,56,0,56,58,0,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,60,26,63,52,54,59,5,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,30,61,30,62,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,59,5,30,30,30,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,30,62,52,54,55,56,57,58,59,60,61,62,26,63,5,30,60,26,63,52,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,52,52,54,54,54,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,61,61,61,62,62,62,26,26,26,63,63,63,5,5,5,30,30,30,54,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,30,30,52,52,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,26,26,63,63,5,5,30,30,52,52,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,26,26,63,63,5,5,30,30,26,30,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,59,5,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,59,5,30,60,30,54,30,62,60,26,63,61,59,5,30,60,61,26,52,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,60,26,63,63,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,52,54,55,56,57,58,59,60,61,62,26,63,5,30,52,54,55,56,57,58,59,60,61,62,26,63,5,30,26,63,81,82,82,81,82],"f":"```````````{c{{d{b}}}{}}0{c{{f{b}}}{}}011{h{{n{jl}}}}{ce{}{}}00000{A`{{Ab{{f{b}}}}}}{{AdA`}{{n{{f{b}}l}}}}{AfAh}{c{{n{AhAj}}}Al}{c{{n{AnAj}}}Al}{{{B`{b}}}{{n{cAj}}}{}}0{{Bb{B`{b}}}{{n{cAj}}}{}}0{{Bbc}{{n{eAj}}}Al{}}0{Bdc{}}00000{{AdA`}{{n{{Ab{Bf}}l}}}}{BdBh}00{Ah{{f{b}}}}{{Ahc}Bh{BjBl}}{{Anc}Bh{BjBl}}`{{AhBn}C`}{{AnBn}C`}{cc{}}00{ce{}{}}11010100101{c{{f{b}}}{}}0{{h{Cd{cCb}}}{{n{Abl}}}{CfCh}}{{AdCj}{{n{{f{b}}l}}}}{{ClCj}{{Ab{{f{b}}}}}}{{}Bd}00555555555555{AnCn}{{Ad{f{b}}}{{n{{Ab{Cn}}l}}}}``{AhAf}{cBh{}}756{{AfD`}{{Df{{Dd{Db}}}}}}{{hClDh}{{n{Cnl}}}}0{AhBd}{AnBd}{{c{B`{b}}}{{f{b}}}{}}0{c{{n{e}}}{}{}}00{{AfDj{B`{b}}}{{Df{{Dd{Db}}}}}}111111{c{{d{b}}}{}}000{c{{f{b}}}{}}0{cDl{}}00{ce{}{}}00000{{Ahe}c{}{{E`{{B`{b}}}{{Dn{c}}}}}}{{Eb{Ed{c}}}{{Ab{e}}}{}{}}222```````````{{cEf}Bh{}}06655663333{EhEh}{EjEj}{{ce}Bh{}{}}0{c{{n{EhAj}}}Al}{c{{n{EjAj}}}Al}{{{B`{b}}}{{n{cAj}}}{}}0{{Bb{B`{b}}}{{n{cAj}}}{}}0{{Bbc}{{n{eAj}}}Al{}}0{Bdc{}}000{BdBh}0`{{Ehc}Bh{BjBl}}{{Ejc}Bh{BjBl}}{{EhEh}Cn}{{EjEj}Cn}{{ce}Cn{}{}}00000{{EhBn}C`}{{EjBn}C`}{cc{}}00{ce{}{}}101010{c{{f{b}}}{}}0{{}Bd}022222222{{ElClcEj}En{}}{{ElClcEjEn}F`{}}{ElFb}0`{{cClEj}{{n{eFd}}}{}{}}{EhBd}{EjBd}`{{c{B`{b}}}{{f{b}}}{}}099{c{{n{e}}}{}{}}00000{c{{d{b}}}{}}000::{cDl{}}0{{}Ff}0===={{cgCn}e{}{}{{E`{{B`{b}}}{{Dn{e}}}}}}0>>`````````````````````````````````````{{cEf}Bh{}}000000000000044444444444444>>>>>>>>>>>>>>44444444444444????????????????????????????```{{}c{}}000{{{Fh{c}}}{{Fh{c}}}Fj}{{{Fl{c}}}{{Fl{c}}}Fj}{{{Fn{c}}}{{Fn{c}}}Fj}{{{G`{ce}}}{{G`{ce}}}FjFj}{{{Gb{c}}}{{Gb{c}}}Fj}{{{Gd{c}}}{{Gd{c}}}Fj}{GfGf}{{{Gh{c}}}{{Gh{c}}}Fj}{{{Gj{ce}}}{{Gj{ce}}}FjFj}{{{Gl{ce}}}{{Gl{ce}}}FjFj}{{{Cd{ce}}}{{Cd{ce}}}FjFj}{GnGn}{jj}{ClCl}{{ce}Bh{}{}}0000000000000{{ClCl}H`}`{{}Cl}{{{Gl{ce}}}{{Gj{ce}}}FjFj}{c{{n{{Fh{e}}Aj}}}AlCh}{c{{n{{Fl{e}}Aj}}}Al{}}{c{{n{{Fn{e}}Aj}}}Al{}}{c{{n{{G`{eg}}Aj}}}AlChCh}{c{{n{{Gb{e}}Aj}}}Al{}}{c{{n{{Gd{e}}Aj}}}Al{}}{c{{n{GfAj}}}Al}{c{{n{{Gh{e}}Aj}}}Al{}}{c{{n{{Gj{eg}}Aj}}}AlCh{}}{c{{n{{Gl{eg}}Aj}}}Al{}{}}{c{{n{{Cd{eg}}Aj}}}Al{}{}}{c{{n{GnAj}}}Al}{c{{n{jAj}}}Al}{c{{n{ClAj}}}Al}{{{B`{b}}}{{n{cAj}}}{}}0000000000000{{Bb{B`{b}}}{{n{cAj}}}{}}0000000000000{{Bbc}{{n{eAj}}}Al{}}0000000000000{{}{{Fh{c}}}Hb}{{}{{Fl{c}}}Hb}{{}Gf}{{}j}{{ce}e{}{}}000{Bdc{}}000000000000000000000000000{c{{n{Cl}}}Hd}{{{Gl{ce}}}{{Ab{Hf}}}{}{}}{BdBh}0000000000000```{{{Fh{c}}}{{f{b}}}Cf}{{{Fh{c}}e}BhCf{BjBl}}{{{Fl{c}}e}Bh{}{BjBl}}{{{Fn{c}}e}Bh{}{BjBl}}{{{G`{ce}}g}BhCfCf{BjBl}}{{{Gb{c}}e}Bh{}{BjBl}}{{{Gd{c}}e}Bh{}{BjBl}}{{Gfc}Bh{BjBl}}{{{Gh{c}}e}Bh{}{BjBl}}{{{Gj{ce}}g}BhCf{}{BjBl}}{{{Gl{ce}}g}Bh{}{}{BjBl}}{{{Cd{ce}}g}Bh{}{}{BjBl}}{{Gnc}Bh{BjBl}}{{jc}Bh{BjBl}}{{Clc}Bh{BjBl}}{{{Fh{c}}{Fh{c}}}CnHh}{{{Fl{c}}{Fl{c}}}CnHh}{{{Fn{c}}{Fn{c}}}CnHh}{{{G`{ce}}{G`{ce}}}CnHhHh}{{{Gb{c}}{Gb{c}}}CnHh}{{{Gd{c}}{Gd{c}}}CnHh}{{GfGf}Cn}{{{Gh{c}}{Gh{c}}}CnHh}{{{Gj{ce}}{Gj{ce}}}CnHhHh}{{{Gl{ce}}{Gl{ce}}}CnHhHh}{{{Cd{ce}}{Cd{ce}}}CnHhHh}{{GnGn}Cn}{{jj}Cn}{{ClCl}Cn}{{ce}Cn{}{}}00000000000000000000000000000000000000000`{{{Fh{c}}Bn}C`Hj}{{{Fl{c}}Bn}C`Hj}{{{Fn{c}}Bn}C`Hj}{{{G`{ce}}Bn}C`HjHj}{{{Gb{c}}Bn}C`Hj}{{{Gd{c}}Bn}C`Hj}{{GfBn}C`}{{{Gh{c}}Bn}C`Hj}{{{Gj{ce}}Bn}C`HjHj}{{{Gl{ce}}Bn}C`HjHj}{{{Cd{ce}}Bn}C`HjHj}{{GnBn}C`}{{jBn}C`}{{ClBn}{{n{BhHl}}}}{cc{}}0000000000000{A`Cl}{BbCl}2{ce{}{}}033003300330030303303003300330303030030330033030303030{{Gn{Gl{ce}}}{{Cd{ce}}}{}{}}{{ce}Hn{I`Bl}Ib}{{Clc}BhId}{c{{f{b}}}{}}0000000000000{{Gf{Gd{c}}}Gf{}}`{{}Bd}000000000000066666666666666666666666666666666666666666666666666666666{cCn{}}000{ClCn}`2`{Cl{{Ab{A`}}}}{{{Gl{ce}}}Hf{}{}}````{{{Gd{c}}}Gf{}}`{{ClCl}{{Ab{H`}}}}````{{Clc}nIf}{{{Fh{c}}}BdCf}{{{Fl{c}}}Bd{}}{{{Fn{c}}}Bd{}}{{{G`{ce}}}BdCfCf}{{{Gb{c}}}Bd{}}{{{Gd{c}}}Bd{}}{GfBd}{{{Gh{c}}}Bd{}}{{{Gj{ce}}}BdCf{}}{{{Gl{ce}}}Bd{}{}}{{{Cd{ce}}}Bd{}{}}{GnBd}{jBd}{ClBd}````{{c{B`{b}}}{{f{b}}}{}}0000000000000{ce{}{}}0000000000000{c{{n{e}}}{}{}}00000000000000000000000000000000000000000{c{{d{b}}}{}}000000000000000000000000000{c{{f{b}}}{}}0000000000000{cDl{}}0000000000000{{}Ff}00000000000005555555555555555555555555555{{cgCn}e{}{}{{E`{{B`{b}}}{{Dn{e}}}}}}{{{Fh{c}}g}eCf{}{{E`{{B`{b}}}{{Dn{e}}}}}}111111111111177777777777777```````","c":[],"p":[[1,"u8"],[1,"array"],[5,"Vec",1007],[10,"RelayerApi",0],[5,"BlockMessagesWithStorageKey",245],[6,"ApiError",1008],[6,"Result",1009],[5,"DomainId",1010],[6,"Option",1011],[10,"MessengerApi",0],[5,"InherentDataProvider",0],[5,"InherentType",0],[5,"Error",1012],[10,"Input",1013],[6,"InherentError",0],[1,"slice"],[1,"u32"],[1,"usize"],[5,"DomainAllowlistUpdates",1010],[1,"unit"],[10,"Output",1013],[10,"Sized",1014],[5,"Formatter",1015],[8,"Result",1015],[5,"H256",1016],[5,"CrossDomainMessage",245],[10,"Encode",1013],[10,"Decode",1013],[8,"MessageKey",245],[6,"ChainId",245],[1,"bool"],[5,"InherentData",1017],[10,"Future",1018],[5,"Box",1019],[5,"Pin",1020],[8,"MessageId",245],[8,"InherentIdentifier",1017],[5,"TypeId",1021],[17,"Output"],[10,"FnOnce",1022],[5,"EncodableOpaqueLeaf",1023],[5,"Proof",1023],[5,"Private",1024],[6,"Endpoint",132],[5,"EndpointRequest",132],[10,"EndpointHandler",132],[8,"EndpointResponse",132],[8,"DispatchResult",1025],[5,"Weight",1026],[6,"DispatchError",1025],[5,"Type",1027],[5,"FeeModel",245],[10,"Clone",1028],[5,"InitiateChannelParams",245],[6,"ProtocolMessageRequest",245],[6,"RequestResponse",245],[6,"Payload",245],[6,"VersionedPayload",245],[6,"MessageWeightTag",245],[5,"Message",245],[5,"ConsensusChainMmrLeafProof",245],[6,"Proof",245],[5,"BlockMessageWithStorageKey",245],[6,"Ordering",1029],[10,"Default",1030],[10,"Deserializer",1031],[5,"StorageProof",1032],[10,"PartialEq",1029],[10,"Debug",1015],[5,"Error",1015],[1,"u64"],[10,"Hash",1033],[10,"BuildHasher",1033],[10,"Hasher",1033],[10,"Serializer",1034],[10,"StorageKeys",0],[10,"OnXDMRewards",0],[10,"MmrProofVerifier",0],[10,"Sender",132],[8,"ProtocolMessageResponse",245],[15,"Consensus",1002],[15,"Domain",1002]],"b":[[616,"impl-From%3CDomainId%3E-for-ChainId"],[617,"impl-From%3Cu32%3E-for-ChainId"]]}],\
["sp_messenger_host_functions",{"doc":"Host functions for Messenger.","t":"PFPKFFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOO","n":["ConfirmedDomainBlockStorageKey","HostFunctions","InboxResponseStorageKey","MessengerApi","MessengerExtension","MessengerHostFunctionsImpl","OutboxStorageKey","StorageKeyRequest","__clone_box","as_mut_any","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","confirmed_domain_block_storage_key","confirmed_domain_block_storage_key","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain_chains_allowlist_update","domain_chains_allowlist_update","drop","drop","drop","drop","encode_to","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_storage_key","host_functions","identity","inbox_response_storage_key","inbox_response_storage_key","init","init","init","init","into","into","into","into","into_ffi_value","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_xdm_valid","is_xdm_valid","new","new","outbox_storage_key","outbox_storage_key","register_static","size_hint","to_keyed_vec","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","chain_id","chain_id","message_key","message_key"],"q":[[0,"sp_messenger_host_functions"],[145,"sp_messenger_host_functions::StorageKeyRequest"],[149,"dyn_clone::sealed"],[150,"core::any"],[151,"alloc::vec"],[152,"sp_domains"],[153,"sp_api"],[154,"core::result"],[155,"parity_scale_codec::error"],[156,"parity_scale_codec::codec"],[157,"sp_domains"],[158,"parity_scale_codec::codec"],[159,"core::fmt"],[160,"core::fmt"],[161,"sp_wasm_interface"],[162,"alloc::string"],[163,"sp_wasm_interface"],[164,"sp_wasm_interface"],[165,"core::ops::function"]],"d":["Request to get confirmed domain block storage key for …","Provides implementations for the extern host functions.","Request to get Inbox response storage key for given chain …","Api to provide XDM extraction from Runtime Calls.","","Implementation of Messenger host function.","Request to get Outbox storage key for given chain and …","","","","","","","","","","","","","","","","","Returns the confirmed domain block storage for given …","Returns the confirmed domain block storage for given …","","","","","","","","","","","","","","","Returns any domain’s chains allowlist updates on …","Returns any domain’s chains allowlist updates on …","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Returns the storage key.","","","Returns storage key for inbox response for a given …","Returns storage key for inbox response for a given …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns <code>Some(true)</code> if valid XDM or <code>Some(false)</code> if not …","Returns <code>Some(true)</code> if valid XDM or <code>Some(false)</code> if not …","","Create a new instance of <code>MessengerExtension</code>.","Returns storage key for outbox for a given message_id.","Returns storage key for outbox for a given message_id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[8,0,8,0,0,0,8,0,8,3,8,8,8,32,3,38,8,32,3,38,8,8,8,9,9,8,8,8,8,32,3,3,38,8,32,3,3,38,8,9,9,32,3,38,8,8,8,8,8,8,8,8,8,32,3,3,38,8,8,32,32,3,3,38,38,8,8,32,32,3,3,38,38,8,8,0,38,8,9,9,32,3,38,8,32,3,38,8,8,32,3,38,8,32,3,38,8,32,3,38,8,9,9,32,3,9,9,38,8,8,8,32,3,38,8,32,3,38,8,32,3,38,8,8,8,8,32,3,3,38,8,8,32,3,38,8,32,3,38,8,8,32,3,38,8,39,40,39,40],"f":"````````{{cb}d{}}{fh}{c{{l{j}}}{}}{c{{n{j}}}{}}1{ce{}{}}0000000{A`A`}{{ce}d{}{}}{{AbAd}{{Ah{{n{j}}Af}}}}0{c{{Ah{A`Aj}}}Al}{{{An{j}}}{{Ah{cAj}}}{}}{{B`{An{j}}}{{Ah{cAj}}}{}}{{B`c}{{Ah{eAj}}}Al{}}{Bbc{}}0{fc{}}1111011{{AbAd}{{Ah{{Bf{Bd}}Af}}}}0{Bbd}000{{A`c}d{BhBj}}{{A`A`}Bl}{{ce}Bl{}{}}0000{{A`Bn}C`}{cc{}}{{{Cb{`}}}f}111{Cd{{Ah{cCf}}}{}}2{ce{}{}}30033030030330{A`{{Bf{{n{j}}}}}}{{}{{n{Ch}}}}{c{{n{j}}}{}}{{Ab{Cn{CjClCl}}}{{Ah{{n{j}}Af}}}}0{{}Bb}0005555{{cCd}{{Ah{Cf}}}{}}666666666666{{Ab{n{j}}}{{Ah{{Bf{Bl}}Af}}}}0{{{Cb{c}}{Cb{e}}}{{D`{gcie}}}{}{}{}{}}:44{c{{Ah{d}}}Db}{A`Bb}{{c{An{j}}}{{n{j}}}{}};{c{{Ah{e}}}{}{}}00000000000{c{{l{j}}}{}}0:{cDd{}}{fDd}111{{}Df}{ce{}{}}0000000{{cgBl}e{}{}{{Dj{{An{j}}}{{Dh{e}}}}}}1111````","c":[],"p":[[5,"Private",149],[1,"unit"],[5,"MessengerExtension",0],[10,"Any",150],[1,"u8"],[1,"array"],[5,"Vec",151],[6,"StorageKeyRequest",0],[10,"MessengerApi",0],[5,"DomainId",152],[6,"ApiError",153],[6,"Result",154],[5,"Error",155],[10,"Input",156],[1,"slice"],[1,"u32"],[1,"usize"],[5,"DomainAllowlistUpdates",152],[6,"Option",157],[10,"Output",156],[10,"Sized",158],[1,"bool"],[5,"Formatter",159],[8,"Result",159],[5,"Arc",160],[10,"FunctionContext",161],[5,"String",162],[10,"Function",161],[6,"ChainId",152],[5,"U256",163],[1,"tuple"],[5,"MessengerHostFunctionsImpl",0],[10,"HostFunctionRegistry",161],[5,"TypeId",150],[5,"Type",164],[17,"Output"],[10,"FnOnce",165],[5,"HostFunctions",0],[15,"OutboxStorageKey",145],[15,"InboxResponseStorageKey",145]],"b":[]}],\
["sp_objects",{"doc":"Primitives for Objects.","t":"KNN","n":["ObjectsApi","extract_block_object_mapping","validated_object_call_hashes"],"q":[[0,"sp_objects"],[3,"subspace_runtime_primitives"],[4,"alloc::vec"],[5,"subspace_core_primitives::objects"],[6,"sp_api"],[7,"core::result"],[8,"sp_runtime::traits"]],"d":["","Extract block object mapping for a given block","Returns all the validated object call hashes for a given …"],"i":[0,1,1],"f":"`{{bc{f{d}}}{{l{hj}}}n}{b{{l{{f{d}}j}}}}","c":[],"p":[[10,"ObjectsApi",0],[8,"Hash",3],[5,"Vec",4],[5,"BlockObjectMapping",5],[6,"ApiError",6],[6,"Result",7],[10,"Block",8]],"b":[]}],\
["sp_subspace_mmr",{"doc":"Primitives for Subspace MMR.","t":"FFFKGGPPNNNMOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNONNNNNNNNNNNCNNNNNNMNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNHNFKFFKFNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNFNNHNNNNNNHNNNNNNNNNN","n":["DomainHostFunctions","HostFunctions","LeafDataV0","MmrDigest","MmrDigestItem","MmrLeaf","NewMmrRoot","V0","__clone_box","__clone_box","__clone_box","as_new_mmr_root","block_hash","block_number","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","domain_mmr_runtime_interface","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics_root","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","host_functions","init","init","init","into","into","into","new_mmr_root","size_hint","size_hint","size_hint","state_root","state_root","subspace_mmr_runtime_interface","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","register_static","try_from","try_into","type_id","unchecked_into","unique_saturated_into","verify_mmr_proof","vzip","EncodableOpaqueLeaf","MmrApi","Proof","SubspaceMmrExtension","SubspaceMmrHostFunctions","SubspaceMmrHostFunctionsImpl","__clone_box","as_mut_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_block_hash","consensus_block_hash","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from_leaf","from_mut","from_mut","from_mut","from_mut","from_opaque_leaf","from_ref","from_ref","from_ref","from_ref","generate_proof","get_mmr_leaf_data","get_mmr_leaf_data","init","init","init","init","into","into","into","into","into_opaque_leaf","items","leaf_count","leaf_indices","mmr_leaf_count","mmr_root","new","new","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","verify_mmr_proof","verify_mmr_proof","verify_proof","verify_proof_stateless","vzip","vzip","vzip","vzip","HostFunctions","borrow","borrow_mut","consensus_block_hash","deref","deref_mut","drop","from","from_mut","from_ref","get_mmr_leaf_data","host_functions","init","into","register_static","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"sp_subspace_mmr"],[118,"sp_subspace_mmr::domain_mmr_runtime_interface"],[138,"sp_subspace_mmr::host_functions"],[265,"sp_subspace_mmr::subspace_mmr_runtime_interface"],[286,"dyn_clone::sealed"],[287,"core::option"],[288,"core::clone"],[289,"parity_scale_codec::codec"],[290,"parity_scale_codec::error"],[291,"core::result"],[292,"parity_scale_codec::codec"],[293,"parity_scale_codec::codec"],[294,"core::fmt"],[295,"core::fmt"],[296,"core::any"],[297,"scale_info::ty"],[298,"core::ops::function"],[299,"sp_wasm_interface"],[300,"sp_wasm_interface"],[301,"primitive_types"],[302,"sp_runtime::traits"],[303,"sp_blockchain::backend"],[304,"sp_api"],[305,"core::fmt"],[306,"sp_mmr_primitives"],[307,"sp_mmr_primitives"]],"d":["Provides implementations for the extern host functions.","Provides implementations for the extern host functions.","MMR v0 leaf data","MMR specific digest items interface.","MMR specific digest item.","MMR leaf structure","","V0 version of leaf data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Can be used to prove block body","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Can be used to prove specific storage after block was …","MMR related runtime interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","Verifies the given MMR proof using the leaves provided","","A type-safe wrapper for the concrete leaf type.","API to interact with MMR pallet.","An MMR proof data for a group of leaves.","","Trait to query MMR specific data through host function..","Implementation of MMR host function.","","","","","","","","","","","","","Returns the consensus block hash for given block number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert a concrete leaf into encodable opaque version.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Given an opaque leaf, make it encodable.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Generate MMR proof for a series of block numbers. If …","Returns the MMR Leaf data for given consensus block hash","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Try to convert into a OpaqueLeaf.","Proof elements (hashes of siblings of inner nodes on the …","Number of leaves in MMR, when the proof was generated.","The indices of the leaves the proof is for.","Return the number of MMR blocks in the chain.","Return the on-chain MMR root hash.","","Create a new instance of <code>SubspaceMmrExtension</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies the mmr proof using consensus chain.","","Verify MMR proof against on-chain MMR for a batch of …","Verify MMR proof against given root hash for a batch of …","","","","","Provides implementations for the extern host functions.","","","Returns the consensus block hash for a given block number.","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Returns the MMR leaf.","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,0,8,5,5,7,8,3,7,7,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,0,5,7,8,5,7,8,5,7,8,5,5,5,7,7,7,8,8,8,7,5,7,5,7,8,5,7,8,5,7,8,0,5,7,8,5,7,8,3,5,7,8,5,7,0,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,5,7,8,5,7,5,7,8,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,0,0,0,0,0,0,36,34,40,34,33,36,40,34,33,36,36,36,37,40,33,36,33,36,33,36,33,36,40,34,34,33,36,40,34,34,33,36,40,34,33,36,33,33,36,33,36,33,33,33,36,36,36,33,36,40,34,34,33,36,33,40,34,33,36,33,40,34,33,36,48,37,40,40,34,33,36,40,34,33,36,33,36,36,36,48,48,40,34,33,36,33,36,36,40,34,33,36,40,34,33,36,40,34,34,33,36,33,36,40,34,33,36,40,34,33,36,33,36,37,40,48,48,40,34,33,36,0,54,54,0,54,54,54,54,54,54,0,54,54,54,54,54,54,54,54,54,54],"f":"````````{{cb}d{}}00{f{{h{c}}}{}}``{ce{}{}}00000{{{j{ce}}}{{j{ce}}}ll}{{{n{ce}}}{{n{ce}}}ll}{{{A`{c}}}{{A`{c}}}{lAb}}{{ce}d{}{}}00{c{{Af{{j{eg}}Ad}}}Ah{}{}}{c{{Af{{n{eg}}Ad}}}AhAjAj}{c{{Af{{A`{e}}Ad}}}Ah{AjAb}}{{{An{Al}}}{{Af{cAd}}}{}}00{{B`{An{Al}}}{{Af{cAd}}}{}}00{{B`c}{{Af{eAd}}}Ah{}}00{Bbc{}}00000`{Bbd}00{{{j{ce}}g}d{}{}{BdBf}}{{{n{ce}}g}dBhBh{BdBf}}{{{A`{c}}e}d{BhAb}{BdBf}}{{{j{ce}}{j{ce}}}BjBlBl}{{{n{ce}}{n{ce}}}BjBlBl}{{{A`{c}}{A`{c}}}Bj{BlAb}}{{ce}Bj{}{}}00000000`{{{j{ce}}Bn}C`CbCb}{{{n{ce}}Bn}C`CbCb}{cc{}}00{ce{}{}}00000`{{}Bb}00111{cf{}}{{{j{ce}}}Bb{}{}}{{{n{ce}}}BbBhBh}{{{A`{c}}}Bb{BhAb}}{{{j{ce}}}e{}l}``{{c{An{Al}}}{{Cd{Al}}}{}}00777{c{{Af{e}}}{}{}}00000{cCf{}}00{{}Ch}00::::::{{cgBj}e{}{}{{Cl{{An{Al}}}{{Cj{e}}}}}}0;;;`;;{Bbc{}}0{Bbd}>=={{}{{Cd{Cn}}}}=>{c{{Af{d}}}D`}776??{{{Cd{Db}}{Cd{Al}}}Bj}{ce{}{}}``````{{cb}d{}}{DdDf}22222222{{{Dh{c}}}{{Dh{c}}}l}{{ce}d{}{}}{{DjDl}{{h{Dn}}}}{{{E`{ce}}Dl}{{h{Dn}}}Eb{{Ed{c}}{Ef{c}}}}{c{{Af{DbAd}}}Ah}{c{{Af{{Dh{e}}Ad}}}Ah{}}{{{An{Al}}}{{Af{cAd}}}{}}0{{B`{An{Al}}}{{Af{cAd}}}{}}0{{B`c}{{Af{eAd}}}Ah{}}0{Bbc{}}0{Ddc{}}1110111{Bbd}000{Db{{Cd{Al}}}}{{Dbc}d{BdBf}}{{{Dh{c}}e}d{}{BdBf}}{{DbDb}Bj}{{{Dh{c}}{Dh{c}}}BjBl}{{ce}Bj{}{}}00000{{DbBn}{{Af{dEh}}}}{{{Dh{c}}Bn}{{Af{dEh}}}Cb}{cc{}}0{{{Ej{Dj}}}Dd}11{cDbEl}{ce{}{}}000{EnDb}1111{{F`{Cd{c}}{h{c}}}{{Af{{Af{{Fb{{Cd{Db}}{Dh{e}}}}Fd}}Ff}}}AbAb}{{DjDn}{{h{`}}}}{{{E`{ce}}Dn}{{h{`}}}Eb{{Ed{c}}{Ef{c}}}}{{}Bb}0005555{DbEn}```{F`{{Af{{Af{FhFd}}Ff}}}}{F`{{Af{{Af{cFd}}Ff}}}Ab}{{{Ej{c}}}{{E`{ec}}}{}{}};{DbBb}{{{Dh{c}}}Bb{}}{{c{An{Al}}}{{Cd{Al}}}{}}0<{c{{Af{e}}}{}{}}0000000{cCf{}}{DdCf}111{{}Ch}0{ce{}{}}0000000{{Dbe}c{}{{Cl{{An{Al}}}{{Cj{c}}}}}}{{cgBj}e{}{}{{Cl{{An{Al}}}{{Cj{e}}}}}}{{Dj{Cd{Db}}{Cd{Al}}}Bj}{{{E`{ce}}{Cd{Db}}{Cd{Al}}}BjEb{{Ed{c}}{Ef{c}}}}{{F`{Cd{Db}}{Dh{c}}}{{Af{{Af{dFd}}Ff}}}Ab}{{F`c{Cd{Db}}{Dh{c}}}{{Af{{Af{dFd}}Ff}}}Ab}6666`66{Dl{{h{Dn}}}}{Bbc{}}0{Bbd}{cc{}}::{Dn{{h{`}}}}{{}{{Cd{Cn}}}}{{}Bb}={c{{Af{d}}}D`}{c{{Af{e}}}{}{}}0{cCf{}}{ce{}{}}00","c":[],"p":[[5,"Private",286],[1,"unit"],[10,"MmrDigest",0],[6,"Option",287],[6,"MmrLeaf",0],[10,"Clone",288],[5,"LeafDataV0",0],[6,"MmrDigestItem",0],[10,"Codec",289],[5,"Error",290],[6,"Result",291],[10,"Input",289],[10,"Decode",289],[1,"u8"],[1,"slice"],[1,"u32"],[1,"usize"],[10,"Output",289],[10,"Sized",292],[10,"Encode",289],[1,"bool"],[10,"PartialEq",293],[5,"Formatter",294],[8,"Result",294],[10,"Debug",294],[5,"Vec",295],[5,"TypeId",296],[5,"Type",297],[17,"Output"],[10,"FnOnce",298],[10,"Function",299],[10,"HostFunctionRegistry",299],[5,"EncodableOpaqueLeaf",138],[5,"SubspaceMmrExtension",138],[10,"Any",296],[5,"Proof",138],[10,"SubspaceMmrHostFunctions",138],[8,"BlockNumber",300],[5,"H256",301],[5,"SubspaceMmrHostFunctionsImpl",138],[10,"Block",302],[10,"HeaderBackend",303],[10,"ProvideRuntimeApi",304],[5,"Error",294],[5,"Arc",305],[10,"FullLeaf",306],[5,"OpaqueLeaf",306],[10,"MmrApi",138],[1,"tuple"],[6,"Error",306],[6,"ApiError",304],[1,"u64"],[5,"HostFunctions",118],[5,"HostFunctions",265]],"b":[]}],\
["subspace_archiving",{"doc":"Collection of modules used for dealing with archived state …","t":"CCCFGPPPPPPFPPGGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOPPPPFGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFFGGPNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNOO","n":["archiver","piece_reconstructor","reconstructor","Archiver","ArchiverInstantiationError","Block","BlockContinuation","BlockStart","FailedToInitializeErasureCoding","InvalidBlockSmallSize","InvalidLastArchivedBlock","NewArchivedSegment","Padding","ParentSegmentHeader","Segment","SegmentItem","V0","add_block","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","init","init","init","init","init","into","into","into","into","into","is_piece_valid","is_record_commitment_hash_valid","last_archived_block_number","new","object_mapping","partial_cmp","pieces","segment_header","serialize","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_initial_state","archived_block_bytes","block_bytes","items","bytes","bytes","bytes","DataShardsReconstruction","FailedToInitializeErasureCoding","IncorrectPiecePosition","InvalidInputPieceCommitment","PiecesReconstructor","ReconstructorError","ReconstructorInstantiationError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","partial_cmp","reconstruct_piece","reconstruct_segment","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","DataShardsReconstruction","FailedToInitializeErasureCoding","IncorrectSegmentOrder","ReconstructedContents","Reconstructor","ReconstructorError","ReconstructorInstantiationError","SegmentDecoding","add_segment","blocks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hash","init","init","init","init","into","into","into","into","new","partial_cmp","segment_header","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","actual_segment_index","expected_segment_index"],"q":[[0,"subspace_archiving"],[3,"subspace_archiving::archiver"],[133,"subspace_archiving::archiver::ArchiverInstantiationError"],[135,"subspace_archiving::archiver::Segment"],[136,"subspace_archiving::archiver::SegmentItem"],[139,"subspace_archiving::piece_reconstructor"],[203,"subspace_archiving::reconstructor"],[286,"subspace_archiving::reconstructor::ReconstructorError"],[288,"alloc::vec"],[289,"subspace_core_primitives::objects"],[290,"core::cmp"],[291,"parity_scale_codec::error"],[292,"core::result"],[293,"parity_scale_codec::codec"],[294,"serde::de"],[295,"parity_scale_codec::codec"],[296,"core::fmt"],[297,"core::fmt"],[298,"subspace_core_primitives::crypto::kzg"],[299,"subspace_core_primitives::pieces"],[300,"subspace_core_primitives::segments"],[301,"subspace_core_primitives::crypto"],[302,"subspace_core_primitives::pieces"],[303,"core::option"],[304,"serde::ser"],[305,"alloc::string"],[306,"core::any"],[307,"subspace_core_primitives"]],"d":["","","","Block archiver for Subspace blockchain.","Archiver instantiation error","Contains full block inside","Continuation of the partial block spilled over into the …","Contains the beginning of the block inside, remainder will …","Failed to initialize erasure coding","Invalid block, its size is smaller than already archived …","Invalid last archived block, its size is the same as …","Newly archived segment as a combination of segment header …","Special dummy enum variant only used as an implementation …","Segment header of the parent","Segment represents a collection of items stored in …","Kinds of items that are contained within a segment","","Adds new block to internal buffer, potentially producing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Validate witness embedded within a piece produced by …","Validate witness for record commitment hash produced by …","Get last archived block if there was any","Create a new instance with specified record size and …","Mappings for objects stored in corresponding pieces.","","Segment of archived history containing pieces","Segment header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new instance of the archiver with initial state …","Already archived portion of the block","Full block size","Segment items","Block bytes","Block bytes","Block bytes","Segment size is not bigger than record size","Failed to initialize erasure coding","Incorrect piece position provided.","Commitment of input piece is invalid.","Reconstructor helps to retrieve blocks from archived …","Reconstructor-related instantiation error","Reconstructor-related instantiation error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the missing piece for a segment using given set of …","Returns all the pieces for a segment using given set of …","","","","","","","","","","","","","","","Error during data shards reconstruction","Failed to initialize erasure coding","Incorrect segment order, each next segment must have …","Data structure that contains information reconstructed …","Reconstructor helps to retrieve blocks from archived …","Reconstructor-related instantiation error","Reconstructor-related instantiation error.","Segment size is not bigger than record size","Given a set of pieces of a segment of the archived history …","Reconstructed encoded blocks with their block numbers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Segment header stored in a segment","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,8,8,8,9,9,9,0,8,8,0,0,7,1,7,8,6,9,1,7,8,6,9,1,7,8,6,9,1,7,8,6,9,1,9,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,9,1,7,8,6,9,1,6,7,8,6,9,1,7,8,6,7,8,6,9,7,8,6,9,9,1,7,8,6,9,1,9,7,8,6,9,1,7,8,6,9,1,0,0,1,1,6,9,6,6,6,7,8,6,7,8,6,7,8,6,9,1,9,7,8,6,9,1,7,8,6,9,1,7,8,6,9,1,1,44,44,45,46,47,48,36,35,36,36,0,0,0,35,36,37,35,36,37,35,36,37,35,36,37,35,35,36,37,35,36,37,35,36,37,35,36,35,35,36,36,37,35,36,37,35,35,36,37,35,36,37,37,35,37,37,35,36,37,35,36,35,36,37,35,36,37,35,36,37,42,43,42,0,0,0,0,42,40,41,43,42,41,40,43,42,41,40,43,42,41,40,43,42,41,40,43,41,43,42,41,40,43,42,41,40,43,42,41,40,43,42,41,43,43,42,42,41,40,43,42,41,40,43,43,42,41,40,43,42,41,40,40,43,41,43,42,41,40,43,42,43,42,41,40,43,42,41,40,43,42,41,40,49,49],"f":"`````````````````{{b{f{d}}hj}{{f{l}}}}{ce{}{}}000000000{nn}{A`A`}{ll}{AbAb}{bb}{{ce}Ad{}{}}0000{{AbAb}Af}{c{{Aj{nAh}}}Al}{c{{Aj{A`Ah}}}Al}{c{{Aj{lAh}}}Al}{{{An{d}}}{{Aj{cAh}}}{}}00{{B`{An{d}}}{{Aj{cAh}}}{}}00{{B`c}{{Aj{eAh}}}Al{}}00{Bbc{}}000000000{c{{Aj{l}}}Bd}{BbAd}0000{{nc}Ad{BfBh}}{{A`c}Ad{BfBh}}{{lc}Ad{BfBh}}{{nn}j}{{A`A`}j}{{ll}j}{{AbAb}j}{{nBj}Bl}{{A`Bj}Bl}{{lBj}Bl}{{AbBj}Bl}0{{bBj}Bl}{cc{}}0000{{Abc}AdBn}{{}Bb}0000{ce{}{}}0000{{C`CbCdB`}j}{{C`CfCdChB`}j}{b{{Cl{Cj}}}}{C`{{Aj{bAb}}}}`{{AbAb}{{Cl{Af}}}}``{{lc}AjCn}{nBb}{A`Bb}{lBb}{{c{An{d}}}{{f{d}}}{}}00:::::{cD`{}}{c{{Aj{e}}}{}{}}000000000{cDb{}}0000{{C`Dd{An{d}}h}{{Aj{bAb}}}}`````````````>>>>>>{DfDf}{DhDh}{DjDj}{{ce}Ad{}{}}00{{DfDf}Af}{Bbc{}}00000{BbAd}00{{DfDf}j}{{DhDh}j}{{DfBj}Bl}0{{DhBj}Bl}0{{DjBj}Bl}{cc{}}00{{Dfc}AdBn}{{}Bb}00{ce{}{}}00{C`{{Aj{DjDf}}}}{{DfDf}{{Cl{Af}}}}{{Dj{An{{Cl{Dl}}}}Bb}{{Aj{DlDh}}}}{{Dj{An{{Cl{Dl}}}}}{{Aj{DnDh}}}}444{cD`{}}0{c{{Aj{e}}}{}{}}00000{cDb{}}00````````{{E`{An{{Cl{Dl}}}}}{{Aj{EbEd}}}}`88888888{EfEf}{EdEd}{EbEb}{E`E`}{{ce}Ad{}{}}000{{EfEf}Af}{{}Eb}{Bbc{}}0000000{BbAd}000{{EfEf}j}{{EdEd}j}{{EbEb}j}{{EfBj}Bl}0{{EdBj}Bl}0{{EbBj}Bl}{{E`Bj}Bl}{cc{}}000{{Efc}AdBn}{{}Bb}000{ce{}{}}000{{}{{Aj{E`Ef}}}}{{EfEf}{{Cl{Af}}}}`2222{cD`{}}0{c{{Aj{e}}}{}{}}0000000{cDb{}}000``","c":[],"p":[[5,"Archiver",3],[1,"u8"],[5,"Vec",288],[5,"BlockObjectMapping",289],[1,"bool"],[5,"NewArchivedSegment",3],[6,"Segment",3],[6,"SegmentItem",3],[6,"ArchiverInstantiationError",3],[1,"unit"],[6,"Ordering",290],[5,"Error",291],[6,"Result",292],[10,"Input",293],[1,"slice"],[1,"u32"],[1,"usize"],[10,"Deserializer",294],[10,"Output",293],[10,"Sized",295],[5,"Formatter",296],[8,"Result",296],[10,"Hasher",297],[5,"Kzg",298],[5,"PieceArray",299],[5,"SegmentCommitment",300],[5,"Scalar",301],[5,"RecordWitness",299],[8,"BlockNumber",302],[6,"Option",303],[10,"Serializer",304],[5,"String",305],[5,"TypeId",306],[6,"SegmentHeader",302],[6,"ReconstructorInstantiationError",139],[6,"ReconstructorError",139],[5,"PiecesReconstructor",139],[5,"Piece",299],[5,"ArchivedHistorySegment",300],[5,"Reconstructor",203],[5,"ReconstructedContents",203],[6,"ReconstructorError",203],[6,"ReconstructorInstantiationError",203],[15,"InvalidBlockSmallSize",133],[15,"V0",135],[15,"Block",136],[15,"BlockStart",136],[15,"BlockContinuation",136],[15,"IncorrectSegmentOrder",286]],"b":[[77,"impl-Display-for-ArchiverInstantiationError"],[78,"impl-Debug-for-ArchiverInstantiationError"],[170,"impl-Display-for-ReconstructorInstantiationError"],[171,"impl-Debug-for-ReconstructorInstantiationError"],[172,"impl-Debug-for-ReconstructorError"],[173,"impl-Display-for-ReconstructorError"],[246,"impl-Display-for-ReconstructorInstantiationError"],[247,"impl-Debug-for-ReconstructorInstantiationError"],[248,"impl-Display-for-ReconstructorError"],[249,"impl-Debug-for-ReconstructorError"]]}],\
["subspace_core_primitives",{"doc":"Core primitives for Subspace Network.","t":"GFSIIIIFPTPFFFTTTTTTTTTFGTTTSPFFFFFFFFFFFSSSFFFFFFFFTTTTTTTTTTTTTTTFIFFGFIFIFPTTTTNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNONNOONNONONONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOFNNNNNNNNNNNNNNNNNNNNNNNTTFNNHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNFSFSSFFNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFGGFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOO","n":["ArchivedBlockProgress","ArchivedHistorySegment","BLAKE3_HASH_SIZE","Blake3Hash","BlockHash","BlockNumber","BlockWeight","ChunkWitness","Complete","ERASURE_CODING_RATE","EmptyVec","FlatPieces","HistorySize","LastArchivedBlock","MAX","MAX","MIDDLE","NUM_CHECKPOINTS","NUM_CHUNKS","NUM_CHUNKS","NUM_PIECES","NUM_RAW_RECORDS","NUM_S_BUCKETS","NonEmptyVec","NonEmptyVecErr","ONE","ONE","ONE","PUBLIC_KEY_LENGTH","Partial","Piece","PieceArray","PieceIndex","PieceOffset","PosProof","PosSeed","PotCheckpoints","PotKey","PotOutput","PotSeed","PublicKey","RANDOMNESS_LENGTH","REWARD_SIGNATURE_LENGTH","REWARD_SIGNING_CONTEXT","Randomness","RawRecord","Record","RecordCommitment","RecordWitness","RecordedHistorySegment","RewardSignature","SBucket","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SIZE","SectorId","SectorIndex","SectorSlotChallenge","SegmentCommitment","SegmentHeader","SegmentIndex","SlotNumber","Solution","SolutionRange","U256","V0","ZERO","ZERO","ZERO","ZERO","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","archived_progress","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","backward_checked","backward_checked","backward_checked","backward_checked","bidirectional_distance","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","checked_sub","checksum","chunk","chunk_witness","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","commitment","commitment_mut","crypto","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_into","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derive_evaluation_seed","derive_expiration_history_size","derive_global_challenge","derive_global_randomness","derive_piece_index","derive_sector_slot_challenge","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","first","first_piece_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","forward_checked","forward_checked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_be_bytes","from_bytes","from_genesis","from_hex","from_hex","from_hex","from_le_bytes","from_str","genesis_solution","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","history_size","in_pieces","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_reward_address_format","iter","iter_mut","key","last","last_archived_block","last_piece_index","len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","new","new","new","new","new","new_boxed","new_boxed","new_boxed","new_boxed","new_with_entry","new_zero_vec","number","objects","one","output","par_parity","par_parity_mut","par_source","par_source_mut","parity","parity_mut","partial","partial_archived","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","piece_offset","position","prev_segment_header_hash","proof_of_space","public_key","push","record","record_commitment","record_mut","record_witness","rem","reward_address","s_bucket_audit_index","saturating_add","saturating_mul","saturating_sub","sector_expiration_check","sector_index","seed","seed_with_entropy","segment_commitment","segment_index","segment_index","segment_index","segment_piece_indexes","segment_piece_indexes_source_first","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_complete","set_partial","set_partial_archived","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slice_from_repr","slice_mut_from_repr","slice_mut_to_repr","slice_to_repr","source","source_mut","split","split_mut","steps_between","steps_between","steps_between","steps_between","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_be_bytes","to_bytes","to_bytes","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_le_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","witness","witness_mut","wrapping_add","wrapping_sub","zero","last_archived_block","prev_segment_header_hash","segment_commitment","segment_index","Blake3Checksummed","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","encoded_size","fmt","from","init","into","size_hint","to_keyed_vec","to_owned","try_from","try_into","type_id","FULL_BYTES","SAFE_BYTES","Scalar","as_mut","as_ref","blake3_254_hash_to_scalar","blake3_hash","blake3_hash_list","blake3_hash_parallel","blake3_hash_with_key","borrow","borrow_mut","clone","clone_into","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","drop","encoded_fixed_size","encoded_size","eq","fmt","from","from","from","from","hash","init","into","kzg","max_encoded_len","partial_cmp","serialize","size_hint","slice_from_repr","slice_mut_from_repr","slice_mut_to_repr","slice_option_from_repr","slice_option_mut_from_repr","slice_option_mut_to_repr","slice_option_to_repr","slice_to_repr","to_bytes","to_keyed_vec","to_owned","try_from","try_from","try_from","try_into","type_id","type_info","using_encoded","vec_from_repr","vec_option_from_repr","vec_option_to_repr","vec_to_repr","Commitment","EMBEDDED_KZG_SETTINGS_BYTES","Kzg","NUM_G1_POWERS","NUM_G2_POWERS","Polynomial","Witness","as_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_to_kzg_settings","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit","create_witness","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","embedded_kzg_settings","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_fft_settings","init","init","init","init","into","into","into","into","new","normalize","poly","slice_from_repr","slice_mut_from_repr","slice_mut_to_repr","slice_option_from_repr","slice_option_mut_from_repr","slice_option_mut_to_repr","slice_option_to_repr","slice_to_repr","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_from_bytes","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vec_from_repr","vec_option_from_repr","vec_option_to_repr","vec_to_repr","verify","BlockObject","BlockObjectMapping","GlobalObject","PieceObject","PieceObjectMapping","V0","V0","V0","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","objects","objects","offset","offset","offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","piece_index","serialize","serialize","serialize","serialize","serialize","set_offset","size_hint","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","using_encoded","using_encoded","hash","offset","offset","piece_index","hash","offset"],"q":[[0,"subspace_core_primitives"],[1417,"subspace_core_primitives::SegmentHeader"],[1421,"subspace_core_primitives::checksum"],[1445,"subspace_core_primitives::crypto"],[1509,"subspace_core_primitives::crypto::kzg"],[1628,"subspace_core_primitives::objects"],[1796,"subspace_core_primitives::objects::BlockObject"],[1798,"subspace_core_primitives::objects::GlobalObject"],[1800,"subspace_core_primitives::objects::PieceObject"],[1802,"byte_slice_cast"],[1803,"core::result"],[1804,"byte_slice_cast"],[1805,"core::option"],[1806,"num_traits::ops::wrapping"],[1807,"core::cmp"],[1808,"core::cmp"],[1809,"parity_scale_codec::codec"],[1810,"parity_scale_codec::codec"],[1811,"parity_scale_codec::decode_finished"],[1812,"serde::de"],[1813,"serde::de"],[1814,"core::iter::traits::collect"],[1815,"parity_scale_codec::codec"],[1816,"parity_scale_codec::codec"],[1817,"core::fmt"],[1818,"core::convert"],[1819,"core::hash"],[1820,"core::convert"],[1821,"alloc::boxed"],[1822,"rayon::iter"],[1823,"core::iter::traits::exact_size"],[1824,"serde::ser"],[1825,"serde::ser"],[1826,"core::any"],[1827,"scale_info::ty"],[1828,"core::ops::function"],[1829,"rust_kzg_blst::types::fr"],[1830,"rust_kzg_blst::types::g1"],[1831,"rust_kzg_blst::types::kzg_settings"],[1832,"rust_kzg_blst::types::poly"],[1833,"rust_kzg_blst::types::fft_settings"],[1834,"alloc::sync"]],"d":["Progress of an archived block.","Archived history segment after archiving is applied.","Size of BLAKE3 hash output (in bytes).","BLAKE3 hash output","Block hash in Subspace network.","Block number in Subspace network.","BlockWeight type for fork choice rules.","Witness for chunk contained within a record.","The block has been fully archived.","Erasure coding rate for records during archiving process.","Tried to create with an empty Vec","Flat representation of multiple pieces concatenated for …","Size of blockchain history in segments.","Last archived block","Max s-bucket index","Maximum value.","The middle of the piece distance field. The analogue of …","Number of PoT checkpoints produced (used to optimize …","Number of chunks (scalars) within one raw record.","Number of chunks (scalars) within one record.","Number of pieces in one segment of archived history.","Number of raw records in one segment of recorded history.","Number of s-buckets contained within one record (and by …","A Vec&lt;&gt; that enforces the invariant that it cannot be …","Error codes for <code>NonEmptyVec</code>.","Piece index 1.","Piece index 1.","Segment index 1.","Length of public key in bytes.","Number of partially archived bytes of a block.","A piece of archival history in Subspace Network.","A piece of archival history in Subspace Network.","Piece index in consensus","Piece offset in sector","Proof of space proof bytes.","Proof of space seed.","Proof of time checkpoints, result of proving","Proof of time key(input to the encryption).","Proof of time output, can be intermediate checkpoint or …","Proof of time seed","A Ristretto Schnorr public key as bytes produced by …","Byte length of a randomness type.","Length of signature in bytes","Signing context used for creating reward signatures by …","Type of randomness.","Raw record contained within recorded history segment …","Record contained within a piece.","Record commitment contained within a piece.","Record witness contained within a piece.","Recorded history segment before archiving is applied.","A Ristretto Schnorr signature as bytes produced by …","S-bucket used in consensus","Size in bytes.","Size of raw record in bytes, is guaranteed to be a …","Size of a segment record given the global piece size (in …","Size of record commitment in bytes.","Size of record witness in bytes.","Size of chunk witness in bytes.","Size of a piece (in bytes).","Size of segment commitment in bytes.","Size of recorded history segment in bytes.","Size of archived history segment in bytes.","Size of proof of space seed in bytes.","Size of proof of space proof in bytes.","Size of proof of time key in bytes","Size of proof of time seed in bytes","Size of proof of time proof in bytes","Data structure representing sector ID in farmer’s plot","Sector index in consensus","Challenge used for a particular sector for particular slot","Segment commitment contained within segment header.","Segment header for a specific segment.","Segment index type.","Slot number in Subspace network.","Farmer solution for slot challenge.","Type of solution range.","256-bit unsigned integer","V0 of the segment header data structure","S-bucket 0.","Piece index 0.","Piece index 0.","Segment index 0.","","","","","","","","","","Progress of an archived block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the slice of the entries.","","","","","","","","","","","","","","","","","","","Bidirectional distance metric implemented on top of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Checked integer subtraction. Computes <code>self - rhs</code>, …","Subtracts two numbers, checking for underflow. If …","Module containing wrapper for SCALE encoding/decoding with …","Chunk at above offset","Witness for above chunk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commitment contained within a piece.","Mutable commitment contained within a piece.","Various cryptographic utilities used across Subspace …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We assume a block can always fit into the segment …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derive evaluation seed","Derive history size when sector created at <code>history_size</code> …","Derive global slot challenge from global randomness.","Derives the global randomness from the output","Derive piece index that should be stored in sector at …","Derive sector slot challenge for this sector from provided …eturns the first entry.","Get the first piece index in this segment.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create from big endian bytes","Create piece index from bytes.","Derive initial PoT seed from genesis block hash","","","","Create from little endian bytes","","Dummy solution for the genesis block","","","","","","","","","","","","","Proof hash.","","","","Public key hash.","","","","","Hash of the whole segment header","","","","","Size of the blockchain history at time of sector creation","Size of blockchain history in pieces.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract internal representation.","Transform solution with one reward address type into …","Returns an iterator for the entries.","Returns a mutable iterator for the entries.","Derive key from proof of time seed","Returns the last entry.","Last archived block","Get the last piece index in this segment.","Returns the number of entries.","","","","","","","","","","","","","","","","","","","","","","","","","","","Allocate <code>FlatPieces</code> that will hold <code>piece_count</code> pieces …","Create new instance","Create new instance.","Create new sector ID by deriving it from public key and …","Creates the Vec.","Create boxed value without hitting stack overflow","Create boxed value without hitting stack overflow","Create boxed value without hitting stack overflow","Create boxed value without hitting stack overflow","Creates the Vec with the entry.","Create vector filled with zeroe records without hitting …","Block number","Data structures related to objects (useful data) stored on …","One (multiplicative identity) of this type.","Get proof of time output out of checkpoints (last …","Parallel iterator over parity pieces (odd indices).","Mutable parallel iterator over parity pieces (odd indices).","Parallel iterator over source pieces (even indices).","Mutable parallel iterator over source pieces (even …","Iterator over parity pieces (odd indices).","Mutable iterator over parity pieces (odd indices).","Return the number of partially archived bytes if the …","Returns the number of partially archived bytes for a block.","","","","","","","","","","","","","","","","Pieces offset within sector","Position of a piece in a segment","Hash of the segment header of the previous segment","Proof of space for piece offset","Public key of the farmer that created the solution","Adds an entry to the end.","Record contained within a piece.","Record commitment that can use used to verify that piece …","Mutable record contained within a piece.","Witness for above record commitment","","Address for receiving block reward","Index of s-bucket within sector to be audited","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction. Computes <code>self - other</code>, saturating …","History size at which expiration check for sector happens.","Index of the sector where solution was found","Derive seed from proof of time in case entropy injection …","Derive seed from proof of time with entropy injection","Segment commitment of the records in a segment.","Segment index piece index corresponds to","Segment index that corresponds to this history size.","Segment index","List of piece indexes that belong to this segment.","List of piece indexes that belong to this segment with …","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the archived state of this block to …","Sets new number of partially archived bytes.","Sets new number of partially archived bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convenient conversion from slice of underlying …","Convenient conversion from mutable slice of underlying …","Convenient conversion from mutable slice of record to …","Convenient conversion from slice of record to underlying …","Iterator over source pieces (even indices).","Mutable iterator over source pieces (even indices).","Split piece into underlying components.","Split piece into underlying mutable components.","","","","","","","","","","","","","","Convert to big endian bytes","Convert piece index to bytes.","Convert piece offset to bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert to little endian bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the entries in the collection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Witness contained within a piece.","Mutable witness contained within a piece.","","","Zero (additive identity) of this type.","Last archived block","Hash of the segment header of the previous segment","Root of commitments of all records in a segment.","Segment index","Wrapper data structure that when encoded/decoded will …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","How many bytes Scalar contains physically, use …","How many full bytes can be stored in BLS12-381 scalar (for …","Representation of a single BLS12-381 scalar value.","","","BLAKE3 hashing of a single value truncated to 254 bits.","BLAKE3 hashing of a single value.","BLAKE3 hashing of a list of values.","BLAKE3 hashing of a single value in parallel (only useful …","BLAKE3 keyed hashing of a single value.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Tools for KZG commitment scheme","","","","","Convenient conversion from slice of underlying …","Convenient conversion from mutable slice of underlying …","Convenient conversion from mutable slice of scalar to …","Convenient conversion from slice of optional underlying …","Convenient conversion from optional mutable slice of …","Convenient conversion from optional mutable slice of …","Convenient conversion from slice of optional scalar to …","Convenient conversion from slice of scalar to underlying …","Convert scalar into bytes","","","","","","","","","","Convenient conversion from vector of underlying …","Convenient conversion from vector of optional underlying …","Convenient conversion from vector of optional scalar to …","Convenient conversion from vector of scalar to underlying …","Commitment to polynomial","Embedded KZG settings as bytes, too big for <code>no_std</code> in most …","Wrapper data structure for working with KZG commitment …","Number of G1 powers stored in <code>EMBEDDED_KZG_SETTINGS_BYTES</code>","Number of G2 powers stored in <code>EMBEDDED_KZG_SETTINGS_BYTES</code>","Commitment to polynomial","Witness for polynomial evaluation","","","","","","","","","","","","","Function turns bytes into <code>FsKZGSettings</code>, it is up to the …","","","","","","","","","Computes a <code>Commitment</code> to <code>polynomial</code>","Computes a <code>Witness</code> of evaluation of <code>polynomial</code> at <code>index</code>","","","","","","","","","","","","","","","","","","","Embedded KZG settings","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Get FFT settings for specified number of values, uses …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new instance with given KZG settings.","Normalize polynomial by removing trailing zeroes","Create polynomial from data. Data must be multiple of 32 …","Convenient conversion from slice of underlying …","Convenient conversion from mutable slice of underlying …","Convenient conversion from mutable slice of commitment to …","Convenient conversion from slice of optional underlying …","Convenient conversion from optional mutable slice of …","Convenient conversion from optional mutable slice of …","Convenient conversion from slice of optional commitment to …","Convenient conversion from slice of commitment to …","Convert commitment to raw bytes","Convert witness to raw bytes","","","","","","","","","","","","","","","","","","","","","Try to deserialize commitment from raw bytes","Try to deserialize witness from raw bytes","","","","","","","","","Convenient conversion from vector of underlying …","Convenient conversion from vector of optional underlying …","Convenient conversion from vector of optional commitment …","Convenient conversion from vector of commitment to …","Verifies that <code>value</code> is the evaluation at <code>index</code> of the …","Object stored inside of the block","Mapping of objects stored inside of the block","Object stored inside in the history of the blockchain","Object stored inside of the block","Mapping of objects stored inside of the piece","V0 of object mapping data structure","V0 of object mapping data structure","V0 of object mapping data structure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Object hash","","","","Object hash","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Objects stored inside of the block","Objects stored inside of the block","Offset of object in the encoded block.","Offset of the object","Offset of the object","","","","","","Piece index where object is contained (at least its …","","","","","","Sets new offset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Object hash","Offset of object in the encoded block.","Offset of the object","Piece index where object is contained (at least its …","Object hash","Offset of the object"],"i":[0,0,0,0,0,0,0,0,41,19,70,0,0,0,1,5,5,40,9,10,37,19,10,0,0,2,3,4,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,9,10,11,12,13,14,18,19,37,38,39,21,22,23,0,0,0,0,0,0,0,0,0,0,43,1,2,3,4,1,2,3,4,5,1,2,3,4,42,9,10,11,12,13,14,15,17,18,19,20,27,28,29,9,10,11,12,13,14,15,15,17,18,19,20,21,22,23,9,10,11,12,13,14,15,17,18,19,20,9,10,11,12,13,14,15,17,18,19,20,9,10,11,12,13,14,15,15,17,18,19,20,21,22,23,27,28,29,30,9,10,11,12,13,14,15,17,18,19,20,27,28,29,1,2,3,4,0,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,70,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,70,5,5,5,4,5,0,44,44,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,1,2,3,14,15,17,4,36,27,28,41,42,5,45,29,15,15,0,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,41,42,43,44,5,29,30,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,41,42,43,44,5,29,30,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,41,42,43,44,5,29,30,1,2,3,11,12,13,15,4,18,36,37,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,41,42,43,44,5,29,30,1,2,3,9,10,11,12,13,14,15,17,4,18,19,37,20,39,21,22,23,40,27,41,5,1,2,3,9,9,10,10,11,11,12,12,13,13,14,14,15,15,17,17,4,18,18,36,36,19,19,37,37,20,20,38,38,39,39,21,21,22,22,23,23,40,40,27,27,28,28,41,42,43,44,5,45,45,29,30,70,1,2,3,9,9,10,10,11,11,12,12,13,13,14,14,15,15,17,17,4,18,18,36,36,19,19,37,37,20,38,39,39,21,21,22,22,23,23,40,40,27,28,41,42,43,44,5,45,29,30,70,29,29,20,23,29,29,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,27,28,41,42,43,44,29,1,2,3,4,5,1,2,3,4,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,70,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,5,29,30,9,10,11,12,13,14,15,17,18,19,20,27,28,29,9,10,11,12,13,14,15,17,18,19,20,27,28,29,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,41,42,43,44,5,29,30,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,30,4,1,1,2,2,3,3,9,10,11,12,13,14,15,17,4,4,18,36,36,19,37,20,38,39,21,21,22,22,23,23,40,27,27,28,41,42,43,44,5,5,45,29,30,70,1,2,3,4,1,1,2,2,3,3,9,10,11,11,11,12,12,12,13,13,13,14,14,15,17,17,4,4,18,18,18,36,36,36,19,37,20,20,38,38,39,39,21,21,22,22,23,23,40,27,27,28,28,41,42,43,44,5,5,5,5,5,5,45,29,30,70,5,2,22,15,17,39,5,21,44,1,2,3,11,12,13,14,15,17,4,18,36,39,22,23,40,27,27,28,41,42,43,43,5,45,29,44,36,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,70,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,70,17,44,30,30,22,30,43,4,30,1,2,3,11,12,13,15,4,18,36,37,20,39,21,22,23,40,1,2,3,4,5,1,2,3,4,17,4,36,29,30,9,10,15,19,30,10,42,0,5,40,17,17,17,17,17,17,41,42,1,2,3,14,15,17,4,36,27,28,41,42,5,45,29,44,2,43,44,44,30,15,44,15,44,5,44,45,5,5,5,36,44,23,23,43,2,36,43,4,4,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,27,28,41,42,43,44,29,42,41,42,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,41,42,43,44,5,29,30,10,10,10,10,17,17,15,15,1,2,3,4,1,2,3,4,5,1,2,3,4,5,2,3,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,41,42,43,44,5,29,30,5,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,1,2,3,4,36,21,22,23,27,5,30,1,1,2,3,9,10,11,11,12,12,13,13,14,14,14,15,17,4,18,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,70,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,70,1,2,3,9,10,11,12,13,14,15,17,4,18,36,19,37,20,38,39,21,22,23,40,27,28,41,42,43,44,5,45,29,30,70,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,41,42,43,44,5,29,1,2,3,11,12,13,14,15,17,4,18,36,37,20,39,21,22,23,40,27,28,5,29,30,15,15,5,5,5,109,109,109,109,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,95,95,0,95,95,0,0,0,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,0,0,0,0,0,72,73,72,73,99,72,73,100,99,72,73,100,0,99,72,73,100,99,72,73,100,100,100,72,73,99,72,72,73,73,100,99,72,72,73,73,100,99,72,73,100,0,72,73,99,72,73,100,99,99,72,72,73,73,100,100,99,72,73,100,99,72,73,100,100,99,100,72,72,72,72,72,72,72,72,72,73,99,72,73,100,99,72,72,72,72,72,72,72,73,73,73,73,73,73,73,100,72,73,99,72,73,100,99,72,73,100,72,72,72,72,100,0,0,0,0,0,104,106,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,105,107,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,105,107,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,104,105,106,106,107,108,104,105,106,107,108,104,105,106,107,108,105,107,104,106,108,104,105,106,107,108,108,104,105,106,107,108,104,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,105,107,110,110,111,111,112,112],"f":"``````````````````````````````````````````````````````````````````````````````````{{bb}b}{{dd}d}{{ff}f}{{hh}h}{{jj}j}{{bb}l}{{dd}l}{{ff}l}{{hh}l}`{c{{A`{n}}}{}}0000000000000{Ab{{A`{n}}}}{Ad{{A`{n}}}}{Af{{A`{n}}}}{Ah{{A`{n}}}}{Aj{{A`{n}}}}{Al{{A`{n}}}}{An{{A`{n}}}}{An{{B`{n}}}}{Bb{{A`{n}}}}{Bd{{A`{n}}}}{Bf{{A`{n}}}}{Bh{{A`{n}}}}{Bj{{B`{n}}}}{Bl{{B`{n}}}}{Bn{{B`{n}}}}???????????{c{{Cb{{A`{e}}C`}}}{}Cd}0000000000?>=<;:897654321{Cf{{A`{n}}}}{Ch{{A`{n}}}}{Cj{{A`{n}}}}{{{Cl{c}}}{{A`{c}}}Cn}44444444444444{{bD`}{{Db{b}}}}{{dD`}{{Db{d}}}}{{fD`}{{Db{f}}}}{{hD`}{{Db{h}}}}{{cc}c{DdDf}}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000{{jj}{{Db{j}}}}00{{hh}{{Db{h}}}}1```{bb}{dd}{ff}{AbAb}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{BbBb}{hh}{BdBd}{DhDh}{BfBf}{DjDj}{BhBh}{DlDl}{DnDn}{BjBj}{BlBl}{BnBn}{E`E`}{CfCf}{ChCh}{EbEb}{EdEd}{EfEf}{{{Eh{ce}}}{{Eh{ce}}}CnCn}{jj}{EjEj}{CjCj}{{{Cl{c}}}{{Cl{c}}}Cn}{{ce}l{}{}}00000000000000000000000000000000{{bb}El}{{dd}El}{{ff}El}{{AlAl}El}{{AnAn}El}{{BbBb}El}{{hh}El}{{DhDh}El}{{CfCf}El}{{ChCh}El}{{EbEb}El}{{EdEd}El}{{jj}El}{{EjEj}El}{{CjCj}El}{AnAf}0`{c{{Cb{bEn}}}F`}{c{{Cb{dEn}}}F`}{c{{Cb{fEn}}}F`}{c{{Cb{AfEn}}}F`}{c{{Cb{AhEn}}}F`}{c{{Cb{AjEn}}}F`}{c{{Cb{AlEn}}}F`}{c{{Cb{AnEn}}}F`}{c{{Cb{BbEn}}}F`}{c{{Cb{hEn}}}F`}{c{{Cb{BdEn}}}F`}{c{{Cb{DhEn}}}F`}{c{{Cb{DjEn}}}F`}{c{{Cb{BhEn}}}F`}{c{{Cb{DnEn}}}F`}{c{{Cb{BjEn}}}F`}{c{{Cb{BlEn}}}F`}{c{{Cb{BnEn}}}F`}{c{{Cb{E`En}}}F`}{c{{Cb{CfEn}}}F`}{c{{Cb{ChEn}}}F`}{c{{Cb{EbEn}}}F`}{c{{Cb{EdEn}}}F`}{c{{Cb{EfEn}}}F`}{c{{Cb{{Eh{eg}}En}}}F`FbFb}{c{{Cb{jEn}}}F`}{c{{Cb{CjEn}}}F`}{c{{Cb{{Cl{e}}En}}}F`{}}{{{A`{n}}}{{Cb{cEn}}}{}}000000000000000000000000000{{Fd{A`{n}}}{{Cb{cEn}}}{}}000000000000000000000000000{{c{Ff{b}}}{{Cb{FhEn}}}F`}{{c{Ff{d}}}{{Cb{FhEn}}}F`}{{c{Ff{f}}}{{Cb{FhEn}}}F`}{{c{Ff{Af}}}{{Cb{FhEn}}}F`}{{c{Ff{Ah}}}{{Cb{FhEn}}}F`}{{c{Ff{Aj}}}{{Cb{FhEn}}}F`}{{c{Ff{An}}}{{Cb{FhEn}}}F`}{{c{Ff{h}}}{{Cb{FhEn}}}F`}{{c{Ff{Bd}}}{{Cb{FhEn}}}F`}{{c{Ff{Dh}}}{{Cb{FhEn}}}F`}{{c{Ff{Dj}}}{{Cb{FhEn}}}F`}{{Fdc}{{Cb{eEn}}}F`{}}000000000000000000000000000{{}b}{{}d}{{}f}{{}Ab}{{}Ad}{{}Af}{{}Ah}{{}Aj}{{}Al}{{}An}{{}Bb}{{}h}{{}Bd}{{}Bf}{{}Dj}{{}Bh}{{}Dn}{{}Bj}{{}Bl}{{}Bn}{{}E`}{{}Cf}{{}Eb}{{}j}{D`c{}}000{Abc{}}1{Adc{}}2{Afc{}}{Ahc{}}44{Ajc{}}{Alc{}}66{Anc{}}7{Bbc{}}8{Bdc{}}9{Dhc{}}:{Bfc{}};{Djc{}}<<{Bhc{}}{Dlc{}}>>{Dnc{}}{Bjc{}}{D`c{}}{Blc{}}1{Bnc{}}22{E`c{}}3{Cfc{}}4{Chc{}}555555{Ejc{}}6666666{Abc{}}{Adc{}}8{Afc{}}9{Ahc{}}:{Ajc{}};{Alc{}}<<{Anc{}}{Bbc{}}>>{Bdc{}}??{Dhc{}}{D`c{}}{Bfc{}}{Djc{}}2222{Dnc{}}3{Bjc{}}{Blc{}}55{Bnc{}}{E`c{}}777777777777{{CjfDh}Dl}{{CjDhBdDh}{{Db{Dh}}}}{{BhFj}Fl}{BnBh}{{CjfDhFnDh{G`{DhDh}}}d}{{CjFl}Ej}{c{{Cb{b}}}Gb}{c{{Cb{d}}}Gb}{c{{Cb{f}}}Gb}{c{{Cb{Af}}}Gb}{c{{Cb{Ah}}}Gb}{c{{Cb{Aj}}}Gb}{c{{Cb{Al}}}Gb}{c{{Cb{An}}}Gb}{c{{Cb{Bb}}}Gb}{c{{Cb{h}}}Gb}{c{{Cb{Bd}}}Gb}{c{{Cb{Dh}}}Gb}{c{{Cb{Dj}}}Gb}{c{{Cb{Bh}}}Gb}{c{{Cb{Dn}}}Gb}{c{{Cb{Bj}}}Gb}{c{{Cb{Bl}}}Gb}{c{{Cb{Bn}}}Gb}{c{{Cb{Cf}}}Gb}{c{{Cb{Ch}}}Gb}{c{{Cb{Eb}}}Gb}{c{{Cb{Ed}}}Gb}{c{{Cb{Ef}}}Gb}{c{{Cb{{Eh{eg}}}}}GbGdGd}{c{{Cb{Cj}}}Gb}{{bc}b{}}{{dc}d{}}{{fc}f{}}{{hc}h{}}{{jc}j{}}{{bc}l{}}{{dc}l{}}{{fc}l{}}{{hc}l{}}{D`l}000000000000000000000000000000000{b{{Gf{n}}}}{d{{Gf{n}}}}{f{{Gf{n}}}}{Af{{Gf{n}}}}{Ah{{Gf{n}}}}{Aj{{Gf{n}}}}{Al{{Gf{n}}}}{An{{Gf{n}}}}{Bb{{Gf{n}}}}{h{{Gf{n}}}}{Bd{{Gf{n}}}}{Dh{{Gf{n}}}}{Dj{{Gf{n}}}}{Bh{{Gf{n}}}}{Dn{{Gf{n}}}}{Bj{{Gf{n}}}}{Bl{{Gf{n}}}}{Bn{{Gf{n}}}}{E`{{Gf{n}}}}{Cf{{Gf{n}}}}{Ch{{Gf{n}}}}{j{{Gf{n}}}}{Cj{{Gf{n}}}}{{{Cl{c}}}{{Gf{n}}}{}}{ce{}{{Gj{Gh}}}}000000000000000000000000000{{bc}l{GlGn}}{{dc}l{GlGn}}{{fc}l{GlGn}}{{Afc}l{GlGn}}{{Ahc}l{GlGn}}{{Ajc}l{GlGn}}{{Alc}l{GlGn}}{{Anc}l{GlGn}}{{Bbc}l{GlGn}}{{hc}l{GlGn}}{{Bdc}l{GlGn}}{{Dhc}l{GlGn}}{{Djc}l{GlGn}}{{Bhc}l{GlGn}}{{Dnc}l{GlGn}}{{Bjc}l{GlGn}}{{Blc}l{GlGn}}{{Bnc}l{GlGn}}{{E`c}l{GlGn}}{{Cfc}l{GlGn}}{{Chc}l{GlGn}}{{Ebc}l{GlGn}}{{Edc}l{GlGn}}{{Efc}l{GlGn}}{{{Eh{ce}}g}lH`H`{GlGn}}{{jc}l{GlGn}}{{Cjc}l{GlGn}}{{{Cl{c}}e}l{}{GlGn}}{{bb}Hb}{{dd}Hb}{{ff}Hb}{{AbAb}Hb}{{AdAd}Hb}{{AfAf}Hb}{{AhAh}Hb}{{AjAj}Hb}{{AlAl}Hb}{{AnAn}Hb}{{BbBb}Hb}{{hh}Hb}{{BdBd}Hb}{{DhDh}Hb}{{BfBf}Hb}{{DjDj}Hb}{{BhBh}Hb}{{DlDl}Hb}{{DnDn}Hb}{{BjBj}Hb}{{BlBl}Hb}{{BnBn}Hb}{{E`E`}Hb}{{CfCf}Hb}{{ChCh}Hb}{{EbEb}Hb}{{EdEd}Hb}{{EfEf}Hb}{{{Eh{ce}}{Eh{ce}}}HbHdHd}{{jj}Hb}{{EjEj}Hb}{{CjCj}Hb}{{{Cl{c}}{Cl{c}}}HbHd}{{{Cl{c}}}cCn}{hd}{{bHf}Hh}0{{dHf}Hh}0{{fHf}Hh}0{{AbHf}Hh}{{AdHf}Hh}{{AfHf}Hh}{{AhHf}Hh}{{AjHf}Hh}{{AlHf}Hh}{{AnHf}Hh}{{BbHf}Hh}{{hHf}Hh}0{{BdHf}Hh}{{DhHf}Hh}0{{BfHf}Hh}{{DjHf}Hh}{{BhHf}Hh}{{DlHf}Hh}{{DnHf}Hh}{{BjHf}Hh}0{{BlHf}Hh}0{{BnHf}Hh}0{{E`Hf}Hh}{{CfHf}Hh}0{{ChHf}Hh}{{EbHf}Hh}{{EdHf}Hh}{{EfHf}Hh}{{{Eh{ce}}Hf}HhHjHj}{{jHf}Hh}0{{EjHf}Hh}{{CjHf}Hh}{{{Cl{c}}Hf}HhHj}{{HlHf}Hh}{{bD`}{{Db{b}}}}{{dD`}{{Db{d}}}}{{fD`}{{Db{f}}}}{{hD`}{{Db{h}}}}{cc{}}{Fnb}{Hnd}22{Fnf}333{I`Af}{{{B`{n}}}Af}{IbAh}{{{B`{n}}}Ah}7{{{B`{n}}}Aj}{IbAj}9{AnAl}::{AnBb};{Hnh}<{{{B`{n}}}Bd}{I`Bd}>>{IdDh}{hDh}{cc{}}0{{{B`{n}}}Bh}1{{{B`{n}}}Dl}2{{{B`{n}}}Dn}3{{{B`{n}}}Bj}44{{{B`{n}}}Bl}5{{{B`{n}}}Bn}6{{{B`{n}}}Cf}77{{{B`{n}}}Ch}8888{nj}9{Fnj}{Fdj}{Ifj}{Hnj}===={{{B`{n}}}j}{{{B`{n}}}d}{{{A`{n}}{A`{n}}}Bl}{c{{Cb{Ane}}}{{Ih{{A`{n}}}}}{}}{c{{Cb{Bbe}}}{{Ih{{A`{n}}}}}{}}{c{{Cb{Dne}}}{{Ih{{A`{n}}}}}{}}5{Ij{{Cb{Bjc}}}{}}{{ce}{{Eh{ce}}}{}{}}{{bc}lIl}{{dc}lIl}{{fc}lIl}{{Afc}lIl}{{Ahc}lIl}{{Ajc}lIl}{{Alc}lIl}{{Anc}lIl}{{Bbc}lIl}{{hc}lIl}{{Bdc}lIl}{{Dhc}lIl}{DnFl}{{Blc}lIl}{{Bnc}lIl}{{E`c}lIl}{CfFl}{{Cfc}lIl}{{Chc}lIl}{{Ebc}lIl}{{Edc}lIl}{EfFl}{{Efc}lIl}{{jc}lIl}{{Ejc}lIl}{{Cjc}lIl}`{DhId}{{}D`}000000000000000000000000000000000{ce{}{}}000000000000000000000000000000000{Bb{{Gf{An}}}}{{{Eh{ci}}}{{Eh{ce}}}{}{}{{In{e}}}{{In{g}}}}{{{Cl{c}}}{{Jb{J`}}}Cn}0{BlBj}{{{Cl{c}}}cCn}{EfEd}{hd}{{{Cl{c}}}D`Cn}99999999999999999{{bc}b{}}{{dc}d{}}{{fc}f{}}{{hc}h{}}{{jc}j{}}{{bc}l{}}{{dc}l{}}{{fc}l{}}{{hc}l{}}{D`Bb}{Hnh}{IdDh}{{FlJd}Cj}{{{Gf{c}}}{{Cb{{Cl{c}}Hl}}}Cn}{{}{{Jb{Ab}}}}{{}{{Jb{Ad}}}}{{}{{Jb{An}}}}{{}{{Jb{Bf}}}}{c{{Cl{c}}}Cn}{D`{{Gf{Ad}}}}``{{}j}{E`Bn}{Bb{{`{{Jh{}{{Jf{An}}}}}}}}000{Bb{{`{{Jj{}{{Jf{An}}}}}}}}0{Eb{{Db{Fd}}}}{Ed{{Db{Fd}}}}{{bb}{{Db{El}}}}{{dd}{{Db{El}}}}{{ff}{{Db{El}}}}{{AlAl}{{Db{El}}}}{{AnAn}{{Db{El}}}}{{BbBb}{{Db{El}}}}{{hh}{{Db{El}}}}{{DhDh}{{Db{El}}}}{{CfCf}{{Db{El}}}}{{ChCh}{{Db{El}}}}{{EbEb}{{Db{El}}}}{{EdEd}{{Db{El}}}}{{jj}{{Db{El}}}}{{EjEj}{{Db{El}}}}{{CjCj}{{Db{El}}}}`{dFd}{EfFl}``{{{Cl{c}}c}lCn}{AnAd}`0`{{jc}j{}}`{Ejb}{{jj}j}00{{DhDh}{{Db{Dh}}}}`{BnBl}{{BnFl}Bl}{EfBd}{dh}{Dhh}{Efh}{h{{B`{d}}}}0{{bc}CbJl}{{dc}CbJl}{{fc}CbJl}{{Afc}CbJl}{{Ahc}CbJl}{{Ajc}CbJl}{{Alc}CbJl}{{Anc}CbJl}{{Bbc}CbJl}{{hc}CbJl}{{Bdc}CbJl}{{Dhc}CbJl}{{Djc}CbJl}{{Bhc}CbJl}{{Dnc}CbJl}{{Bjc}CbJl}{{Blc}CbJl}{{Bnc}CbJl}{{Cfc}CbJl}{{Chc}CbJl}{{Ebc}CbJl}{{Edc}CbJl}{{Efc}CbJl}{{{Eh{ce}}g}CbJnJnJl}{{Cjc}CbJl}{Edl}{{EbFd}l}{{EdK`}l}{bD`}{dD`}{fD`}{AfD`}{AhD`}{AjD`}{AlD`}{AnD`}{BbD`}{hD`}{BdD`}{DhD`}{DjD`}{BhD`}{DnD`}{BjD`}{BlD`}{BnD`}{E`D`}{CfD`}{ChD`}{EbD`}{EdD`}{EfD`}{{{Eh{ce}}}D`H`H`}{jD`}{CjD`}{{{Cl{c}}}D`{}}{{{A`{{B`{n}}}}}{{A`{Ad}}}}0{{{A`{Ad}}}{{A`{{B`{n}}}}}}0{Bb{{`{{Jj{}{{Jf{An}}}}}}}}0{An{{G`{AdAfAh}}}}0{{bb}{{Db{D`}}}}{{dd}{{Db{D`}}}}{{ff}{{Db{D`}}}}{{hh}{{Db{D`}}}}{{bb}b}{{dd}d}{{ff}f}{{hh}h}{{jj}j}{{bb}l}{{dd}l}{{ff}l}{{hh}l}{j{{B`{n}}}}{d{{B`{n}}}}{f{{B`{n}}}}{{c{A`{n}}}{{Gf{n}}}{}}0000000000000000000000000003{ce{}{}}00000000000000000000000000000000{cKb{}}000000000{{{Cl{c}}}{{Gf{c}}}Cn}{D`{{Cb{bc}}}{}}{c{{Cb{e}}}{}{}}00000{{{A`{n}}}{{Cb{Afc}}}{}}{{{A`{n}}}{{Cb{Ahc}}}{}}2{{{A`{n}}}{{Cb{Ajc}}}{}}33{{{Gf{n}}}{{Cb{Alc}}}{}}{{{A`{n}}}{{Cb{Alc}}}{}}555{{{A`{n}}}{{Cb{Bdc}}}{}}66666666666666666666666666666666666666666666666666666666{cKd{}}000000000000000000000000000000000{{}Kf}00000000000000000000000000{{be}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{de}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{fe}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Afe}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Ahe}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Aje}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Ale}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Ane}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Bbe}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{he}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Bde}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Dhe}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Dje}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Bhe}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Dne}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Bje}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Ble}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Bne}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{E`e}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Cfe}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Che}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{je}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Cje}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{{Cl{c}}g}e{}{}{{Kj{{A`{n}}}{{Kh{e}}}}}}{AnAh}0{{jj}j}0{{}j}`````{ce{}{}}0{{{Kl{c}}}{{Kl{c}}}Cn}{{ce}l{}{}}{c{{Cb{{Kl{e}}En}}}F`Fb}{{{A`{n}}}{{Cb{cEn}}}{}}{{Fd{A`{n}}}{{Cb{cEn}}}{}}{{Fdc}{{Cb{eEn}}}F`{}}{D`c{}}0{D`l}{{{Kl{c}}e}lH`{GlGn}}{{{Kl{c}}}D`H`}{{{Kl{c}}Hf}HhHj}{cc{}}{{}D`}=3{{c{A`{n}}}{{Gf{n}}}{}}>{c{{Cb{e}}}{}{}}0{cKd{}}```{KnL`}0{{{A`{n}}}Kn}{{{A`{n}}}Fl}{{{A`{{A`{n}}}}}Fl}1{{{B`{n}}{A`{n}}}Fl}{ce{}{}}0{KnKn}{{ce}l{}{}}{{KnKn}El}{c{{Cb{KnEn}}}F`}{{{A`{n}}}{{Cb{cEn}}}{}}{{Fd{A`{n}}}{{Cb{cEn}}}{}}{{Fdc}{{Cb{eEn}}}F`{}}{{}Kn}{D`c{}}{Knc{}}01{c{{Cb{Kn}}}Gb}{D`l}{{}{{Db{D`}}}}{KnD`}{{KnKn}Hb}{{KnHf}Hh}{L`Kn}{{{B`{n}}}Kn}0{cc{}}{{Knc}lIl}{{}D`}{ce{}{}}`1{{KnKn}{{Db{El}}}}{{Knc}CbJl}:{{{A`{L`}}}{{A`{Kn}}}}0{{{A`{Kn}}}{{A`{L`}}}}{{{A`{{Db{L`}}}}}{{A`{{Db{Kn}}}}}}0{{{A`{{Db{Kn}}}}}{{A`{{Db{L`}}}}}}02{Kn{{B`{n}}}}{{c{A`{n}}}{{Gf{n}}}{}}8{{{B`{n}}}{{Cb{Knc}}}{}}{c{{Cb{e}}}{}{}}10{cKd{}}{{}Kf}{{Kne}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{{Gf{L`}}}{{Gf{Kn}}}}{{{Gf{{Db{L`}}}}}{{Gf{{Db{Kn}}}}}}{{{Gf{{Db{Kn}}}}}{{Gf{{Db{L`}}}}}}{{{Gf{Kn}}}{{Gf{L`}}}}```````{I`Lb}{IbLb}10{ce{}{}}0000000{{{A`{n}}D`D`}{{Cb{LdKb}}}}{LfLf}{I`I`}{IbIb}{LhLh}{{ce}l{}{}}000{{LhLf}{{Cb{I`Kb}}}}{{LhLfD`Fd}{{Cb{IbKb}}}}{{}I`}{{}Ib}{D`c{}}{I`c{}}11{Ibc{}}2221202{D`l}000{{}Ld}{{I`I`}Hb}{{IbIb}Hb}{{LfHf}Hh}{{I`Hf}Hh}{{IbHf}Hh}{{LhHf}Hh}{LjLf}{cc{}}0{LbI`}{LbIb}22{{LhD`}{{Cb{{Ln{Ll}}Kb}}}}{{}D`}000{ce{}{}}000{LdLh}{Lfl}{{Lh{A`{Kn}}}{{Cb{LfKb}}}}{{{A`{Lb}}}{{A`{I`}}}}0{{{A`{I`}}}{{A`{Lb}}}}{{{A`{{Db{Lb}}}}}{{A`{{Db{I`}}}}}}0{{{A`{{Db{I`}}}}}{{A`{{Db{Lb}}}}}}02{I`{{B`{n}}}}{Ib{{B`{n}}}}9999{c{{Cb{e}}}{}{}}{Af{{Cb{I`c}}}{}}{{{B`{n}}}{{Cb{I`c}}}{}}2{Bd{{Cb{I`c}}}{}}210{{{B`{n}}}{{Cb{Ibc}}}{}}{Ah{{Cb{Ibc}}}{}}{Aj{{Cb{Ibc}}}{}}20616{{{B`{n}}}{{Cb{I`Kb}}}}{{{B`{n}}}{{Cb{IbKb}}}}8888{cKd{}}000{{{Gf{Lb}}}{{Gf{I`}}}}{{{Gf{{Db{Lb}}}}}{{Gf{{Db{I`}}}}}}{{{Gf{{Db{I`}}}}}{{Gf{{Db{Lb}}}}}}{{{Gf{I`}}}{{Gf{Lb}}}}{{LhI`D`FdKnIb}Hb}````````{ce{}{}}000000000{M`M`}{MbMb}{MdMd}{MfMf}{MhMh}{{ce}l{}{}}0000{{M`M`}El}{{MbMb}El}{{MdMd}El}{{MfMf}El}{{MhMh}El}{c{{Cb{M`En}}}F`}{c{{Cb{MbEn}}}F`}{c{{Cb{MdEn}}}F`}{c{{Cb{MfEn}}}F`}{c{{Cb{MhEn}}}F`}{{{A`{n}}}{{Cb{cEn}}}{}}0000{{Fd{A`{n}}}{{Cb{cEn}}}{}}0000{{Fdc}{{Cb{eEn}}}F`{}}0000{{}Mb}{{}Mf}{D`c{}}000000000{c{{Cb{M`}}}Gb}{c{{Cb{Mb}}}Gb}{c{{Cb{Md}}}Gb}{c{{Cb{Mf}}}Gb}{c{{Cb{Mh}}}Gb}{D`l}0000{Mb{{Gf{n}}}}{Mf{{Gf{n}}}}{{M`c}l{GlGn}}{{Mbc}l{GlGn}}{{Mdc}l{GlGn}}{{Mfc}l{GlGn}}{{Mhc}l{GlGn}}{{M`M`}Hb}{{MbMb}Hb}{{MdMd}Hb}{{MfMf}Hb}{{MhMh}Hb}{{M`Hf}Hh}{{MbHf}Hh}{{MdHf}Hh}{{MfHf}Hh}{{MhHf}Hh}{cc{}}0000{M`Fl}{{M`c}lIl}{{Mbc}lIl}{{Mdc}lIl}{MdFl}{{Mfc}lIl}{{Mhc}lIl}{{}D`}0000{ce{}{}}0000``{M`Fd}{MdFd}{MhFd}{{M`M`}{{Db{El}}}}{{MbMb}{{Db{El}}}}{{MdMd}{{Db{El}}}}{{MfMf}{{Db{El}}}}{{MhMh}{{Db{El}}}}{Mhd}{{M`c}CbJl}{{Mbc}CbJl}{{Mdc}CbJl}{{Mfc}CbJl}{{Mhc}CbJl}{{M`Fd}l}{M`D`}{MbD`}{MdD`}{MfD`}{MhD`}{{c{A`{n}}}{{Gf{n}}}{}}0000{ce{}{}}0000{c{{Cb{e}}}{}{}}000000000{cKd{}}0000{{}Kf}0000{{Mbe}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}{{Mfe}c{}{{Kj{{A`{n}}}{{Kh{c}}}}}}``````","c":[],"p":[[5,"SBucket",0],[5,"PieceIndex",0],[5,"PieceOffset",0],[5,"SegmentIndex",0],[5,"U256",0],[1,"unit"],[1,"u8"],[1,"slice"],[5,"RawRecord",0],[5,"Record",0],[5,"RecordCommitment",0],[5,"RecordWitness",0],[5,"ChunkWitness",0],[5,"Piece",0],[5,"PieceArray",0],[1,"array"],[5,"FlatPieces",0],[5,"SegmentCommitment",0],[5,"RecordedHistorySegment",0],[5,"Randomness",0],[5,"PotKey",0],[5,"PotSeed",0],[5,"PotOutput",0],[6,"Error",1802],[6,"Result",1803],[10,"FromByteSlice",1802],[5,"PublicKey",0],[5,"RewardSignature",0],[5,"SectorId",0],[5,"NonEmptyVec",0],[10,"Clone",1804],[1,"usize"],[6,"Option",1805],[10,"WrappingSub",1806],[10,"Ord",1807],[5,"HistorySize",0],[5,"ArchivedHistorySegment",0],[5,"PosSeed",0],[5,"PosProof",0],[5,"PotCheckpoints",0],[6,"ArchivedBlockProgress",0],[5,"LastArchivedBlock",0],[6,"SegmentHeader",0],[5,"Solution",0],[5,"SectorSlotChallenge",0],[6,"Ordering",1807],[5,"Error",1808],[10,"Input",1809],[10,"Decode",1809],[1,"u32"],[20,"MaybeUninit",1810],[5,"DecodeFinished",1811],[8,"SlotNumber",0],[8,"Blake3Hash",0],[1,"u16"],[1,"tuple"],[10,"Deserializer",1812],[10,"Deserialize",1812],[5,"Vec",1813],[1,"char"],[10,"FromIterator",1814],[10,"Output",1809],[10,"Sized",1815],[10,"Encode",1809],[1,"bool"],[10,"PartialEq",1807],[5,"Formatter",1816],[8,"Result",1816],[10,"Debug",1816],[6,"NonEmptyVecErr",0],[1,"u64"],[5,"Commitment",1509],[5,"Witness",1509],[8,"NonZeroU64",1817],[1,"u128"],[10,"AsRef",1818],[1,"str"],[10,"Hasher",1819],[10,"Into",1818],[10,"Iterator",1820],[5,"Box",1821],[8,"SectorIndex",0],[17,"Item"],[10,"IndexedParallelIterator",1822],[10,"ExactSizeIterator",1823],[10,"Serializer",1824],[10,"Serialize",1824],[8,"BlockNumber",0],[5,"String",1825],[5,"TypeId",1826],[5,"Type",1827],[17,"Output"],[10,"FnOnce",1828],[5,"Blake3Checksummed",1421],[5,"Scalar",1445],[5,"FsFr",1829],[5,"FsG1",1830],[5,"FsKZGSettings",1831],[5,"Polynomial",1509],[5,"Kzg",1509],[5,"FsPoly",1832],[5,"FsFFTSettings",1833],[5,"Arc",1834],[6,"BlockObject",1628],[5,"BlockObjectMapping",1628],[6,"PieceObject",1628],[5,"PieceObjectMapping",1628],[6,"GlobalObject",1628],[15,"V0",1417],[15,"V0",1796],[15,"V0",1798],[15,"V0",1800]],"b":[[112,"impl-AsMut%3C%5Bu8%5D%3E-for-PieceArray"],[113,"impl-AsMut%3C%5Bu8;+Piece::SIZE%5D%3E-for-PieceArray"],[149,"impl-AsRef%3C%5Bu8;+Piece::SIZE%5D%3E-for-PieceArray"],[150,"impl-AsRef%3C%5Bu8%5D%3E-for-PieceArray"],[784,"impl-Display-for-SBucket"],[785,"impl-Debug-for-SBucket"],[786,"impl-Display-for-PieceIndex"],[787,"impl-Debug-for-PieceIndex"],[788,"impl-Debug-for-PieceOffset"],[789,"impl-Display-for-PieceOffset"],[798,"impl-Display-for-SegmentIndex"],[799,"impl-Debug-for-SegmentIndex"],[801,"impl-Debug-for-HistorySize"],[802,"impl-Display-for-HistorySize"],[808,"impl-Debug-for-PotKey"],[809,"impl-Display-for-PotKey"],[810,"impl-Debug-for-PotSeed"],[811,"impl-Display-for-PotSeed"],[812,"impl-Display-for-PotOutput"],[813,"impl-Debug-for-PotOutput"],[815,"impl-Debug-for-PublicKey"],[816,"impl-Display-for-PublicKey"],[822,"impl-Debug-for-U256"],[823,"impl-Display-for-U256"],[841,"impl-From%3CCommitment%3E-for-RecordCommitment"],[842,"impl-From%3C%5Bu8;+RecordCommitment::SIZE%5D%3E-for-RecordCommitment"],[843,"impl-From%3CWitness%3E-for-RecordWitness"],[844,"impl-From%3C%5Bu8;+RecordWitness::SIZE%5D%3E-for-RecordWitness"],[846,"impl-From%3C%5Bu8;+ChunkWitness::SIZE%5D%3E-for-ChunkWitness"],[847,"impl-From%3CWitness%3E-for-ChunkWitness"],[856,"impl-From%3C%5Bu8;+SegmentCommitment::SIZE%5D%3E-for-SegmentCommitment"],[857,"impl-From%3CCommitment%3E-for-SegmentCommitment"],[860,"impl-From%3CNonZero%3Cu64%3E%3E-for-HistorySize"],[861,"impl-From%3CSegmentIndex%3E-for-HistorySize"],[885,"impl-From%3Cu8%3E-for-U256"],[887,"impl-From%3Cu16%3E-for-U256"],[888,"impl-From%3Cu32%3E-for-U256"],[889,"impl-From%3Cu128%3E-for-U256"],[890,"impl-From%3Cu64%3E-for-U256"],[920,"impl-PublicKey"],[921,"impl-Hash-for-PublicKey"],[925,"impl-SegmentHeader"],[926,"impl-Hash-for-SegmentHeader"],[1265,"impl-TryFrom%3CVec%3Cu8%3E%3E-for-Piece"],[1266,"impl-TryFrom%3C%26%5Bu8%5D%3E-for-Piece"],[1475,"impl-From%3CFsFr%3E-for-Scalar"],[1476,"impl-From%3C%26%5Bu8;+Self::SAFE_BYTES%5D%3E-for-Scalar"],[1477,"impl-From%3C%5Bu8;+Self::SAFE_BYTES%5D%3E-for-Scalar"],[1498,"impl-TryFrom%3C%5Bu8;+Self::FULL_BYTES%5D%3E-for-Scalar"],[1500,"impl-TryFrom%3C%26%5Bu8;+Self::FULL_BYTES%5D%3E-for-Scalar"],[1598,"impl-TryFrom%3CRecordCommitment%3E-for-Commitment"],[1599,"impl-TryFrom%3C%26%5Bu8;+Self::SIZE%5D%3E-for-Commitment"],[1601,"impl-TryFrom%3C%26SegmentCommitment%3E-for-Commitment"],[1602,"impl-TryFrom%3C%26RecordCommitment%3E-for-Commitment"],[1603,"impl-TryFrom%3C%5Bu8;+Self::SIZE%5D%3E-for-Commitment"],[1604,"impl-TryFrom%3CSegmentCommitment%3E-for-Commitment"],[1605,"impl-TryFrom%3C%5Bu8;+Self::SIZE%5D%3E-for-Witness"],[1606,"impl-TryFrom%3C%26RecordWitness%3E-for-Witness"],[1607,"impl-TryFrom%3C%26ChunkWitness%3E-for-Witness"],[1608,"impl-TryFrom%3C%26%5Bu8;+Self::SIZE%5D%3E-for-Witness"],[1609,"impl-TryFrom%3CChunkWitness%3E-for-Witness"],[1611,"impl-TryFrom%3CRecordWitness%3E-for-Witness"],[1725,"impl-BlockObject"],[1726,"impl-Hash-for-BlockObject"],[1728,"impl-Hash-for-PieceObject"],[1729,"impl-PieceObject"]]}],\
["subspace_erasure_coding",{"doc":"","t":"FNNNNNNNNNNNNNNNNNNNNNN","n":["ErasureCoding","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","extend","extend_commitments","fmt","from","init","into","max_shards","new","recover","recover_poly","recover_source","to_owned","try_from","try_into","type_id"],"q":[[0,"subspace_erasure_coding"],[23,"subspace_core_primitives::crypto"],[24,"alloc::vec"],[25,"alloc::string"],[26,"core::result"],[27,"subspace_core_primitives::crypto::kzg"],[28,"core::fmt"],[29,"core::fmt"],[30,"core::option"],[31,"subspace_core_primitives::crypto::kzg"],[32,"core::any"]],"d":["Erasure coding abstraction.","","","","","","","","Extend sources using erasure coding.","Extend commitments using erasure coding.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Max number of shards supported (both source and parity …","Create new erasure coding instance.","Recovery of missing shards from given shards (at least 1/2 …","Recovery of missing shards from given shards (at least 1/2 …","Recovery of source shards from given shards (at least 1/2 …","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0{bb}{{ce}d{}{}}{fc{}}0{fd}{{b{j{h}}}{{A`{{l{h}}n}}}}{{b{j{Ab}}}{{A`{{l{Ab}}n}}}}{{bAd}Af}{cc{}}{{}f}9{bf}{Ah{{A`{bn}}}}{{b{j{{Aj{h}}}}}{{A`{{l{h}}n}}}}{{b{j{{Aj{h}}}}}{{A`{Aln}}}}{{b{j{{Aj{h}}}}}{{A`{{`{{B`{}{{An{h}}}}}}n}}}}>{c{{A`{e}}}{}{}}0{cBb{}}","c":[],"p":[[5,"ErasureCoding",0],[1,"unit"],[1,"usize"],[5,"Scalar",23],[1,"slice"],[5,"Vec",24],[5,"String",25],[6,"Result",26],[5,"Commitment",27],[5,"Formatter",28],[8,"Result",28],[8,"NonZeroUsize",29],[6,"Option",30],[5,"Polynomial",27],[17,"Item"],[10,"ExactSizeIterator",31],[5,"TypeId",32]],"b":[]}],\
["subspace_farmer",{"doc":"<code>subspace-farmer</code> library implementation overview","t":"FSEFENNNNNNNNNNNNNNNNNNCNCNNNNNNNNENNCNNNNCNNNCNNNNNCNNNNNNNNNNCNNPPFPFPPPPPPPPPKIGGGPIKPPPGPPKFKKPPFGPGGGPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNMMNMMMNMMMMMMMMMOMONNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMOOOOOOOOOFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIKKMMMMMMMMMMHPGPPPPPPPPPPPPPPPPPPPPEEPPPPPPPPPPPTPPPPPTPPGPPFGGFFGGPPPPPNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNOOOCOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONONNONNNNNNCNNOCNNNCNNNNNNOONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFFNNNNNNNNNNNNNONNNNNNNOONOCOOOOONNNNNNNNNNNFNNNNNNNNNNNNNNNNNPPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFNNNNNNNNNNNNNNNNNNNPFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSFNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNFFHNNNNNNNHNNNNNNNCNNNNNNNNNHCNCNHHNHCHNHNNNNNNNNNNNNFFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNPPPPPGNNNNNNNNNNHNNNNNN","n":["Identity","KNOWN_PEERS_CACHE_SIZE","NodeClient","NodeRpcClient","RpcClientError","acknowledge_archived_segment_header","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","deref","deref","deref","deref_mut","deref_mut","drop","drop","entropy","farm","farmer_app_info","farmer_cache","file_size","fmt","from","from","init","init","into","into","jsonrpsee","last_segment_headers","new","node_client","open","open_or_create","piece","public_key","reward_signing","secret_key","segment_headers","sign_reward_hash","single_disk_farm","submit_reward_signature","submit_solution_response","subscribe_archived_segment_headers","subscribe_reward_signing","subscribe_slot_info","thread_pool_manager","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","utils","vzip","vzip","AboutToExpire","Auditing","AuditingDetails","Decoded","DecodedFarmingError","Determined","Downloaded","Downloading","Encoded","Encoding","Expiration","Expired","FailedToGetFarmerInfo","FailedToSubscribeSlotInfo","Farm","FarmError","FarmId","FarmingError","FarmingNotification","Finished","HandlerFn","HandlerId","Io","LowLevelAuditing","LowLevelProving","MaybePieceStoredResult","No","NonFatalError","PieceCache","PieceCacheOffset","PieceReader","PlotCache","Plotting","Proving","ProvingDetails","ProvingResult","Rejected","SectorExpirationDetails","SectorPlottingDetails","SectorUpdate","SlotNotificationStreamEnded","Starting","Success","Timeout","Ulid","Vacant","Writing","Written","Yes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","contents","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","detach","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","is_fatal","is_piece_maybe_stored","max_num_elements","new","on_farming_notification","on_sector_update","on_solution","partial_cmp","piece_cache","piece_reader","plot_cache","plotted_sectors","plotted_sectors_count","read_piece","read_piece","read_piece","read_piece_index","result","run","sectors_count","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","str_variant","time","time","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","total_sectors_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_store_piece","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_piece","error","error","expires_at","last_queued","old_plotted_sector","plotted_sector","progress","replotting","time","FarmerCache","FarmerCacheWorker","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_piece","init","init","into","into","maybe_store_additional_piece","new","on_sync_progress","record","replace_backing_caches","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","Error","NodeClient","NodeClientExt","acknowledge_archived_segment_header","farmer_app_info","last_segment_headers","piece","segment_headers","submit_reward_signature","submit_solution_response","subscribe_archived_segment_headers","subscribe_reward_signing","subscribe_slot_info","reward_signing","BackgroundDownloadingPanicked","BackgroundTaskError","BackgroundTaskPanicked","CacheCantBeOpened","CacheFileDoesNotExist","CantPreallocateMetadataFile","CantPreallocatePlotFile","Error","FailedToCreateThreadPool","FailedToDecodeMetadataHeader","FailedToDecodeMetadataHeader","FailedToDetermineFileSize","FailedToGetFarmerInfo","FailedToGetSegmentHeader","FailedToOpenIdentity","FailedToReadBytes","FailedToSubscribeArchivedSegments","FailedToWriteBytes","FarmInfoCantBeOpened","FarmInfoFileDoesNotExist","FarmTooLarge","Farming","FarmingError","FarmingNotification","Found","IdentityCantBeOpened","IdentityFileDoesNotExist","IdentityMismatch","InsufficientAllocatedSpace","InvalidPiecesInSector","Io","Io","LikelyAlreadyInUse","LikelyAlreadyInUse","LowLevel","METADATA_FILE","MetadataCantBeOpened","MetadataFileDoesNotExist","MetadataFileTooSmall","MissingArchivedSegmentHeader","NotFound","PLOT_FILE","PieceCacheError","Plotting","PlottingError","PublicKeyMismatch","RewardSigning","SingleDiskFarm","SingleDiskFarmError","SingleDiskFarmInfo","SingleDiskFarmInfoLock","SingleDiskFarmOptions","SingleDiskFarmScrubError","SingleDiskFarmSummary","TokioJoinError","UnexpectedMetadataVersion","UnexpectedMetadataVersion","V0","WrongChain","allocated_space","allocated_space","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_percentage","clone","clone_into","collect_summary","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","directory","disable_farm_locking","downloading_semaphore","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","erasure_coding","farm_during_initial_plotting","farmer_app_info","farming","farming_thread_pool_size","faster_read_sector_record_chunks_mode_barrier","faster_read_sector_record_chunks_mode_concurrency","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis_hash","global_mutex","id","id","id","info","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","kzg","load_from","max_pieces_in_sector","new","new","node_client","on_farming_notification","on_farming_notification","on_sector_update","on_sector_update","on_solution","on_solution","piece_cache","piece_cache","piece_cache","piece_getter","piece_reader","piece_reader","piece_reader","pieces_in_sector","plot_cache","plot_cache","plot_cache","plotted_sectors","plotted_sectors","plotted_sectors_count","plotted_sectors_count","plotting_delay","plotting_thread_pool_manager","public_key","read_all_sectors_metadata","record_encoding_concurrency","reward_address","run","run","scrub","serialize","source","source","source","store_to","to_owned","to_string","to_string","to_string","to_string","total_sectors_count","total_sectors_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbuffered_io_file_windows","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","task","error","error","error","segment_index","allocated_sectors","allocated_space","allocated_space","correct_chain","correct_public_key","id","id","id","initialized_with","max_sectors","max_space","max_supported","min_space","wrong_chain","wrong_public_key","allocated_space","genesis_hash","id","pieces_in_sector","public_key","error","error","error","error","error","error","error","file","file","file","file","file","file","file","file","file","file","file","file","identity","info","offset","offset","reserved_size","size","size","size","directory","directory","directory","error","info","PlotAudit","PlotAuditOptions","audit","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","erasure_coding","fmt","from","from","init","init","into","into","kzg","maybe_sector_being_modified","new","public_key","rayon_files","read_sector_record_chunks_mode","reward_address","sectors_metadata","slot_info","table_generator","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","RayonFiles","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","open","open_with","read_at","read_at","try_from","try_into","type_id","unique_saturated_into","vzip","CantPreallocateCacheFile","ChecksumMismatch","DiskPieceCache","DiskPieceCacheError","Io","OffsetOutsideOfRange","ZeroCapacity","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","contents","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","init","init","into","into","max_num_elements","read_piece","read_piece_index","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","write_piece","max","provided","DiskPieceReader","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","read_piece","read_piece","to_owned","try_from","try_into","type_id","unique_saturated_into","vzip","ChecksumMismatch","DiskPlotCache","DiskPlotCacheError","Io","TokioJoinError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","into","into","is_piece_maybe_stored","read_piece","source","to_owned","to_string","try_from","try_from","try_into","try_into","try_store_piece","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","DISK_SECTOR_SIZE","UnbufferedIoFileWindows","advise_random_access","advise_sequential_access","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","open","preallocate","read_at","read_at","read_exact_at","set_len","size","try_from","try_into","type_id","unique_saturated_into","vzip","write_all_at","PlottingThreadPoolManager","PlottingThreadPoolPair","PlottingThreadPoolsGuard","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","get_thread_pools","init","init","init","into","into","into","new","plotting","replotting","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","AsyncJoinOnDrop","CpuCoreSet","all_cpu_cores","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cpu_cores","create_plotting_thread_pool_manager","deref","deref","deref_mut","deref_mut","drop","drop","drop","farmer_piece_getter","fmt","from","from","init","init","into","into","into_future","new","parse_cpu_cores_sets","piece_validator","pin_current_thread","plotted_pieces","poll","rayon_custom_spawn_handler","recommended_number_of_farming_threads","regroup","run_future_in_dedicated_thread","ss58","thread_pool_core_indices","to_owned","tokio_rayon_spawn_handler","truncate","try_from","try_from","try_into","try_into","try_poll","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","DsnCacheRetryPolicy","FarmerPieceGetter","WeakFarmerPieceGetter","backoff","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","downgrade","drop","drop","drop","fmt","fmt","from","from","from","get_piece","get_piece","get_piece_fast","get_piece_slow","init","init","init","into","into","into","max_retries","new","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","upgrade","vzip","vzip","vzip","SegmentCommitmentPieceValidator","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","new","to_owned","try_from","try_into","type_id","unique_saturated_into","validate_piece","vzip","PlottedPieces","add_sector","borrow","borrow_mut","contains_piece","delete_sector","deref","deref_mut","drop","fmt","from","init","into","new","piece_indices","read_piece","try_from","try_into","type_id","unique_saturated_into","vzip","BadBase58","BadLength","FormatNotAllowed","InvalidChecksum","InvalidPrefix","Ss58ParsingError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","parse_ss58_reward_address","to_string","try_from","try_into","type_id","unique_saturated_into","vzip"],"q":[[0,"subspace_farmer"],[66,"subspace_farmer::farm"],[445,"subspace_farmer::farm::FarmingError"],[447,"subspace_farmer::farm::SectorExpirationDetails"],[448,"subspace_farmer::farm::SectorPlottingDetails"],[454,"subspace_farmer::farmer_cache"],[494,"subspace_farmer::node_client"],[507,"subspace_farmer::reward_signing"],[508,"subspace_farmer::single_disk_farm"],[777,"subspace_farmer::single_disk_farm::BackgroundTaskError"],[778,"subspace_farmer::single_disk_farm::PlottingError"],[782,"subspace_farmer::single_disk_farm::SingleDiskFarmError"],[797,"subspace_farmer::single_disk_farm::SingleDiskFarmInfo"],[802,"subspace_farmer::single_disk_farm::SingleDiskFarmScrubError"],[829,"subspace_farmer::single_disk_farm::SingleDiskFarmSummary"],[834,"subspace_farmer::single_disk_farm::farming"],[878,"subspace_farmer::single_disk_farm::farming::rayon_files"],[896,"subspace_farmer::single_disk_farm::piece_cache"],[943,"subspace_farmer::single_disk_farm::piece_cache::DiskPieceCacheError"],[945,"subspace_farmer::single_disk_farm::piece_reader"],[965,"subspace_farmer::single_disk_farm::plot_cache"],[1009,"subspace_farmer::single_disk_farm::unbuffered_io_file_windows"],[1035,"subspace_farmer::thread_pool_manager"],[1089,"subspace_farmer::utils"],[1142,"subspace_farmer::utils::farmer_piece_getter"],[1201,"subspace_farmer::utils::piece_validator"],[1220,"subspace_farmer::utils::plotted_pieces"],[1241,"subspace_farmer::utils::ss58"],[1264,"subspace_core_primitives::segments"],[1265,"core::future::future"],[1266,"alloc::boxed"],[1267,"core::pin"],[1268,"core::result"],[1269,"std::path"],[1270,"core::convert"],[1271,"core::fmt"],[1272,"core::fmt"],[1273,"core::option"],[1274,"subspace_core_primitives::pieces"],[1275,"schnorrkel::keys"],[1276,"schnorrkel::keys"],[1277,"schnorrkel::sign"],[1278,"subspace_rpc_primitives"],[1279,"subspace_rpc_primitives"],[1280,"core::cmp"],[1281,"parity_scale_codec::error"],[1282,"parity_scale_codec::codec"],[1283,"core::mem::maybe_uninit"],[1284,"parity_scale_codec::decode_finished"],[1285,"serde::de"],[1286,"parity_scale_codec::codec"],[1287,"subspace_farmer_components::auditing"],[1288,"subspace_farmer_components::proving"],[1289,"std::io::error"],[1290,"ulid"],[1291,"core::hash"],[1292,"libp2p_kad::record"],[1293,"subspace_core_primitives"],[1294,"alloc::sync"],[1295,"subspace_core_primitives::pieces"],[1296,"core::error"],[1297,"alloc::string"],[1298,"subspace_core_primitives::pieces"],[1299,"core::fmt"],[1300,"core::ops::function"],[1301,"libp2p_kad::record"],[1302,"std::path"],[1303,"tokio::runtime::task::error"],[1304,"std::io::error"],[1305,"core::marker"],[1306,"subspace_farmer_components::sector"],[1307,"anyhow"],[1308,"subspace_core_primitives"],[1309,"std::fs"],[1310,"core::num::nonzero"],[1311,"rayon_core"],[1312,"core::ops::function"],[1313,"core::iter::traits::exact_size"],[1314,"tokio::runtime::task::join"],[1315,"core::task::wake"],[1316,"core::task::poll"],[1317,"rayon_core::registry"],[1318,"futures_channel::oneshot"],[1319,"subspace_networking::utils::piece_provider"],[1320,"subspace_networking::utils::piece_provider"],[1321,"subspace_networking::node"],[1322,"subspace_core_primitives::crypto::kzg"]],"d":["<code>Identity</code> struct is an abstraction of public &amp; secret key …","Size of the LRU cache for peers.","","<code>WsClient</code> wrapper.","","","","","","","","","","","Creates new identity, overrides identity that might …","","","","","","","","Returns entropy used to generate keypair.","","","","Size of the identity file on disk","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new instance of <code>NodeClient</code>.","","Opens the existing identity, returns <code>Ok(None)</code> if it doesn…","Opens the existing identity, or creates a new one.","","Returns the public key of the identity.","","Returns the secret key of the identity.","","Sign reward hash.","","Submit a block signature","","","","","","","","","","","","","","","","","","","Sector will expire at the next segment index and should be …","Auditing","Auditing details","Decoded farming error","Special decoded farming error","Sector expiration became known","Downloaded sector pieces","Downloading sector pieces","Encoded sector pieces","Encoding sector pieces","Sector expiration information updated","Sector already expired","Failed to retrieve farmer info","Failed to subscribe to slot info notifications","Abstract farm implementation","Erased error type","An identifier for a farm, can be used for in logs, thread …","Errors that happen during farming","Various farming notifications","Finished plotting","","Opaque handler ID for event handlers, once dropped handler …","I/O error occurred","Low-level auditing error","Low-level proving error","","Definitely not stored","Non-fatal farming error","Abstract piece cache implementation","Offset wrapper for pieces in <code>PieceCache</code>","Abstract piece reader implementation","Abstract plot cache implementation","Sector is being plotted","Proving","Proving details","Result of the proving","Managed to prove within time limit, but node rejected …","Details about sector expiration","Details about sector currently being plotted","Various sector updates","Slot info notification stream ended","Starting plotting of a sector","Proved successfully and accepted by the node","Proving took too long","Farm ID","Maybe has vacant slot to store","Writing sector","Written sector","Maybe still stored","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contents of this piece cache.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes <code>HandlerId</code> and prevents handler from being removed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","ID of this farm","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this error is fatal and makes farm unusable","Check if piece is potentially stored in this cache (not …","Max number of elements in this cache","Creates new ID","Subscribe to farming notifications","Subscribe to sector updates","Subscribe to new solution notification","","Get piece cache instance","Get piece reader to read plotted pieces later","Get plot cache instance","Read information about sectors plotted so far","Number of sectors successfully plotted so far","Read piece from cache at specified offset.","Read piece from cache.","Read piece from sector by offset, <code>None</code> means input …","Read piece index from cache at specified offset.","Whether proving ended up being successful","Run and wait for background threads to exit or return an …","Number of sectors that were audited","","","","","","","","","","","","","String variant of the error, primarily for monitoring …","Audit duration","Audit duration","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of sectors in this farm","","","","","","","","","","","","","","","","","","","","","","","","","Store piece in cache if there is free space, otherwise …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Store piece in cache at specified offset, replacing …","Lower-level error","Lower-level error","Segment index at which sector expires","Whether this is the last sector queued so far","Information about old plotted sector that was replaced","Information about plotted sector","Progress so far in % (not including this sector)","Whether sector is being replotted","How much time it took to plot a sector","Farmer cache that aggregates different kinds of caches of …","Farmer cache worker used to drive the farmer cache backend","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get piece from cache","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Try to store a piece in additional downloaded pieces, if …","Create new piece cache instance and corresponding worker.","Subscribe to cache sync notifications","","Initialize replacement of backing caches","Run the cache worker with provided piece getter.","","","","","","","","","","","","Erased error type","Abstraction of the Node Client","Node Client extension methods that are not necessary for …","Acknowledge segment header.","Get farmer app info","Get the last segment headers.","Get piece by index.","Get segment headers for the segments","Submit a block signature","Submit a slot solution","Subscribe to archived segment headers","Subscribe to block signing request","Subscribe to slot","","Background downloading panicked","Errors that happen in background tasks","Background task panicked","Cache can’t be opened","Cache file does not exist","Can’t preallocate metadata file, probably not enough …","Can’t preallocate plot file, probably not enough space …","Failed to open farm","Failed to create thread pool","Failed to decode metadata header","Failed to decode metadata header","Failed to determine file size","Failed to retrieve farmer info","Failed to get segment header","Failed to open or create identity","Failed to read bytes from file","Failed to subscribe to archived segments","Failed to write bytes from file","Farm info can’t be opened","Farm info file does not exist","Farm is too large","Farming error","","","Farm was found and read successfully","Identity can’t be opened","Identity file does not exist","Public key in identity doesn’t match metadata","Allocated space is not enough for one sector","Invalid number pieces in sector","I/O error occurred","I/O error occurred","Farm is likely already in use, make sure no other farmer …","Farm is likely already in use, make sure no other farmer …","Low-level plotting error","","Metadata can’t be opened","Metadata file does not exist","Metadata file too small","Missing archived segment header","Farm was not found","","Piece cache error","Plotting error","Errors that happen during plotting","Identity public key doesn’t match public key in the disk …","Reward signing","Single disk farm abstraction is a container for everything …","Errors happening when trying to create/open single disk …","Important information about the contents of the …","Exclusive lock for single disk farm info file, ensuring no …","Options used to open single disk farm","Errors happening during scrubbing","Summary of single disk farm for presentational purposes","Failed to spawn task for blocking thread","Unexpected metadata version","Unexpected metadata version","V0 of the info","Wrong chain (genesis hash)","How much space in bytes is allocated for this farm","How much space in bytes was allocated","","","","","","","","","","","","","","","","","","","Percentage of allocated space dedicated for caching …","","","Collect summary of single disk farm for presentational …","","","","","","","","","","","","","","","","","","","","Path to directory where farm is stored.","Disable farm locking, for example if file system doesn’t …","Semaphore for part of the plotting when farmer downloads …","","","","","","","","","","","Erasure coding instance to use.","Whether to farm during initial plotting","Information necessary for farmer application","","Thread pool size used for farming (mostly for blocking …","Barrier before internal benchmarking between different …","Limit concurrency of internal benchmarking between …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Global mutex that can restrict concurrency of …","","ID of this farm","","Info of this farm","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kzg instance to use.","Load <code>SingleDiskFarm</code> from path is supposed to be stored, …","How many pieces one sector is supposed to contain (max)","Create new single disk farm instance","","RPC client connected to Subspace node","","Subscribe to farming notifications","","Subscribe to sector updates","Subscribe to new solution notification","","","","Get piece cache instance","Piece receiver implementation for plotting purposes.","","Get piece reader to read plotted pieces later","","How many pieces does one sector contain.","","","Get plot cache instance","","Read information about sectors plotted so far","Number of sectors successfully plotted so far","","Notification for plotter to start, can be used to delay …","Thread pool manager used for plotting","","Read all sectors metadata","Defines how many record farmer will encode in a single …","Address where farming rewards should go","","Run and wait for background threads to exit or return an …","Check the farm for corruption and repair errors (caused by …","","","","","Store <code>SingleDiskFarm</code> info to path, so it can be loaded …","","","","","","","Number of sectors in this farm","","","","","","","","","","","","","","","","","","","Try to acquire exclusive lock on the single disk farm info …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wipe everything that belongs to this single disk farm","","Lower-level error","Lower-level error","Lower-level error","Segment index that was missing","","Current allocated space","","Hex-encoded genesis hash during farm creation","Public key used during farm creation","Farm ID","Farm ID","Farm ID","Number of pieces in sector farm is initialized with","","","Max supported pieces in sector","Minimal allocated space","Hex-encoded current genesis hash","Current public key","How much space in bytes is allocated for this farm","Genesis hash of the chain used for farm creation","ID of the farm","How many pieces does one sector contain.","Public key of identity used for farm creation","Low-level error","Low-level error","Low-level error","Low-level error","Low-level error","Low-level error","Low-level error","Affected file","Affected file","Affected file","Info file","Info file","Identity file","Identity file","Metadata file","Metadata file","Metadata file","Cache file","Cache file","Identity public key","Disk farm info public key","Offset in the file","Offset in the file","Reserved size","Number of bytes to read","Number of bytes to read","File size","Path to directory where farm is stored.","Path to directory where farm is stored.","Path to directory where farm is stored.","Error itself","Farm info","Plot auditing implementation","Plot audit options","","","","","","","","","","","","","","Erasure coding instance","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kzg instance","Optional sector that is currently being modified (for …","Create new instance","Public key of the farm","","Mode of reading chunks during proving","Reward address to use for solutions","Metadata of all sectors plotted so far","Slot info for the audit","Proof of space table generator","","","","","","","","","","","","Wrapper data structure for multiple files to be used with …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Open file at specified path as many times as there is …","Open file at specified path as many times as there is …","","","","","","","","Can’t preallocate cache file, probably not enough space …","Checksum mismatch","Dedicated piece cache stored on one disk, is used both to …","Disk piece cache open error","I/O error occurred","Offset outsize of range","Cache size has zero capacity, this is not supported","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Max offset","Provided offset","Wrapper data structure that can be used to read pieces …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Read piece from sector by offset, <code>None</code> means input …","","","","","","","Checksum mismatch","Additional piece cache that exploit part of the plot that …","Disk plot cache open error","I/O error occurred","Failed to spawn task for blocking thread","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","4096 is as a relatively safe size due to sector size on …","Wrapper data structure for unbuffered I/O on Windows.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Open file at specified path for random unbuffered access …","","","","","Truncates or extends the underlying file, updating the …","","","","","","","","Plotting thread pool manager.","A wrapper around thread pool pair for plotting purposes","Wrapper around <code>PlottingThreadPoolPair</code> that on <code>Drop</code> will …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get one of inner thread pool pairs, will wait until one is …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new thread pool manager by instantiating …","","","","","","","","","","","","","","","","","","","Joins async join handle on drop","Abstraction for CPU core set","Get all cpu cores, grouped into sets according to NUMA …","","","","","","","Get cpu core numbers in this set","Creates thread pool pairs for each of CPU core set pair …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create new instance.","Parse space-separated set of groups of CPU cores …","","Pin current thread to this NUMA node (not just one CPU …","","","This function is supposed to be used with …","Recommended number of thread pool size for farming, equal …","Regroup CPU core sets to contain at most <code>target_sets</code> sets, …","Runs future on a dedicated thread with the specified name, …","Modified version of SS58 parser extracted from Substrate …","Thread indices for each thread pool","","This function is supposed to be used with …","Will truncate list of CPU cores to this number.","","","","","","","","","","","","Retry policy for getting pieces from DSN cache","","Weak farmer piece getter, can be upgraded to …","Exponential backoff between retries","","","","","","","","","","","","","","","","","Downgrade to <code>WeakFarmerPieceGetter</code> in order to break …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Fast way to get piece using various caches","Slow way to get piece using archival storage","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Max number of retries when trying to get piece from DSN …","","","","","","","","","","","","","","","","Try to upgrade to <code>FarmerPieceGetter</code> if there is at least …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Wrapper data structure for pieces plotted under multiple …","Add new sector to collect plotted pieces","","","Check if piece is known and can be retrieved","Add old sector from plotted pieces (happens on replotting)","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Initialize with readers for each farm","Iterator over all unique piece indices plotted","Read plotted piece from one of the farms.","","","","","","Base 58 requirement is violated","Length is bad","Disallowed SS58 Address Format for this datatype","Invalid checksum","Invalid SS58 prefix byte","An error type for SS58 decoding.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Some if the string is a properly encoded SS58Check address.","","","","","",""],"i":[0,0,0,0,0,1,6,1,6,1,6,1,6,1,6,6,6,1,6,1,6,1,6,0,1,0,6,1,6,1,6,1,6,1,0,1,1,0,6,6,1,6,0,6,1,6,0,1,1,1,1,1,0,6,1,6,1,6,1,6,1,6,1,0,6,1,35,33,0,43,0,35,34,34,34,34,36,35,43,43,0,0,0,0,0,34,0,0,43,43,43,0,29,33,0,0,0,0,36,33,0,0,31,0,0,0,43,34,31,31,37,29,34,34,29,28,29,30,31,32,42,43,33,34,35,36,37,28,29,30,31,32,42,43,33,34,35,36,37,28,29,30,31,32,33,34,35,36,37,28,29,30,31,32,33,34,35,36,37,37,37,39,28,29,30,31,32,42,43,33,34,35,36,28,29,30,31,32,42,43,33,34,35,36,28,29,30,31,32,42,43,33,34,35,36,28,28,29,30,31,32,42,43,33,34,35,36,28,29,30,31,32,42,43,33,34,35,36,37,28,29,30,31,32,42,43,33,34,35,36,37,37,48,28,29,30,31,32,42,43,33,34,35,36,37,28,28,29,30,31,32,42,43,33,34,35,36,37,37,37,37,28,28,29,30,31,31,32,42,42,43,43,33,34,35,36,37,37,28,29,30,31,32,42,43,43,43,43,33,34,35,36,37,37,37,57,28,29,30,31,32,42,43,33,34,35,36,37,28,29,30,31,32,42,43,33,34,35,36,37,43,58,39,37,57,57,57,37,57,57,57,57,57,39,58,64,39,32,57,30,37,28,29,30,31,32,42,33,34,35,36,43,43,30,32,28,29,30,31,32,42,43,33,34,35,36,28,29,30,31,32,33,34,35,36,37,28,31,42,43,37,57,28,29,30,31,32,42,43,33,34,35,36,37,28,29,30,31,32,42,43,33,34,35,36,37,58,28,29,30,31,32,42,43,33,34,35,36,37,28,29,30,31,32,42,43,33,34,35,36,37,28,28,29,30,31,32,42,43,33,34,35,36,37,39,146,147,148,149,150,150,149,149,150,0,0,73,72,73,72,72,72,73,72,73,72,73,72,73,72,73,72,72,73,72,73,72,72,72,72,72,72,73,72,73,72,73,72,73,72,73,72,73,72,0,0,0,76,76,81,76,76,76,76,76,76,76,0,86,0,89,88,88,87,87,84,87,87,88,88,86,86,87,88,86,88,88,88,87,89,0,0,84,88,88,87,87,87,86,87,87,88,86,85,88,88,88,86,84,85,87,89,0,88,89,0,0,0,0,0,0,0,87,87,88,82,87,82,95,109,95,85,86,82,84,87,88,89,109,95,85,86,82,84,87,88,89,95,82,82,85,109,95,85,86,82,84,87,88,89,109,95,85,86,82,84,87,88,89,82,95,95,95,109,95,85,85,86,82,84,87,88,89,95,95,95,0,95,95,95,86,86,82,84,87,87,88,88,89,89,109,95,85,86,86,86,82,84,87,87,87,87,88,89,89,89,89,82,95,85,85,82,85,109,95,85,86,82,84,87,88,89,109,95,85,86,82,84,87,88,89,95,82,95,85,82,95,85,85,85,85,85,85,0,85,85,95,0,85,85,82,0,85,85,85,85,85,85,95,95,82,85,95,95,85,85,85,82,86,87,89,82,82,86,87,88,89,85,85,109,95,85,86,82,84,87,88,89,109,95,85,86,82,84,87,88,89,82,109,95,85,86,82,84,87,88,89,0,109,95,85,86,82,84,87,88,89,109,95,85,86,82,84,87,88,89,85,151,152,153,154,155,156,157,156,158,159,158,159,160,160,156,156,160,157,158,159,161,161,161,161,161,162,163,164,165,166,167,168,162,163,164,169,165,170,166,171,167,172,173,168,174,174,163,164,172,163,164,172,175,176,177,177,175,0,0,110,110,111,110,111,111,111,110,111,110,111,110,111,111,111,110,111,110,111,110,111,111,111,110,111,0,111,111,111,111,111,111,110,111,110,111,110,111,110,111,110,111,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,92,92,0,0,92,92,92,92,101,92,101,101,101,101,92,101,92,101,92,101,92,92,101,92,92,101,92,101,92,101,101,101,101,92,101,92,92,101,92,101,92,101,92,101,92,101,101,178,178,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,118,0,0,118,118,118,103,118,103,103,103,118,103,118,103,118,103,118,118,103,118,118,118,103,118,103,118,103,103,103,118,103,118,118,103,118,103,103,118,103,118,103,118,103,0,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,0,0,122,121,120,122,121,120,120,120,122,121,121,120,122,121,120,122,121,121,120,122,121,120,122,121,120,120,122,121,120,122,121,120,120,122,122,120,122,121,120,122,121,120,122,121,120,122,121,120,122,121,120,0,0,0,129,126,129,126,126,126,126,0,129,126,129,126,129,129,126,0,126,129,126,129,126,129,126,129,129,0,0,126,0,129,0,0,126,0,0,0,126,0,126,129,126,129,126,129,129,126,129,126,129,126,0,0,0,141,141,135,136,141,135,136,135,136,135,136,141,135,136,141,135,136,135,141,135,136,135,136,141,135,136,135,136,135,135,141,135,136,141,135,136,141,135,135,136,141,135,136,141,135,136,141,135,136,141,135,136,136,141,135,136,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,145,145,145,145,145,0,145,145,145,145,145,145,145,145,145,145,0,145,145,145,145,145,145],"f":"`````{{bd}{{j{{h{f}}}}}}{ce{}{}}000{ll}{bb}{{ce}n{}{}}0{c{{A`{l`}}}{{Ad{Ab}}}}{lc{}}{Afc{}}000{Afn}0{l{{Aj{Ah}}}}`{b{{j{{h{f}}}}}}`{{}Af}{{bAl}An}{cc{}}022<<`{{bB`}{{j{{h{f}}}}}}{Bb{{A`{bBd}}}}`{c{{A`{{Bf{l}}`}}}{{Ad{Ab}}}};{{bBh}{{j{{h{f}}}}}}{lBj}`{lBl}{{b{Bn{d}}}{{j{{h{f}}}}}}{{l{Aj{Ah}}}C`}`{{bCb}{{j{{h{f}}}}}}{{bCd}{{j{{h{f}}}}}}===`{ce{}{}}0{c{{A`{e}}}{}{}}000{cCf{}}022`22`````````````````````````````````````````````````222222222222222222222222{ChCh}{CjCj}{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{DhDh}{DjDj}{{ce}n{}{}}000000000{{DjDj}Dl}{{ce}Dl{}{}}{Dn{{j{{h{f}}}}}}{c{{A`{ChE`}}}Eb}{c{{A`{CjE`}}}Eb}{c{{A`{ClE`}}}Eb}{c{{A`{CnE`}}}Eb}{c{{A`{D`E`}}}Eb}{c{{A`{EdE`}}}Eb}{c{{A`{EfE`}}}Eb}{c{{A`{DbE`}}}Eb}{c{{A`{DdE`}}}Eb}{c{{A`{DfE`}}}Eb}{c{{A`{DhE`}}}Eb}{{{Aj{Ah}}}{{A`{cE`}}}{}}0000000000{{Eh{Aj{Ah}}}{{A`{cE`}}}{}}0000000000{{c{Ej{Ch}}}{{A`{ElE`}}}Eb}{{Ehc}{{A`{eE`}}}Eb{}}0000000000{Afc{}}00000000000000000000000{c{{A`{Dj}}}En}{F`n}{Afn}00000000000{Ch{{Bn{Ah}}}}{{Chc}n{FbFd}}{{Cjc}n{FbFd}}{{Clc}n{FbFd}}{{Cnc}n{FbFd}}{{D`c}n{FbFd}}{{Edc}n{FbFd}}{{Efc}n{FbFd}}{{Dbc}n{FbFd}}{{Ddc}n{FbFd}}{{Dfc}n{FbFd}}{{Dhc}n{FbFd}}{{DjDj}Ff}{{ce}Ff{}{}}00{{ChAl}An}0{{CjAl}An}{{ClAl}An}{{CnAl}An}0{{D`Al}An}{{EdAl}An}0{{EfAl}An}0{{DbAl}An}{{DdAl}An}{{DfAl}An}{{DhAl}An}{{DjAl}An}0{cc{}}000000{FhEf}{FjEf}{FlEf}3333{FnDj}4{{Djc}nG`}{GbDj}{{}Af}00000000000{ce{}{}}00000000000{EfFf}{{GdGf}{{j{{h{f}}}}}}{DnAf}{{}Dj}{{Gb{Gh{Db}}}{{h{F`}}}}{{Gb{Gh{{Gl{GjDh}}}}}{{h{F`}}}}{{Gb{Gh{Cd}}}{{h{F`}}}}{{DjDj}{{Bf{Dl}}}}{Gb{{Gn{Dn}}}}{Gb{{Gn{H`}}}}{Gb{{Gn{Gd}}}}{Gb{{j{{h{f}}}}}}0{{DnCh}{{j{{h{f}}}}}};{{H`GjHb}{{j{{h{f}}}}}}1`{{{h{Gb}}}{{j{{h{f}}}}}}`{{Djc}A`Hd}{ChAf}{CjAf}{ClAf}{CnAf}{D`Af}{EdAf}{DbAf}{DdAf}{DfAf}{DhAf}{Ef{{Bf{Hf}}}}{EfBb}``{{c{Aj{Ah}}}{{Bn{Ah}}}{}}0000000000{ce{}{}}000000000{cHh{}}0000{GbGj}{c{{A`{e}}}{}{}}00000000000000000000000{{GdBhHj}{{j{{h{f}}}}}}{cCf{}}00000000000555555555555{{Che}c{}{{Hn{{Aj{Ah}}}{{Hl{c}}}}}}666666666666{{DnChBhHj}{{j{{h{f}}}}}}```````````7777{I`I`}{{ce}n{}{}}{Afc{}}000{Afn}0{{{Ib{c}}Al}An{IdId}}{{I`Al}An}{cc{}}0{{I`Gf}{{Bf{Hj}}}}{{}Af}0{ce{}{}}0{{I`BhHj}n}{{cIf}{{Gl{I`{Ib{c}}}}}Ih}{{I`{Gn{Ij}}}Il}{{I`Gf}{{Bf{In}}}}{{I`{Bn{{Gn{Dn}}}}{Bn{{Gn{Gd}}}}}n}{{{Ib{c}}e}nIhJ`}6{c{{A`{e}}}{}{}}000{cCf{}}08888```{{Ihd}{{j{{h{f}}}}}}{Ih{{j{{h{f}}}}}}{{JbB`}{{j{{h{f}}}}}}{{IhBh}{{j{{h{f}}}}}}{{Ih{Bn{d}}}{{j{{h{f}}}}}}{{IhCb}{{j{{h{f}}}}}}{{IhCd}{{j{{h{f}}}}}}555{{cl}{{A`{{`{{f{}{{Hl{n}}}}}}{h{Hf}}}}}Ih}```````````````````````````````````````````````````````````{JdB`}`{ce{}{}}00000000000000000`{JdJd}{{ce}n{}{}}{JfJh}{Afc{}}00000000000000000{c{{A`{Jd}}}En}```{Afn}0{Jjn}1111111```````{{JlAl}An}0{{JdAl}An}{{JhAl}An}{{JnAl}An}0{{K`Al}An}0{{KbAl}An}0{cc{}}00{KdJl}1{FlJl}222{KfJn}{KhJn}{FlJn}5{JlKb}{{{h{Hf}}}Kb}7{EfKb}{Jd{{Kj{Ah}}}}`{JjDj}0{JdDj}{JjJd}{{}Af}00000000{ce{}{}}00000000`{Ab{{Kl{{Bf{Jd}}}}}}`{{{Kn{ce}}Af}{{A`{JjJn}}}Ih{J`L`LbLd}}{{Dj{Kj{Ah}}LfLhB`}Jd}`{{Jj{Gh{Db}}}{{h{F`}}}}{{Jj{Gh{Db}}}Il}{{Jj{Gh{{Gl{GjDh}}}}}{{h{F`}}}}{{Jj{Gh{{Gl{GjDh}}}}}Il}{{Jj{Gh{Cd}}}Il}{{Jj{Gh{Cd}}}{{h{F`}}}}`{Jj{{Gn{Dn}}}}{JjLj}``{JjLl}{Jj{{Gn{H`}}}}{JdLh}`{Jj{{Gn{Gd}}}}{JjLn}{Jj{{j{{h{f}}}}}}{Jj{{`{{Md{}{{M`{{A`{MbE`}}}}}}}}}}{JjGj}2``{JdLf}{Ab{{Kl{{Bn{Mf}}}}}}``{{{h{Jj}}}{{j{{h{f}}}}}}{Jj{{Mh{n}}}}{{AbFfFf}{{A`{nK`}}}}{{Jdc}A`Hd}{Jl{{Bf{Hf}}}}{Jn{{Bf{Hf}}}}{Kb{{Bf{Hf}}}}{{JdAb}{{Kl{n}}}}{ce{}{}}{cHh{}}000<<{c{{A`{e}}}{}{}}00000000000000000{Ab{{Kl{Mj}}}}{cCf{}}00000000`444444444444444444{Ab{{Kl{n}}}}```````````````````````````````````````````````````````````{{{Ml{c}}{Mn{e}}}{{A`{{Bn{{Gl{Gj{`{{Nb{}{{M`{{A`{{N`{LfLf}}Fj}}}}}}}}}}}}Fh}}}NdNf}6666{{{Mn{c}}}{{Mn{c}}}Nf}{{ce}n{}{}}{Afc{}}000{Afn}0`{{{Mn{c}}Al}An{NfId}}{cc{}}0{{}Af}0==``{c{{Ml{c}}}Nd}```````><<<<::>>>>`>>55421>{Ab{{Kl{{Nj{Nh}}}}}}{Ab{{Kl{{Nj{c}}}}}Nd}{{{Nj{c}}{Aj{Ah}}B`}{{Kl{n}}}Nd}0??={ce{}{}}0```````0000{LjLj};{Lj{{j{{h{f}}}}}};;;;::{{KhAl}An}0{{LjAl}An}{FlKh};;::55{LjAf}{{LjCh}{{j{{h{f}}}}}}0{Kh{{Bf{Hf}}}}8{cHh{}}{c{{A`{e}}}{}{}}000{cCf{}}0;;;;{{LjChBhHj}{{j{{h{f}}}}}}```<<{LlLl}{{ce}n{}{}}{Afc{}}0{Afn}{{LlAl}An}{cc{}}{{}Af}{ce{}{}}{{LlGjHb}{{j{{h{f}}}}}}{{LlGjHb}{{Bf{Hj}}}}2<<;22`````2222{LnLn}9888877{{NlAl}An}0{{LnAl}An}{KfNl}8{FlNl}98877{{LnGf}{{j{{h{f}}}}}}0{Nl{{Bf{Hf}}}}9{cHh{}}{c{{A`{e}}}{}{}}000{{LnBhHj}{{j{{h{f}}}}}}{cCf{}}0====``{Nn{{Kl{n}}}}0>>{Afc{}}0{Afn}{{NnAl}An}{cc{}}{{}Af}{ce{}{}}{Ab{{Kl{Nn}}}}{{NnB`}{{Kl{n}}}}{{Nn{Aj{Ah}}B`}{{Kl{n}}}}001{Nn{{Kl{B`}}}}==;441```444444{O`O`}{{ce}n{}{}};;{Obc{}}<<<<;{Obn}<<{{OdAl}An}{{ObAl}An}{{O`Al}An}==={O`Ob}===<<<{{cOf}{{A`{O`Oh}}}{{Oj{Af}{{Hl{{A`{OdOh}}}}}}}}``={c{{A`{e}}}{}{}}00000{cCf{}}00??????``{{}{{Bn{Ol}}}}{ce{}{}}000{OlOl}<{Ol{{Aj{Af}}}}{{c{Bf{On}}}{{A`{O`Oh}}}{{A`{}{{M`{{Gl{OlOl}}}}}}}}{Afc{}}000{Afn}{{{Ab{c}}}n{}}1`{{OlAl}An}{cc{}}0{{}Af}099{c{}{}}{{{Ad{c}}Ff}{{Ab{c}}}{}}{Bb{{A`{{Bn{Ol}}{h{Hf}}}}}}`{Oln}`{{{j{{Ab{c}}}}Af}{{Ah{e}}}{}{}}{g{{`{{Oj{Aj}{{Hl{{Kl{n}}}}}}}}}Lb{{Hn{}{{Hl{c}}}}Lb}{{Oj{Aj}{{Hl{e}}}}L`}}6{{{Aj{Ol}}Af}{{Bn{Ol}}}}{{gHh}{{Kl{{`{{f{}{{Hl{{A`{cAl}}}}}}Lb}}}}}Lb{{f{}{{Hl{c}}}}}{{Hn{}{{Hl{e}}}}Lb}}`{{{Bf{Of}}{Bf{Of}}}{{Bn{Ol}}}}{ce{}{}}{{}{{`{{Oj{Aj}{{Hl{{Kl{n}}}}}}}}}}{{OlAf}n}{c{{A`{e}}}{}{}}000{{{j{c}}Af}Ah{}}{cCf{}}05555````555555{{{An{ce}}}{{An{ce}}}{}{}}{{{AA`{ce}}}{{AA`{ce}}}{}{}}{{ce}n{}{}}0{Afc{}}00000{{{An{ce}}}{{AA`{ce}}}{AAbLb}Ih}{Afn}00{{{An{ce}}Al}An{}{}}{{{AA`{ce}}Al}An{}{}}{cc{}}00{{{An{ce}}Bh}{{j{{h{f}}}}}{AAbLb}Ih}{{{AA`{ce}}Bh}{{j{{h{f}}}}}{AAbLb}Ih}{{{An{ce}}Bh}{{Bf{Hj}}}{AAbLb}Ih}0{{}Af}00{ce{}{}}00`{{{AAd{c}}I`e{Gn{{AAh{{Bf{AAf}}}}}}AAj}{{An{ce}}}{AAbLb}Ih}11{c{{A`{e}}}{}{}}00000{cCf{}}00333{{{AA`{ce}}}{{Bf{{An{ce}}}}}{}{}}444`44{{{AAl{c}}}{{AAl{c}}}L`}{{ce}n{}{}}{Afc{}}0?<87{{AAncAB`}{{AAl{c}}}{}}86658{{{AAl{c}}IfBhHj}{{j{{h{f}}}}}Ih}9`{{AAfAhMb}n}::{{AAfBh}Ff}144{Afn}{{AAfAl}An}{cc{}}?>{{{Bn{{Gn{H`}}}}}AAf}{AAf{{`{{Md{}{{M`{Bh}}}}}}}}{{AAfBh}{{Bf{{`{{f{}{{Hl{{Bf{Hj}}}}}}}}}}}}??>{ce{}{}}0``````00;;6{{ABbAl}An}05{{}Af}2{Bb{{A`{LfABb}}}}{cHh{}}{c{{A`{e}}}{}{}}0{cCf{}}66","c":[],"p":[[5,"NodeRpcClient",0],[5,"SegmentIndex",1264],[10,"Future",1265],[5,"Box",1266],[5,"Pin",1267],[5,"Identity",0],[1,"unit"],[6,"Result",1268],[5,"Path",1269],[10,"AsRef",1270],[1,"usize"],[1,"u8"],[1,"slice"],[5,"Formatter",1271],[8,"Result",1271],[1,"u64"],[1,"str"],[6,"Error",1272],[6,"Option",1273],[5,"PieceIndex",1274],[5,"PublicKey",1275],[5,"SecretKey",1275],[5,"Vec",1276],[5,"Signature",1277],[5,"RewardSignatureResponse",1278],[5,"SolutionResponse",1278],[5,"TypeId",1279],[5,"PieceCacheOffset",66],[6,"MaybePieceStoredResult",66],[5,"AuditingDetails",66],[6,"ProvingResult",66],[5,"ProvingDetails",66],[6,"FarmingNotification",66],[6,"SectorPlottingDetails",66],[6,"SectorExpirationDetails",66],[6,"SectorUpdate",66],[6,"FarmId",66],[6,"Ordering",1280],[10,"PieceCache",66],[5,"Error",1281],[10,"Input",1282],[5,"DecodedFarmingError",66],[6,"FarmingError",66],[1,"u32"],[20,"MaybeUninit",1283],[5,"DecodeFinished",1284],[10,"Deserializer",1285],[10,"HandlerId",66],[10,"Output",1282],[10,"Sized",1286],[1,"bool"],[6,"AuditingError",1287],[6,"ProvingError",1288],[5,"Error",1289],[5,"Ulid",1290],[10,"Hasher",1291],[10,"Farm",66],[10,"PlotCache",66],[5,"Key",1292],[8,"HandlerFn",66],[8,"SectorIndex",1293],[1,"tuple"],[5,"Arc",1294],[10,"PieceReader",66],[5,"PieceOffset",1274],[10,"Serializer",1295],[10,"Error",1296],[5,"String",1297],[5,"Piece",1274],[17,"Output"],[10,"FnOnce",1298],[5,"FarmerCache",454],[5,"FarmerCacheWorker",454],[10,"Debug",1271],[5,"PeerId",1299],[10,"NodeClient",494],[10,"Fn",1298],[5,"HandlerId",1300],[5,"ProviderRecord",1292],[10,"PieceGetter",1301],[10,"NodeClientExt",494],[6,"SingleDiskFarmInfo",508],[5,"PathBuf",1269],[6,"SingleDiskFarmSummary",508],[5,"SingleDiskFarm",508],[6,"PlottingError",508],[6,"SingleDiskFarmError",508],[6,"SingleDiskFarmScrubError",508],[6,"BackgroundTaskError",508],[6,"PlottingError",1302],[5,"JoinError",1303],[6,"DiskPieceCacheError",896],[1,"array"],[8,"Result",1289],[5,"SingleDiskFarmOptions",508],[10,"Clone",1304],[10,"Send",1286],[10,"Sync",1286],[5,"PublicKey",1293],[1,"u16"],[5,"DiskPieceCache",896],[5,"DiskPieceReader",945],[5,"DiskPlotCache",965],[17,"Item"],[5,"PlottedSector",1302],[10,"Iterator",1305],[5,"SectorMetadataChecksummed",1306],[8,"Result",1307],[5,"SingleDiskFarmInfoLock",508],[5,"PlotAudit",834],[5,"PlotAuditOptions",834],[5,"Solution",1293],[10,"ProvableSolutions",1288],[10,"ReadAtSync",1301],[10,"Table",1308],[5,"File",1309],[5,"RayonFiles",878],[6,"DiskPlotCacheError",965],[5,"UnbufferedIoFileWindows",1009],[5,"PlottingThreadPoolManager",1035],[5,"PlottingThreadPoolsGuard",1035],[5,"PlottingThreadPoolPair",1035],[8,"NonZeroUsize",1310],[5,"ThreadPoolBuildError",1311],[10,"FnMut",1298],[5,"CpuCoreSet",1089],[6,"ThreadPriority",1312],[10,"ExactSizeIterator",1313],[5,"AsyncJoinOnDrop",1089],[5,"JoinHandle",1314],[5,"Context",1315],[6,"Poll",1316],[5,"ThreadBuilder",1317],[5,"Canceled",1318],[5,"FarmerPieceGetter",1142],[5,"WeakFarmerPieceGetter",1142],[10,"PieceValidator",1319],[5,"PieceProvider",1319],[5,"PlottedPieces",1220],[8,"Mutex",1320],[5,"DsnCacheRetryPolicy",1142],[5,"SegmentCommitmentPieceValidator",1201],[5,"Node",1321],[5,"Kzg",1322],[6,"Ss58ParsingError",1241],[15,"FailedToSubscribeSlotInfo",445],[15,"FailedToGetFarmerInfo",445],[15,"Determined",447],[15,"Starting",448],[15,"Finished",448],[15,"BackgroundTaskPanicked",777],[15,"FailedToGetFarmerInfo",778],[15,"FailedToGetSegmentHeader",778],[15,"FailedToSubscribeArchivedSegments",778],[15,"MissingArchivedSegmentHeader",778],[15,"FarmTooLarge",782],[15,"InsufficientAllocatedSpace",782],[15,"WrongChain",782],[15,"IdentityMismatch",782],[15,"InvalidPiecesInSector",782],[15,"V0",797],[15,"FailedToDetermineFileSize",802],[15,"FailedToReadBytes",802],[15,"FailedToWriteBytes",802],[15,"FarmInfoCantBeOpened",802],[15,"IdentityCantBeOpened",802],[15,"MetadataCantBeOpened",802],[15,"CacheCantBeOpened",802],[15,"FarmInfoFileDoesNotExist",802],[15,"IdentityFileDoesNotExist",802],[15,"MetadataFileDoesNotExist",802],[15,"MetadataFileTooSmall",802],[15,"CacheFileDoesNotExist",802],[15,"PublicKeyMismatch",802],[15,"Found",829],[15,"NotFound",829],[15,"Error",829],[15,"OffsetOutsideOfRange",943]],"b":[[261,"impl-Display-for-PieceCacheOffset"],[262,"impl-Debug-for-PieceCacheOffset"],[265,"impl-Debug-for-ProvingResult"],[266,"impl-Display-for-ProvingResult"],[268,"impl-Debug-for-DecodedFarmingError"],[269,"impl-Display-for-DecodedFarmingError"],[270,"impl-Debug-for-FarmingError"],[271,"impl-Display-for-FarmingError"],[276,"impl-Display-for-FarmId"],[277,"impl-Debug-for-FarmId"],[285,"impl-From%3CAuditingError%3E-for-FarmingError"],[286,"impl-From%3CProvingError%3E-for-FarmingError"],[287,"impl-From%3CError%3E-for-FarmingError"],[630,"impl-Display-for-PlottingError"],[631,"impl-Debug-for-PlottingError"],[634,"impl-Display-for-SingleDiskFarmError"],[635,"impl-Debug-for-SingleDiskFarmError"],[636,"impl-Display-for-SingleDiskFarmScrubError"],[637,"impl-Debug-for-SingleDiskFarmScrubError"],[638,"impl-Debug-for-BackgroundTaskError"],[639,"impl-Display-for-BackgroundTaskError"],[643,"impl-From%3CPlottingError%3E-for-PlottingError"],[645,"impl-From%3CError%3E-for-PlottingError"],[649,"impl-From%3CJoinError%3E-for-SingleDiskFarmError"],[650,"impl-From%3CDiskPieceCacheError%3E-for-SingleDiskFarmError"],[651,"impl-From%3CError%3E-for-SingleDiskFarmError"],[653,"impl-From%3CPlottingError%3E-for-BackgroundTaskError"],[654,"impl-From%3CBox%3Cdyn+Error+%2B+Send+%2B+Sync%3E%3E-for-BackgroundTaskError"],[656,"impl-From%3CFarmingError%3E-for-BackgroundTaskError"],[659,"impl-Farm-for-SingleDiskFarm"],[660,"impl-SingleDiskFarm"],[687,"impl-Farm-for-SingleDiskFarm"],[688,"impl-SingleDiskFarm"],[689,"impl-Farm-for-SingleDiskFarm"],[690,"impl-SingleDiskFarm"],[691,"impl-SingleDiskFarm"],[692,"impl-Farm-for-SingleDiskFarm"],[694,"impl-Farm-for-SingleDiskFarm"],[695,"impl-SingleDiskFarm"],[698,"impl-SingleDiskFarm"],[699,"impl-Farm-for-SingleDiskFarm"],[702,"impl-Farm-for-SingleDiskFarm"],[703,"impl-SingleDiskFarm"],[704,"impl-Farm-for-SingleDiskFarm"],[705,"impl-SingleDiskFarm"],[706,"impl-SingleDiskFarm"],[707,"impl-Farm-for-SingleDiskFarm"],[714,"impl-Farm-for-SingleDiskFarm"],[715,"impl-SingleDiskFarm"],[727,"impl-Farm-for-SingleDiskFarm"],[728,"impl-SingleDiskFarm"],[889,"impl-ReadAtSync-for-RayonFiles%3CFile%3E"],[890,"impl-ReadAtSync-for-%26RayonFiles%3CFile%3E"],[916,"impl-Display-for-DiskPieceCacheError"],[917,"impl-Debug-for-DiskPieceCacheError"],[957,"impl-PieceReader-for-DiskPieceReader"],[958,"impl-DiskPieceReader"],[982,"impl-Debug-for-DiskPlotCacheError"],[983,"impl-Display-for-DiskPlotCacheError"],[985,"impl-From%3CJoinError%3E-for-DiskPlotCacheError"],[987,"impl-From%3CError%3E-for-DiskPlotCacheError"],[1024,"impl-ReadAtSync-for-%26UnbufferedIoFileWindows"],[1025,"impl-ReadAtSync-for-UnbufferedIoFileWindows"],[1252,"impl-Display-for-Ss58ParsingError"],[1253,"impl-Debug-for-Ss58ParsingError"]]}],\
["subspace_farmer_components",{"doc":"Components of the reference implementation of Subspace …","t":"PFFKGKFKPNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNMONNNNNNNNNOONNCCMMNNNNCOOCNNNNNNNNNNNNNNNNNNNNNNNNNFGPHHONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOOOKKMMMMMMMMPPPFFFPPPPPPFFGOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNHNOOOOONNNNNNNNNNONNNNNNNNNNNNOOOOOOOOHOOOOOOOOOOOONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOPPPPPKGPFMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPPPPPPPGGPPNNNNNNNNNNNNNNNNNNNNNNNNHHHHNNNNNNNNNNNNNOOOOOOOOOOPFPPPPFGGGFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNOOHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOO","n":["Async","AsyncReadBytes","FarmerProtocolInfo","PieceGetter","ReadAt","ReadAtAsync","ReadAtOffset","ReadAtSync","Sync","as_mut","as_mut_bits","as_mut_byte_slice","as_mut_slice_of","auditing","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","file_ext","fmt","fmt","from","from","from","from","from","from","from_async","from_sync","get_piece","history_size","init","init","init","init","into","into","into","into","into_inner","max_pieces_in_sector","min_sector_lifetime","offset","offset","plotting","proving","read_at","read_at","read_at","read_at","read_at","read_at","reading","recent_history_fraction","recent_segments","sector","serialize","to_owned","to_owned","to_owned","try_as_mut_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","AuditResult","AuditingError","SBucketReading","audit_plot_sync","audit_sector_sync","best_solution_distance","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","init","init","into","into","sector_index","solution_candidates","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","error","s_bucket_audit_index","sector_index","FileExt","OpenOptionsExt","advise_random_access","advise_random_access","advise_sequential_access","advise_sequential_access","preallocate","read_exact_at","size","write_all_at","AbortEarly","BadSectorMetadataOutputSize","BadSectorOutputSize","DownloadSectorOptions","DownloadedSector","EncodeSectorOptions","FailedToAcquirePermit","FailedToRetrievePiece","InvalidErasureCodingInstance","NoTableGenerators","PieceNotFound","PieceRecoveryFailed","PlotSectorOptions","PlottedSector","PlottingError","abort_early","abort_early","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","download_sector","downloading_semaphore","drop","drop","drop","drop","drop","drop","encode_sector","encode_to","encoding_semaphore","erasure_coding","erasure_coding","farmer_protocol_info","farmer_protocol_info","fmt","fmt","fmt","from","from","from","from","from","from","from","global_mutex","init","init","init","init","init","init","into","into","into","into","into","into","kzg","kzg","piece_getter","piece_getter","piece_indexes","pieces_in_sector","pieces_in_sector","pieces_in_sector","plot_sector","public_key","public_key","sector_id","sector_index","sector_index","sector_index","sector_index","sector_metadata","sector_metadata_output","sector_metadata_output","sector_output","sector_output","size_hint","source","table_generators","table_generators","to_keyed_vec","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","error","error","expected","expected","piece_index","piece_index","piece_index","provided","provided","FailedToCreateChunkWitness","FailedToCreatePolynomialForRecord","FailedToDecodeSectorContentsMap","InvalidErasureCodingInstance","Io","ProvableSolutions","ProvingError","RecordReadingError","SolutionCandidates","best_solution_distance","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","from","from","init","init","into","into","into_solutions","is_empty","is_fatal","len","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","chunk_offset","error","error","piece_offset","piece_offset","ChecksumMismatch","ConcurrentChunks","FailedToDecodeSectorContentsMap","FailedToErasureDecodeRecord","FailedToReadChunk","InvalidChunk","Io","ReadSectorRecordChunksMode","ReadingError","WholeSector","WrongRecordSizeAfterDecoding","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","into","into","is_fatal","read_piece","read_sector_record_chunks","recover_extended_record_chunks","recover_source_record_chunks","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unique_saturated_into","unique_saturated_into","vzip","vzip","actual","chunk_location","chunk_location","encoded_chunk_used","error","error","error","expected","piece_offset","s_bucket","ChecksumMismatch","EncodedChunksUsed","InvalidBytesLength","InvalidBytesLength","InvalidEncodedRecordChunks","SBucketOutOfRange","SectorContentsMap","SectorContentsMapEncodeIntoError","SectorContentsMapFromBytesError","SectorContentsMapIterationError","SectorMetadata","SectorMetadataChecksummed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_into","encode_to","encode_to","encoded_size","encoded_size","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","history_size","init","init","init","init","init","init","init","into","into","into","into","into","into","into","iter","iter_mut","iter_record_bitfields","iter_record_bitfields_mut","iter_record_chunk_to_plot","iter_s_bucket_encoded_record_chunks_used","iter_s_bucket_records","new","num_encoded_record_chunks","par_iter_record_chunk_to_plot","pieces_in_sector","s_bucket_offsets","s_bucket_sizes","s_bucket_sizes","sector_index","sector_record_chunks_size","sector_record_metadata_size","sector_size","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","expected","actual","actual","expected","max","max","provided"],"q":[[0,"subspace_farmer_components"],[104,"subspace_farmer_components::auditing"],[145,"subspace_farmer_components::auditing::AuditingError"],[148,"subspace_farmer_components::file_ext"],[158,"subspace_farmer_components::plotting"],[301,"subspace_farmer_components::plotting::PlottingError"],[310,"subspace_farmer_components::proving"],[361,"subspace_farmer_components::proving::ProvingError"],[366,"subspace_farmer_components::reading"],[418,"subspace_farmer_components::reading::ReadingError"],[428,"subspace_farmer_components::sector"],[607,"subspace_farmer_components::sector::SectorContentsMapEncodeIntoError"],[609,"subspace_farmer_components::sector::SectorContentsMapFromBytesError"],[613,"subspace_farmer_components::sector::SectorContentsMapIterationError"],[615,"core::convert"],[616,"core::marker"],[617,"bitvec::slice"],[618,"bitvec::order"],[619,"byte_slice_cast"],[620,"core::result"],[621,"byte_slice_cast"],[622,"serde::de"],[623,"core::fmt"],[624,"core::fmt"],[625,"alloc::vec"],[626,"subspace_core_primitives::pieces"],[627,"core::future::future"],[628,"core::pin"],[629,"std::io::error"],[630,"serde::ser"],[631,"bitvec::ptr::span"],[632,"core::any"],[633,"subspace_core_primitives"],[634,"subspace_core_primitives"],[635,"alloc::string"],[636,"parity_scale_codec::error"],[637,"parity_scale_codec::codec"],[638,"subspace_proof_of_space"],[639,"parity_scale_codec::codec"],[640,"core::error"],[641,"std::io::error"],[642,"subspace_erasure_coding"],[643,"subspace_core_primitives"],[644,"subspace_core_primitives::pieces"],[645,"core::iter::traits::exact_size"],[646,"core::ops::deref"],[647,"core::ops::deref"],[648,"subspace_core_primitives::pieces"],[649,"rayon::iter"],[650,"core::ops::function"]],"d":["Async variant","Container or asynchronously reading bytes using in …","Information about the protocol necessary for farmer …","Trait representing a way to get pieces","Enum to encapsulate the selection between <code>ReadAtSync</code> and […","Async version of <code>ReadAt</code>, it is neither <code>Send</code> nor <code>Sync</code> and …","Reader with fixed offset added to all attempted reads","Sync version of <code>ReadAt</code>, it is both <code>Send</code> and <code>Sync</code> and is …","Sync variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","File extension trait","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Instantiate <code>ReadAt</code> from some <code>ReadAtAsync</code> implementation","Instantiate <code>ReadAt</code> from some <code>ReadAtSync</code> implementation","","Size of the blockchain history","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract inner value","How many pieces one sector is supposed to contain (max)","Minimum lifetime of a plotted sector, measured in archived …","Get implementation of <code>ReadAtSync</code> that add specified offset …","Get implementation of <code>ReadAtAsync</code> that add specified …","","","Fill the buffer by reading bytes at a specific offset","Fill the buffer by reading bytes at a specific offset and …","","","","","","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","","","","","","","","","","","","","","","","","","","","","","","","","","","Result of sector audit","Errors that happen during proving","Failed read s-bucket","Audit the whole plot and generate streams of solutions","Audit a single sector and generate a stream of solutions.","Best solution distance found","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sector index","Solution candidates","","","","","","","","","","","","","Low-level error","S-bucket audit index","Sector index","Extension convenience trait that allows pre-allocating …","Extension convenience trait that allows setting some file …","Advise OS/file system that file will use random access and …","Advise OS/file system that file will use random access and …","Advise OS/file system that file will use sequential access …","Advise OS/file system that file will use sequential access …","Make sure file has specified number of bytes allocated for …","Read exact number of bytes at a specific offset","Get file size","Write all provided bytes at a specific offset","Abort early","Bad sector metadata output size","Bad sector output size","Options for sector downloading","Opaque sector downloaded and ready for encoding","Options for encoding a sector.","Failed to acquire permit","Failed to retrieve piece","Invalid erasure coding instance","No table generators","Piece not found, can’t create sector, this should never …","Can’t recover missing piece","Options for plotting a sector.","Information about sector that was plotted","Plotting status","Whether encoding should be aborted early","Whether encoding should be aborted early","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Download sector for plotting.","Semaphore for part of the plotting when farmer downloads …","","","","","","","","","Semaphore for part of the plotting when farmer encodes …","Erasure coding instance","Erasure coding instance","Farmer protocol info","Farmer protocol info","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Global mutex that can restrict concurrency of …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","KZG instance","KZG instance","Getter for pieces of archival history","Getter for pieces of archival history","Indexes of pieces that were plotted","How many pieces should sector contain","How many pieces should sector contain","How many pieces should sector contain","Plot a single sector.","Public key corresponding to sector","Public key corresponding to sector","Sector ID","Sector index","Sector index","Sector index","Sector index","Sector metadata","Where plotted sector metadata should be written, vector …","Where plotted sector metadata should be written, vector …","Where plotted sector should be written, vector must either …","Where plotted sector should be written, vector must either …","","","Proof of space table generators","Proof of space table generators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lower-level error","Lower-level error","Expected size","Expected size","Piece index","Piece index","Piece index","Actual size","Actual size","Failed to create chunk witness","Failed to create polynomial for record","Failed to decode sector contents map","Invalid erasure coding instance","I/O error occurred","Solutions that can be proven if necessary.","Errors that happen during proving","Record reading error","Container for solution candidates.","Best solution distance found, <code>None</code> in case there are no …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turn solution candidates into actual solutions","Returns true if no candidates inside","Whether this error is fatal and makes farm unusable","Total number of candidates","","","","","","","","","","","","","","Chunk index","Lower-level error","Lower-level error","Piece offset","Piece offset","Checksum mismatch","Read individual chunks (<code>Scalar::FULL_BYTES</code> in size) …","Failed to decode sector contents map","Failed to erasure-decode record","Failed to read chunk.","Invalid chunk, possible disk corruption","I/O error occurred","Defines a mode of reading chunks in …","Errors that happen during reading","Read the whole sector at once and extract chunks from …","Wrong record size after decoding","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this error is fatal and renders farm unusable","Read piece from sector.","Read sector record chunks, only plotted s-buckets are …","Given sector record chunks recover extended record chunks …","Given sector record chunks recover source record chunks in …","","","","","","","","","","","","","","Actual size in bytes","Chunk location","Chunk location","Indicates whether chunk was encoded","Low-level error","Lower-level error","Lower-level error","Expected size in bytes","Piece offset","S-bucket","Checksum mismatch","Wrapper data structure that allows to iterate mutably over …","Invalid bytes length","Invalid bytes length","Invalid number of encoded record chunks","S-bucket provided is out of range","Abstraction on top of bitfields that allow making sense of …","Error happening when trying to encode <code>SectorContentsMap</code> …","Error happening when trying to create <code>SectorContentsMap</code> …","Error happening when trying to create <code>SectorContentsMap</code> …","Metadata of the plotted sector","Same as <code>SectorMetadata</code>, but with checksums verified during …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode internal contents into <code>output</code>","","","Size of encoded checksummed sector metadata.","Size of sector contents map when encoded and stored in the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Reconstruct sector contents map from bytes.","Size of the blockchain history at time of sector creation","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Produces an iterator over encoded chunks bitfields.","Produces a mutable iterator over encoded chunks bitfields.","Iterate over individual record bitfields","Iterate mutably over individual record bitfields","Creates an iterator of …","Iterate over chunks of s-bucket indicating if encoded …","Creates an iterator of <code>(piece_offset, encoded_chunk_used)</code>, …","Create new sector contents map initialized with zeroes to …","Number of encoded chunks in each record","Creates an iterator of …","Number of pieces stored in this sector","Returns offsets of each s-bucket relatively to the …","Returns sizes of each s-bucket","S-bucket sizes in a sector","Sector index","Size of the part of the plot containing record chunks …","Size of the part of the plot containing record metadata.","Exact sector plot size (sector contents map, record …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Actual length","Expected length","Actual length","Actual number of encoded record chunks","Expected length","Max supported","Max s-bucket","Provided s-bucket"],"i":[11,0,0,0,0,0,0,0,11,1,1,1,1,0,1,11,15,16,1,11,15,16,11,15,16,11,15,16,1,11,15,16,1,11,15,16,16,1,11,15,16,0,15,16,1,1,1,11,15,16,11,11,26,16,1,11,15,16,1,11,15,16,1,16,16,12,14,0,0,12,14,15,15,15,15,0,16,16,0,16,11,15,16,1,1,11,15,16,1,11,15,16,1,11,15,16,1,11,15,16,1,11,15,16,0,0,43,0,0,42,43,42,43,42,42,42,43,42,43,42,43,42,43,43,42,43,42,43,42,43,42,42,42,42,43,43,42,43,42,43,42,43,42,43,42,97,97,97,0,0,45,46,45,46,46,46,46,46,53,53,53,0,0,0,53,53,53,53,53,53,0,0,0,59,54,59,52,51,54,47,53,59,52,51,54,47,53,47,47,47,47,47,47,59,52,51,54,47,53,59,52,51,54,47,53,0,59,59,52,51,54,47,53,0,47,59,59,54,59,51,47,53,53,59,52,51,54,47,53,53,54,59,52,51,54,47,53,59,52,51,54,47,53,59,51,59,51,47,59,51,54,0,59,51,47,59,51,54,47,47,59,54,59,54,47,53,59,54,47,47,53,59,52,51,54,47,53,59,52,51,54,47,53,59,52,51,54,47,53,59,52,51,54,47,53,59,52,51,54,47,53,98,99,100,101,102,103,98,100,101,63,63,63,63,63,0,0,63,0,61,63,62,63,62,62,62,63,62,63,62,63,62,63,63,62,63,63,63,63,62,63,62,63,62,62,62,63,62,63,62,63,63,62,63,62,63,62,63,62,63,62,104,105,104,105,104,64,69,64,64,64,64,64,0,0,69,64,64,69,64,69,69,69,64,69,64,69,64,69,64,64,69,64,64,64,69,64,69,64,69,64,0,0,0,0,64,69,64,64,69,64,69,64,69,64,69,64,69,106,107,108,108,107,108,109,106,109,108,66,0,66,85,66,86,0,0,0,0,0,0,87,84,39,66,85,86,81,87,84,39,66,85,86,81,84,39,66,85,86,81,84,39,66,85,86,81,84,39,84,39,84,39,84,39,87,84,39,39,66,85,86,81,87,84,39,39,66,85,86,81,87,87,84,39,66,85,86,81,39,81,84,39,39,81,66,85,86,84,39,66,66,85,85,86,86,81,87,84,39,39,66,85,86,81,81,84,87,84,39,66,85,86,81,87,84,39,66,85,86,81,87,87,81,81,81,81,81,81,81,81,84,84,81,84,84,0,0,0,84,39,84,39,84,39,66,85,86,81,66,85,86,87,84,39,66,85,86,81,87,84,39,66,85,86,81,87,84,39,66,85,86,81,87,84,39,66,85,86,81,39,87,84,39,66,85,86,81,110,110,111,112,111,112,113,113],"f":"`````````{{{b{c}}}{{f{d}}}{{h{{f{d}}}}j}}{c{{l{eg}}}{}{}n}{c{{f{d}}}{}}{c{{Ab{{f{e}}A`}}}{}Ad}`{ce{}{}}0000000{{{Af{ce}}}{{Af{ce}}}{AhAj}{AlAj}}{{{An{c}}}{{An{c}}}Aj}{B`B`}{{ce}Bb{}{}}00{Bdc{}}0000000{c{{Ab{B`}}}Bf}{BdBb}000`{{{An{c}}Bh}BjBl}{{B`Bh}Bj}{{{Bn{{f{d}}}}}{{b{{Bn{{f{d}}}}}}}}{{{C`{d}}}{{b{{C`{d}}}}}}{cc{}}000{c{{Af{Cbc}}}Al}{c{{Af{cCb}}}Ah}{{CdCf}{{Cj{{Bn{Ch}}}}}}`{{}Bd}000{ce{}{}}000{{{b{c}}}c{{h{{f{d}}}}j}}``{{AhCl}{{An{Ah}}}}{{AlCl}{{An{Al}}}}``{{Ah{f{d}}Cl}{{Cn{Bb}}}}{{AlcCl}{{`{{Ch{}{{D`{{Cn{c}}}}}}}}}{{h{{f{d}}}}j}}{{{An{c}}eCl}{{Cn{e}}}Al{{h{{f{d}}}}j}}{{{An{c}}{f{d}}Cl}{{Cn{Bb}}}Ah}01````{{B`c}AbDb}888{c{{Ab{{l{eg}}{Dd{e}}}}}{}{}n}{c{{Ab{e}}}{}{}}0000000{cDf{}}000;;;;;;;;```{{DhDjDlc{f{Dn}}{Eb{E`}}}{{Ab{{C`{{Ed{{An{c}}}}}}Ef}}}Ah}{{DhDjDlcDn}{{Ab{{Eb{{Ed{c}}}}Ef}}}Ah}`===={{{Ed{c}}}{{Ed{c}}}Aj}{{ce}Bb{}{}}{Bdc{}}000{BdBb}0{{EfBh}Bj}0{{{Ed{c}}Bh}BjBl}{cc{}}0{{}Bd}0{ce{}{}}0``0{cEh{}}====<<1111`````{EjEj}{El{{Cn{Bb}}}}10{{ElCl}{{Cn{Bb}}}}{{El{f{d}}Cl}{{Cn{Bb}}}}{El{{Cn{Cl}}}}1`````````````````666666666666{EnEn}>{c{{Ab{EnF`}}}Fb}{{{f{d}}}{{Ab{cF`}}}{}}{{Fd{f{d}}}{{Ab{cF`}}}{}}{{Fdc}{{Ab{eF`}}}Fb{}}{Bdc{}}00000000000{{{Ff{c}}}{{Ab{FhFj}}}Cd}`{BdBb}00000{{Fh{Fl{c}}}{{Ab{EnFj}}}Fn}{{Enc}Bb{G`Gb}}`````{{EnBh}Bj}{{FjBh}Bj}0{cc{}}0000{GdFj}1`{{}Bd}00000{ce{}{}}00000````````{{{Gf{ce}}}{{Ab{EnFj}}}FnCd}````````````{EnBd}{Fj{{Eb{Gh}}}}``{{c{f{d}}}{{C`{d}}}{}}4{cEh{}}{c{{Ab{e}}}{}{}}00000000000{cDf{}}00000777777777777``````````````````{Gj{{Eb{Dl}}}}8888{{{Gl{c}}}{{Gl{c}}}Aj}{{ce}Bb{}{}}{Bdc{}}000{BdBb}0{{GnBh}Bj}0{{{Gl{c}}Bh}BjBl}{cc{}}{H`Gn}{HbGn}{HdGn}3{{}Bd}0{ce{}{}}0{{{Gl{c}}eHfHhHji}{{Ab{{`{{Gj{}{{Hl{{Ab{{Hn{Dhe}}Gn}}}}}}}}Gn}}}AhI`Fn{{Id{Ib}{{D`{g}}}}}}{{{Gl{c}}}IfAh}{GnIf}{{{Gl{c}}}BdAh}{Gn{{Eb{Gh}}}}5{cEh{}}{c{{Ab{e}}}{}{}}000{cDf{}}08888````````````````8888{HjHj}{{ce}Bb{}{}}{Bdc{}}000{BdBb}0{{H`Bh}Bj}0{{HjBh}Bj}{HdH`}{cc{}}{HbH`}1{{}Bd}0{ce{}{}}0{H`If}{{IhIjDn{Af{ce}}HhHj}{{Ab{IlH`}}}AhAl}{{IhIn{J`{Fd}}Jbc{Af{eg}}Hj}{{Ab{{Bn{{J`{{Eb{Jd}}}}}}H`}}}FnAhAl}{{{J`{{Eb{Jd}}}}IhHh}{{Ab{{Bn{{J`{Jd}}}}H`}}}}{{{J`{{Eb{Jd}}}}IhHh}{{Ab{{`{{Jf{}{{Hl{Jd}}}}}}H`}}}}{H`{{Eb{Gh}}}}6{cEh{}}{c{{Ab{e}}}{}{}}000{cDf{}}09999``````````````````````99999999999999{JhJh}{DnDn}{HdHd}{JjJj}{JlJl}{JbJb}{{ce}Bb{}{}}00000{c{{Ab{JhF`}}}Fb}{c{{Ab{DnF`}}}Fb}{{{f{d}}}{{Ab{cF`}}}{}}0{{Fd{f{d}}}{{Ab{cF`}}}{}}0{{Fdc}{{Ab{eF`}}}Fb{}}0{Bdc{}}00{Dnc{}}111111101111{JnBb}{BdBb}000000{Dn{{C`{d}}}}{{Jb{f{d}}}{{Ab{BbJj}}}}{{Jhc}Bb{G`Gb}}{{Dnc}Bb{G`Gb}}{{}Bd}{InBd}{{HdHd}If}{{JjJj}If}{{JlJl}If}{{JhBh}Bj}{{DnBh}Bj}{{HdBh}Bj}0{{JjBh}Bj}0{{JlBh}Bj}0{{JbBh}Bj}{cc{}}00{JhDn}1111{{{f{d}}In}{{Ab{JbHd}}}}`======={ce{}{}}000000{Jn{{`{{Jf{}{{Hl{{`{{Kb{}{{K`{If}}}}}}}}}}}}}}{Jn{{`{{Jf{}{{Hl{{`{{Kd{}{{K`{If}}}}}}}}}}}}}}{Jb{{f{{Kf{{J`{d}}}}}}}}{Jb{{`{{Jf{}{{Hl{Jn}}}}}}}}{{JbIh}{{`{{Kl{}{{Hl{{Kj{KhIfBd}}}}}}}}}}{{JbKh}{{Ab{{`{{Kl{}{{Hl{If}}}}}}Jl}}}}{{JbKh}{{Ab{{`{{Kl{}{{Hl{{Kj{IhIf}}}}}}}}Jl}}}}{InJb}{Jb{{f{Kh}}}}{{JbIh}{{`{{Kn{}{{Hl{{Eb{{Kj{BdIf}}}}}}}}}}}}`{Jh{{Bn{{J`{Fd}}}}}}{Jb{{Bn{{J`{In}}}}}}``{InBd}00{JhBd}{DnBd}{{c{f{d}}}{{C`{d}}}{}}0{ce{}{}}00000{cEh{}}00{c{{Ab{e}}}{}{}}0000000000000{cDf{}}0000003333333{{Dne}c{}{{L`{{f{d}}}{{D`{c}}}}}}4444444````````","c":[],"p":[[5,"AsyncReadBytes",0],[1,"u8"],[1,"slice"],[10,"AsMut",615],[10,"Unpin",616],[5,"BitSlice",617],[10,"BitOrder",618],[6,"Error",619],[6,"Result",620],[10,"FromByteSlice",619],[6,"ReadAt",0],[10,"ReadAtSync",0],[10,"Clone",621],[10,"ReadAtAsync",0],[5,"ReadAtOffset",0],[5,"FarmerProtocolInfo",0],[1,"unit"],[1,"usize"],[10,"Deserializer",622],[5,"Formatter",623],[8,"Result",623],[10,"Debug",623],[5,"Box",624],[5,"Vec",625],[1,"never"],[10,"PieceGetter",0],[5,"PieceIndex",626],[10,"Future",627],[5,"Pin",628],[1,"u64"],[8,"Result",629],[17,"Output"],[10,"Serializer",630],[6,"BitSpanError",631],[5,"TypeId",632],[5,"PublicKey",633],[8,"Blake3Hash",633],[8,"SolutionRange",633],[5,"SectorMetadataChecksummed",428],[8,"SectorIndex",633],[6,"Option",634],[5,"AuditResult",104],[6,"AuditingError",104],[5,"String",635],[10,"OpenOptionsExt",148],[10,"FileExt",148],[5,"PlottedSector",158],[5,"Error",636],[10,"Input",637],[1,"u32"],[5,"DownloadSectorOptions",158],[5,"DownloadedSector",158],[6,"PlottingError",158],[5,"EncodeSectorOptions",158],[10,"Table",638],[10,"Output",637],[10,"Sized",616],[5,"AcquireError",639],[5,"PlotSectorOptions",158],[10,"Error",640],[10,"ProvableSolutions",310],[5,"SolutionCandidates",310],[6,"ProvingError",310],[6,"ReadingError",366],[5,"Error",629],[6,"SectorContentsMapFromBytesError",428],[5,"Kzg",641],[5,"ErasureCoding",642],[6,"ReadSectorRecordChunksMode",366],[17,"Item"],[5,"Solution",633],[10,"Copy",616],[5,"PosSeed",633],[10,"FnMut",643],[1,"bool"],[5,"PieceOffset",626],[5,"SectorId",633],[5,"Piece",626],[1,"u16"],[1,"array"],[5,"SectorContentsMap",428],[5,"Scalar",644],[10,"ExactSizeIterator",645],[5,"SectorMetadata",428],[6,"SectorContentsMapEncodeIntoError",428],[6,"SectorContentsMapIterationError",428],[5,"EncodedChunksUsed",428],[17,"Target"],[10,"Deref",646],[10,"DerefMut",646],[5,"BitArray",647],[5,"SBucket",626],[1,"tuple"],[10,"Iterator",648],[10,"IndexedParallelIterator",649],[10,"FnOnce",643],[15,"SBucketReading",145],[15,"FailedToRetrievePiece",301],[15,"FailedToAcquirePermit",301],[15,"BadSectorOutputSize",301],[15,"BadSectorMetadataOutputSize",301],[15,"PieceNotFound",301],[15,"PieceRecoveryFailed",301],[15,"FailedToCreateChunkWitness",361],[15,"FailedToCreatePolynomialForRecord",361],[15,"WrongRecordSizeAfterDecoding",418],[15,"FailedToReadChunk",418],[15,"InvalidChunk",418],[15,"FailedToErasureDecodeRecord",418],[15,"InvalidBytesLength",607],[15,"InvalidBytesLength",609],[15,"InvalidEncodedRecordChunks",609],[15,"SBucketOutOfRange",613]],"b":[[44,"impl-From%3CBox%3C%5Bu8%5D%3E%3E-for-AsyncReadBytes%3CBox%3C%5Bu8%5D%3E%3E"],[45,"impl-From%3CVec%3Cu8%3E%3E-for-AsyncReadBytes%3CVec%3Cu8%3E%3E"],[71,"impl-ReadAtAsync-for-ReadAtOffset%3C\'_,+T%3E"],[72,"impl-ReadAtSync-for-ReadAtOffset%3C\'_,+T%3E"],[73,"impl-ReadAtSync-for-%26ReadAtOffset%3C\'_,+T%3E"],[74,"impl-ReadAtAsync-for-%26ReadAtOffset%3C\'_,+T%3E"],[122,"impl-Debug-for-AuditingError"],[123,"impl-Display-for-AuditingError"],[221,"impl-Debug-for-PlottingError"],[222,"impl-Display-for-PlottingError"],[332,"impl-Display-for-ProvingError"],[333,"impl-Debug-for-ProvingError"],[336,"impl-From%3CReadingError%3E-for-ProvingError"],[337,"impl-From%3CError%3E-for-ProvingError"],[338,"impl-From%3CSectorContentsMapFromBytesError%3E-for-ProvingError"],[389,"impl-Debug-for-ReadingError"],[390,"impl-Display-for-ReadingError"],[392,"impl-From%3CSectorContentsMapFromBytesError%3E-for-ReadingError"],[394,"impl-From%3CError%3E-for-ReadingError"],[509,"impl-Debug-for-SectorContentsMapFromBytesError"],[510,"impl-Display-for-SectorContentsMapFromBytesError"],[511,"impl-Display-for-SectorContentsMapEncodeIntoError"],[512,"impl-Debug-for-SectorContentsMapEncodeIntoError"],[513,"impl-Display-for-SectorContentsMapIterationError"],[514,"impl-Debug-for-SectorContentsMapIterationError"]]}],\
["subspace_malicious_operator",{"doc":"Subspace malicious operator library.","t":"FFNNNNNNNNNNNNNNNNNHNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNOONONNNNNNNNNNNNNNNNNNNNNNFOONNOOOOOONNOONNNNNNONNNNNNNNONONNNNNNNN","n":["Cli","DomainCli","additional_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","author","author","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","copyright_start_year","copyright_start_year","create_malicious_operator_configuration","deref","deref","deref_mut","deref_mut","description","description","domain_args","domain_id","drop","drop","executable_name","executable_name","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","group_id","group_id","impl_name","impl_name","impl_version","impl_version","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_key","into_key","into_mut","into_mut","into_ref","into_ref","load_spec","load_spec","malicious_domain_instance_starter","new","run","run","sudo_account","sudo_account","support_url","support_url","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","DomainInstanceStarter","base_path","block_importing_notification_stream","borrow","borrow_mut","consensus_client","consensus_keystore","consensus_network","consensus_offchain_tx_pool_factory","consensus_state_pruning","consensus_sync_service","deref","deref_mut","domain_cli","domain_message_receiver","drop","from","from_mut","from_mut","from_ref","from_ref","gossip_message_sink","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","new_slot_notification_stream","start","tokio_handle","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"subspace_malicious_operator"],[100,"subspace_malicious_operator::malicious_domain_instance_starter"],[141,"alloc::string"],[142,"core::iter::traits::iterator"],[143,"clap_builder::builder::command"],[144,"sp_domains"],[145,"sc_service::config"],[146,"sc_chain_spec"],[147,"alloc::boxed"],[148,"tokio::runtime::handle"],[149,"sc_service::config"],[150,"core::fmt"],[151,"core::fmt"],[152,"clap_builder"],[153,"core::result"],[154,"clap_builder::util::id"],[155,"core::option"],[156,"core::any"],[157,"alloc::sync"],[158,"alloc::rc"],[159,"sp_core::crypto"],[160,"core::any"],[161,"domain_client_operator::fetch_domain_bootstrap_info"],[162,"subspace_runtime_primitives"],[163,"core::error"],[164,"sc_network::service::traits"],[165,"core::marker"],[166,"core::marker"]],"d":["Subspace Cli.","","","","","","","","","","","","","","","","","","","Create a Configuration object from the current object, …","","","","","","","Domain arguments","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Constructs a new instance of <code>DomainCli</code>.","Run a node.","Run a domain node.","","Sudo account to use for malicious operator If not passed, …","","","","","","","","","","","","","","","","","","","","","","","<code>DomainInstanceStarter</code> used to start a domain instance node …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,0,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,16,1,1,16,16,1,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,0,1,16,1,16,16,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30],"f":"``{b{{`{{h{}{{d{f}}}}}}}}{jj}000{{}f}0{ce{}{}}000{{}j}000{{}l}0{{nA`b{Ad{Ab}}Af}{{Aj{Ah}}}}{Alc{}}00055``{AlAn}066{{B`Bb}Bd}{{bBb}Bd}{cc{}}0{Bf{{Bj{B`Bh}}}}{Bf{{Bj{bBh}}}}102:2::22:{{}{{Bn{Bl}}}}0<<<<{{}Al}0<<{{{Ad{c}}}{{Ad{C`}}}{}}0{{{Cb{c}}}{{Cb{C`}}}{}}0{{{Cd{c}}}{{Cd{C`}}}{}}0??????{{B`Cf}{{Bj{{Ad{Ab}}f}}}}{{bCf}{{Bj{{Ad{Ab}}f}}}}`{cb{{h{}{{d{f}}}}}}``{B`Ch}`{{}f}0{c{{Bj{e}}}{}{}}00000{cCj{}}0{cCf{}}0{ce{}{}}000{{B`Bf}{{Bj{AnBh}}}}{{bBf}{{Bj{AnBh}}}}1022```22``````{Alc{}}0``{AlAn}{cc{}}0505`{{}Al}6{{{Ad{c}}}{{Ad{C`}}}{}}{{{Cb{c}}}{{Cb{C`}}}{}}{{{Cd{c}}}{{Cd{C`}}}{}}999`{{{Cl{c}}{D`{Cn}}Db}{{Bj{An{Ad{Dd}}}}}{DfDhDj}}`===<;:::","c":[],"p":[[5,"DomainCli",0],[17,"Item"],[5,"String",141],[10,"Iterator",142],[5,"Command",143],[1,"i32"],[5,"DomainId",144],[5,"BasePath",145],[10,"ChainSpec",146],[5,"Box",147],[5,"Handle",148],[5,"Configuration",145],[8,"Result",149],[1,"usize"],[1,"unit"],[5,"Cli",0],[5,"Formatter",150],[8,"Result",150],[5,"ArgMatches",151],[8,"Error",152],[6,"Result",153],[5,"Id",154],[6,"Option",155],[10,"Any",156],[5,"Arc",157],[5,"Rc",158],[1,"str"],[5,"AccountId32",159],[5,"TypeId",156],[5,"DomainInstanceStarter",100],[8,"Block",160],[5,"BootstrapResult",161],[8,"AccountId",162],[10,"Error",163],[10,"NetworkPeers",164],[10,"Send",165],[10,"Sync",165]],"b":[]}],\
["subspace_metrics",{"doc":"This Rust module serves as a bridge between two different …","t":"PPGPNNNNNNNNFNHNNNNNNNN","n":["Both","PrometheusClient","RegistryAdapter","Substrate","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","metrics","register","start_prometheus_metrics_server","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"subspace_metrics"],[23,"actix_web::config"],[24,"core::net::socket_addr"],[25,"alloc::vec"],[26,"std::io::error"],[27,"core::future::future"],[28,"core::result"],[29,"core::any"]],"d":["We use both Substrate and prometheus-client metrics …","Uses only the prometheus-client metrics registry.","Metrics registry adapter for prometheus-client and …","Uses only the Substrate metrics registry.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Start prometheus metrics server on the provided address.","","","","","","","",""],"i":[6,6,0,6,6,1,6,1,6,1,6,1,0,1,0,6,1,6,1,6,1,6,1],"f":"````{ce{}{}}000{cc{}}011`{{bd}f}{{{j{h}}l}{{A`{{`{{Ab{}{{n{{A`{f}}}}}}}}}}}}{c{{Ad{e}}}{}{}}000{cAf{}}055","c":[],"p":[[5,"metrics",0],[5,"AppService",23],[1,"unit"],[6,"SocketAddr",24],[5,"Vec",25],[6,"RegistryAdapter",0],[17,"Output"],[8,"Result",26],[10,"Future",27],[6,"Result",28],[5,"TypeId",29]],"b":[]}],\
["subspace_networking",{"doc":"Networking functionality of Subspace Network, primarily …","t":"PFGPKFGPPPGFFFGKTPKEFFPPPTEFGFIFPPRPIGFPPPPGPGPFPPFPMNOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNOOONEOOONOOOOOOONNNMNNNNNNMNOHNOOONONNMNMNMNOOMNNONNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNOOOOOOIFNNNNNNNNCNCHNNNNIGPKNNNNNNNNNNNNMMNNNNNNFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNN","n":["CantPreallocateKnownPeersFile","Config","CreationError","Dynamic","GenericRequest","GenericRequestHandler","GetClosestPeersError","IncorrectResponseFormat","Io","Io","KademliaMode","KeyWrapper","KnownPeersManager","KnownPeersManagerConfig","KnownPeersManagerPersistenceError","KnownPeersRegistry","LOG_TARGET","LastSegmentHeaders","LocalRecordProvider","Multihash","Node","NodeRunner","NodeRunnerDropped","NodeRunnerDropped","NodeRunnerDropped","PROTOCOL_NAME","PeerAddress","PeerAddressRemovedEvent","PeerDiscovered","PieceByIndexRequest","PieceByIndexRequestHandler","PieceByIndexResponse","ProtocolFailure","RelayServerExpected","Response","RoutablePeer","SegmentHeaderBySegmentIndexesRequestHandler","SegmentHeaderRequest","SegmentHeaderResponse","SegmentIndexes","SendCommand","SendCommand","SendCommand","SendRequestError","Static","SubscribeError","Subscription","TopicSubscription","TransportCreationError","TransportError","UniqueRecordBinaryHeap","UnroutablePeer","add_known_peer","add_known_peer","address","allow_non_global_addresses_in_dht","ban_peer","bootstrap","bootstrap_addresses","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","cache_size","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected_peers","construct","contains_key","create","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_bootstrap_on_start","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_known_peers_source","encode","encode","encode","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","external_addresses","external_addresses","failed_address_cache_removal_interval","failed_address_kademlia_removal_interval","file_size","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_closest_peers","get_providers","get_requests_batch_handle","get_value","gossipsub","id","identify","ignore_peer_list","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_random_query_interval","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_dynamic","is_static","kademlia","kademlia_mode","keypair","keys","libp2p","libp2p_metrics","listen_on","listen_on_fallback_to_random_port","listeners","local_records_provider","max_established_incoming_connections","max_established_outgoing_connections","max_pending_incoming_connections","max_pending_outgoing_connections","metrics","networking_parameters_registry","new","new","new","next_known_addresses_batch","next_known_addresses_batch","on_connected_peer","on_disconnected_peer","on_discovered_peer","on_new_listener","on_num_established_peer_connections_change","on_unreachable_address","on_unreachable_address","path","peer_id","peer_id","peer_id","piece","piece_index","poll_next","protocol_version","publish","put_value","record","remove","remove_all_known_peer_addresses","remove_all_known_peer_addresses","remove_known_peer_addresses","remove_known_peer_addresses","request_response_protocols","reserved_peers","run","run","run","segment_headers","send_generic_request","set_limit","should_include_key","size","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","source","source","source","start_over_address_batching","start_over_address_batching","start_over_address_batching","subscribe","temporary_ban_backoff","temporary_bans_cache_size","timeout","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","using_encoded","using_encoded","using_encoded","utils","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","yamux_config","address","peer_id","peer_id","segment_header_number","segment_indexes","PeerAddress","SubspaceMetrics","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","multihash","new","piece_provider","strip_peer_id","try_from","try_into","type_id","vzip","Multihash","MultihashCode","PieceIndex","ToMultihash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","init","into","to_multihash","to_multihash_by_code","to_owned","try_from","try_from","try_into","type_id","vzip","NoPieceValidator","PieceProvider","PieceValidator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","get_piece_from_archival_storage","get_piece_from_cache","get_piece_from_peer","init","init","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","validate_piece","validate_piece","vzip","vzip"],"q":[[0,"subspace_networking"],[529,"subspace_networking::PeerDiscovered"],[532,"subspace_networking::SegmentHeaderRequest"],[534,"subspace_networking::utils"],[552,"subspace_networking::utils::multihash"],[576,"subspace_networking::utils::piece_provider"],[610,"libp2p_identity::peer_id"],[611,"multiaddr"],[612,"alloc::vec"],[613,"core::future::future"],[614,"alloc::boxed"],[615,"core::pin"],[616,"futures_channel::mpsc"],[617,"core::result"],[618,"core::clone"],[619,"core::marker"],[620,"core::marker"],[621,"core::ops::function"],[622,"parity_scale_codec::error"],[623,"parity_scale_codec::codec"],[624,"parity_scale_codec::codec"],[625,"core::fmt"],[626,"core::fmt"],[627,"libp2p_core::transport"],[628,"futures_channel::oneshot"],[629,"libp2p_gossipsub::error"],[630,"futures_core::stream"],[631,"libp2p_kad::behaviour"],[632,"core::iter::traits::exact_size"],[633,"alloc::string"],[634,"libp2p_identity::keypair"],[635,"prometheus_client::registry"],[636,"alloc::sync"],[637,"event_listener_primitives::handler_id"],[638,"core::task::wake"],[639,"core::task::poll"],[640,"libp2p_gossipsub"],[641,"libp2p_kad::record"],[642,"libp2p_kad::record"],[643,"core::any"],[644,"core::ops::function"],[645,"subspace_core_primitives::pieces"]],"d":["Can’t preallocate known peers file, probably not enough …","<code>Node</code> configuration.","Errors that might happen during network creation.","Kademlia mode will be changed using Autonat protocol when …","Generic request with associated response","Defines generic request-response protocol handler.","Defines errors for <code>get-closest-peers</code> operation.","Underlying protocol returned an incorrect format, …","I/O error.","I/O error.","Defines Kademlia mode","Wrapper data structure that allows to work with keys as …","Handles networking parameters. It manages network …","Configuration for <code>KnownPeersManager</code>.","Networking parameters persistence errors.","Defines operations with the networking parameters.","Specifies log-parameters for tracing.","Defines how many segment headers to return.","Trait to be implemented on providers of local records","","Implementation of a network node on Subspace Network.","Runner for the Node.","Node runner was dropped","Node runner was dropped","Node runner was dropped","Defines request-response protocol name.","","Defines the event triggered when the peer address is …","Represents Kademlia events (RoutablePeer, …","Piece-by-hash protocol request.","Create a new piece-by-hash request handler.","Piece-by-hash protocol response.","Underlying protocol returned an error, impossible to get …","Circuit relay client error.","Response type that corresponds to this request","Kademlia’s routable or pending routable peer event.","Create a new segment-header-by-segment-indexes request …","Segment header by segment indexes protocol request.","Segment header by segment indexes protocol response.","Segment headers by segment indexes.","Failed to send command to the node runner","Failed to send command to the node runner","Failed to send command to the node runner","Defines errors for <code>send-request</code> operation.","The Kademlia mode is static for the duration of the …","Defines errors for <code>subscribe</code> operation.","Failed to create subscription.","Topic subscription, will unsubscribe when last instance is …","Transport creation error.","Transport error when attempting to listen on multiaddr.","Limited-size max binary heap for Kademlia records’ keys.","Kademlia’s unroutable peer event.","Registers a peer ID and associated addresses","","Peer address","Should non-global addresses be added to the DHT?","Ban peer with specified peer ID.","Bootstraps Kademlia network","Addresses to bootstrap Kademlia network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a reference to the <code>NetworkingParametersRegistry</code> …","Defines cache size.","Remove all contents, while keeping allocated capacity","","","","","","","","","","","","","","","","","","","","","","","Returns a collection of currently connected peers.","Create a new network node and node runner instances.","Checks whether the heap contains the given key.","Creates new <code>GenericRequestHandler</code> by given handler.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines whether we should run blocking Kademlia …","","","","","","","","","","","","","","","","","","","","","","","","Defines whether we return known peers batches on …","","","","","","","","","","","","","","","","","","","","Node’s own addresses observed remotely.","Known external addresses to the local peer. The addresses …","Defines interval before the next peer address removes …","Defines interval before the next peer address removal …","Size of the backing file on disk","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get closest peers by multihash key using Kademlia DHT.","Get item providers by its key. Initiate ‘providers’ …","Returns the request batch handle with common “connection …","Return a value from the Kademlia network of the DSN.","The configuration for the Gossip behaviour.","Node’s own local ID.","The configuration for the Identify behaviour.","Peer ID list to filter on address adding.","","","","","","","","","","","","","","","","","","","","","","How frequently should random queries be done using …","Insert a key in the heap evicting (popping) if the size …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the mode is Dynamic.","Returns true if the mode is Static.","The configuration for the Kademlia behaviour.","Kademlia mode. The default value is set to Static(Client). …","Identity keypair of a node used for authenticated …","Iterator over all keys in arbitrary order","","Optional libp2p prometheus metrics. None will disable …","List of <code>Multiaddr</code> on which to listen for incoming …","Fallback to random port if specified (or default) port is …","Node’s own addresses where it listens for incoming …","Externally provided implementation of the local records …","Established incoming swarm connection limit.","Established outgoing swarm connection limit.","Pending incoming swarm connection limit.","Pending outgoing swarm connection limit.","Internal prometheus metrics. None will disable metrics …","A reference to the <code>NetworkingParametersRegistry</code> …","Object constructor.","Creates a new <code>Config</code>.","Constructs a heap with given PeerId and size limit.","Returns a batch of the combined collection of known …","","Callback is called when a peer is connected.","Callback is called when a peer is disconnected.","Callback is called when a routable or unraoutable peer is …","Callback is called when node starts listening on new …","Callback is called when number of established peer …","Triggers when we removed the peer address from the …","","Defines whether we enable cache persistence.","Converts public key from keypair to PeerId. It serves as …","Extracts peer ID from event.","Peer ID","Returned data.","Request key - piece index","","Defines protocol version for the network peers. Affects …","Subcribe a messgo to some topic on the DSN.","Puts a value into the Kademlia network of the DSN.","Gets a provider record for key that is stored locally","Removes a key from the heap.","Unregisters associated addresses for peer ID.","","Unregisters associated addresses for peer ID.","","The configuration for the <code>RequestResponsesBehaviour</code> …","Defines set of peers with a permanent connection (and …","Drive async work in the persistence provider","","Drives the main networking future forward.","Returned data.","Sends the generic request to the peer and awaits the …","Set limit to new value, decreasing to value lower than …","Checks whether we include the key.","Returns heap-size","","","","","","","","","","","","Reset the batching process to the initial state.","Reset the batching process to the initial state.","Subcribe to some topic on the DSN.","Backoff policy for temporary banning of unreachable peers.","How many temporarily banned unreachable peers to keep in …","Adds a timeout to the setup and protocol upgrade process …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Miscellaneous utilities for networking.","","","","","","","","","","","","","","","","","","","","","","Yamux multiplexing configuration.","Peer address","Peer ID","Peer ID","Number of segment headers to return.","Segment indexes to get.","Convenience alias for peer ID and its multiaddresses.","Metrics for Subspace networking","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Defines multihash codes for Subspace DSN.","Constructor","Provides methods to retrieve pieces from DSN.","Helper function. Converts multiaddresses to a tuple with …","","","","","Type alias for libp2p Multihash. Constant 64 was copied …","Subspace Network multihash codes.","Piece index code.","Helper trait for converting to multihash.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Convert to multihash by the default multihash code.","Convert to multihash by the specified multihash code.","","","","","","","Stub implementation for piece validation.","Piece provider with cancellation and optional piece …","Validates piece against using its commitment.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get piece from archival storage (L1). The algorithm tries …","Returns piece by its index from farmer’s piece cache (L2)","Get piece from a particular peer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates new piece provider.","","","","","","","Validates piece against using its commitment.","","",""],"i":[48,0,0,17,0,0,0,51,48,27,0,0,0,0,0,0,32,20,0,0,0,0,49,50,51,32,0,0,0,0,0,0,51,27,32,22,0,0,0,20,49,50,51,0,17,0,50,0,27,27,0,22,1,8,15,24,9,9,24,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,8,16,13,15,16,17,9,18,19,20,21,22,23,13,15,16,17,9,18,19,20,21,22,23,13,9,0,13,85,18,19,20,21,18,19,20,21,18,19,20,21,18,19,20,21,24,16,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,24,8,8,24,25,85,15,16,48,17,27,42,42,49,50,51,9,18,19,20,21,22,23,13,16,18,19,21,18,19,20,21,18,19,20,21,18,18,19,19,20,20,21,21,9,24,16,16,8,24,25,15,16,48,48,17,27,27,42,49,49,50,50,51,51,9,18,19,20,21,22,23,13,8,24,25,85,15,16,48,48,17,27,27,27,42,49,49,49,50,50,50,50,51,51,51,51,9,18,19,20,21,22,23,13,9,9,9,9,24,9,24,16,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,24,13,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,17,17,24,24,24,13,0,24,24,24,9,24,24,24,24,24,24,24,8,24,13,1,8,9,9,9,9,9,1,8,16,0,22,15,19,18,42,24,9,9,28,13,1,8,1,8,24,24,1,8,25,21,9,13,13,13,42,18,19,20,21,48,27,49,50,51,8,1,1,9,24,24,24,18,19,20,21,15,16,17,9,18,19,20,21,22,23,13,48,27,49,50,51,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,18,19,21,0,8,24,25,85,15,16,48,17,27,42,49,50,51,9,18,19,20,21,22,23,13,24,86,87,86,88,89,0,0,75,75,75,75,75,75,75,75,0,75,0,0,75,75,75,75,0,0,77,0,77,77,77,77,77,77,77,77,77,77,77,77,78,78,77,77,77,77,77,77,0,0,0,84,80,84,80,84,80,84,80,84,80,80,84,80,80,80,80,84,80,84,80,80,84,80,84,80,84,80,83,84,84,80],"f":"````````````````````````````````````````````````````{{bd{h{f}}}{{n{{l{j}}}}}}{{A`d{h{f}}}{{n{{l{j}}}}}}``{{Abd}{{Ah{AdAf}}}}{Ab{{Ah{Ad`}}}}`{ce{}{}}00000000000000000000000000000000000000000{A`{{l{b}}}}`{{{Aj{c}}}AdAl}{AnAn}{B`B`}{BbBb}{AbAb}{BdBd}{BfBf}{BhBh}{BjBj}{BlBl}{{{Bn{c}}}{{Bn{c}}}Al}{{{Aj{c}}}{{Aj{c}}}Al}{{ce}Ad{}{}}0000000000{Ab{{Ah{{h{d}}`}}}}{{{C`{c}}}{{Ah{{Cd{Ab{Cb{c}}}}Cf}}}{ChCjCl}}{{{Aj{c}}c}CnAl}{g{{l{`}}}D`{{j{}{{Db{Dd}}}}Cj}{{Df{dc}{{Db{e}}}}CjCl}}{c{{Ah{BdDh}}}Dj}{c{{Ah{BfDh}}}Dj}{c{{Ah{BhDh}}}Dj}{c{{Ah{BjDh}}}Dj}{{{Dn{Dl}}}{{Ah{cDh}}}{}}000{{E`{Dn{Dl}}}{{Ah{cDh}}}{}}000{{E`c}{{Ah{eDh}}}Dj{}}000{{}{{C`{Ad}}}}{{}B`}{Ebc{}}00000000000000000000000000000000000000000`{A`Ad}{EbAd}000000000{EdAd}11111111111`{Bd{{h{Dl}}}}{Bf{{h{Dl}}}}{Bj{{h{Dl}}}}{{Bdc}Ad{EfEh}}{{Bfc}Ad{EfEh}}{{Bhc}Ad{EfEh}}{{Bjc}Ad{EfEh}}{{BdBd}Cn}{{BfBf}Cn}{{BhBh}Cn}{{BjBj}Cn}{{ce}Cn{}{}}0000000{Ab{{h{f}}}}```{EjEb}{{{C`{c}}El}En{}}{{{Cb{c}}El}En{ChCjCl}}{{AnEl}En}{{B`El}En}{{F`El}En}0{{BbEl}En}{{CfEl}En}0{{EdEl}En}{{FbEl}En}0{{FdEl}En}0{{FfEl}En}0{{AbEl}En}{{BdEl}En}{{BfEl}En}{{BhEl}En}{{BjEl}En}{{BlEl}En}{{{Bn{c}}El}EnFh}{{{Aj{c}}El}EnFh}{cc{}}000000{FjF`}1{FjCf}2{{{Fl{Fj}}}Cf}3{AfFb}{FnFb}55{FnFd}{AfFd}{G`Fd}{FnFf}9{DhFf}{AfFf};;;;;;;;{{AbGb}{{Ah{{`{{Gf{}{{Gd{d}}}}}}Fb}}}}{{AbGb}{{Ah{{`{{Gf{}{{Gd{d}}}}}}`}}}}`{{AbGb}{{Ah{{`{{Gf{}{{Gd{Gh}}}}}}`}}}}`{Abd}``{{}Eb}00000000000000000000`{{{Aj{c}}c}{{Dd{c}}}Al}{ce{}{}}00000000000000000000{BbCn}0```{{{Aj{c}}}{{`{{Gj{}{{Gd{c}}}}}}}Al}````{Ab{{h{f}}}}```````{B`{{Ah{A`F`}}}}{{GlGnc{Dd{H`}}}{{C`{c}}}Ch}{{dEb}{{Aj{c}}}Al}{b{{n{{l{j}}}}}}{A`{{n{{l{j}}}}}}{{Ab{Hb{Df}}}Hd}0000{{b{Hb{Df}}}{{Dd{Hd}}}}{{A`{Hb{Df}}}{{Dd{Hd}}}}`{Gnd}{Bld}```{{{n{Ed}}Hf}{{Hh{{Dd{c}}}}}{}}`{{AbHj{h{Dl}}}{{Ah{Ad`}}}}{{AbGb{h{Dl}}}{{Ah{{`{{Gf{}{{Gd{Ad}}}}}}`}}}}{{ChHl}{{Dd{Hn}}}}{{{Aj{c}}c}AdAl}{{bd}Ad}{{A`d}Ad}{{bd{h{f}}}{{n{{l{j}}}}}}{{A`d{h{f}}}{{n{{l{j}}}}}}``?>{{{Cb{c}}}Ad{ChCjCl}}`{{Abdc}{{Ah{Ff}}}D`}{{{Aj{c}}Eb}AdAl}{{{Aj{c}}c}CnAl}{{{Aj{c}}}EbAl}{Ed{{Cd{Eb{Dd{Eb}}}}}}{BdEb}{BfEb}{BhEb}{BjEb}{F`{{Dd{I`}}}}{Cf{{Dd{I`}}}}{Fb{{Dd{I`}}}}{Fd{{Dd{I`}}}}{Ff{{Dd{I`}}}}{A`Ad}{bAd}0{{AbHj}{{Ah{EdFd}}}}```{{c{Dn{Dl}}}{{h{Dl}}}{}}000{ce{}{}}0000000000{cGl{}}0000{c{{Ah{e}}}{}{}}00000000000000000000000000000000000000000{cIb{}}00000000000000000000{{Bde}c{}{{Id{{Dn{Dl}}}{{Db{c}}}}}}{{Bfe}c{}{{Id{{Dn{Dl}}}{{Db{c}}}}}}{{Bje}c{}{{Id{{Dn{Dl}}}{{Db{c}}}}}}`666666666666666666666````````66{Ebc{}}0{EbAd}{cc{}}{{}Eb}:`{H`If}`{{{h{f}}}{{h{Ih}}}}::9<````<<{IjIj}{{ce}Ad{}{}}776{{IjIj}Cn}{{IjEl}En}76{ce{}{}}{IlGb}{{IlIj}Gb}2{c{{Ah{e}}}{}{}}{In{{Ah{Ijc}}}{}}1{cIb{}}5```5555????>>{{{J`{c}}El}En{}}>>{{{J`{c}}JbEb}{{Dd{Jd}}}Jf}{{{J`{c}}Jb}{{Dd{Jd}}}Jf}{{{J`{c}}dJb}{{Dd{Jd}}}Jf}{{}Eb}0::{{Ab{Dd{c}}}{{J`{c}}}Jf}888866{{JfdJbJd}{{n{{l{j}}}}}}{{JhdJbJd}{{n{{l{j}}}}}}==","c":[],"p":[[10,"KnownPeersRegistry",0],[5,"PeerId",610],[5,"Multiaddr",611],[5,"Vec",612],[10,"Future",613],[5,"Box",614],[5,"Pin",615],[5,"KnownPeersManager",0],[5,"Node",0],[1,"unit"],[5,"SendError",616],[6,"Result",617],[5,"UniqueRecordBinaryHeap",0],[10,"Clone",618],[5,"PeerAddressRemovedEvent",0],[5,"KnownPeersManagerConfig",0],[6,"KademliaMode",0],[5,"PieceByIndexRequest",0],[5,"PieceByIndexResponse",0],[6,"SegmentHeaderRequest",0],[5,"SegmentHeaderResponse",0],[6,"PeerDiscovered",0],[5,"KeyWrapper",0],[5,"Config",0],[5,"NodeRunner",0],[1,"tuple"],[6,"CreationError",0],[10,"LocalRecordProvider",0],[10,"Send",619],[10,"Sync",619],[1,"bool"],[10,"GenericRequest",0],[17,"Output"],[6,"Option",620],[10,"Fn",621],[5,"Error",622],[10,"Input",623],[1,"u8"],[1,"slice"],[1,"u32"],[1,"usize"],[5,"TopicSubscription",0],[10,"Output",623],[10,"Sized",619],[8,"NonZeroUsize",624],[5,"Formatter",625],[8,"Result",625],[6,"KnownPeersManagerPersistenceError",0],[6,"GetClosestPeersError",0],[6,"SubscribeError",0],[6,"SendRequestError",0],[10,"Debug",625],[5,"Error",626],[6,"TransportError",627],[5,"Canceled",628],[6,"SubscriptionError",629],[8,"Multihash",552],[17,"Item"],[10,"Stream",630],[5,"PeerRecord",631],[10,"ExactSizeIterator",632],[5,"String",633],[5,"Keypair",634],[5,"Registry",635],[5,"Arc",636],[5,"HandlerId",637],[5,"Context",638],[6,"Poll",639],[8,"Sha256Topic",640],[5,"Key",641],[5,"ProviderRecord",641],[10,"Error",642],[5,"TypeId",643],[10,"FnOnce",621],[5,"SubspaceMetrics",534],[8,"PeerAddress",534],[6,"MultihashCode",552],[10,"ToMultihash",552],[1,"u64"],[5,"PieceProvider",576],[5,"PieceIndex",644],[5,"Piece",644],[10,"PieceValidator",576],[5,"NoPieceValidator",576],[5,"GenericRequestHandler",0],[15,"RoutablePeer",529],[15,"UnroutablePeer",529],[15,"LastSegmentHeaders",532],[15,"SegmentIndexes",532]],"b":[[243,"impl-Debug-for-KnownPeersManagerPersistenceError"],[244,"impl-Display-for-KnownPeersManagerPersistenceError"],[246,"impl-Debug-for-CreationError"],[247,"impl-Display-for-CreationError"],[249,"impl-Debug-for-GetClosestPeersError"],[250,"impl-Display-for-GetClosestPeersError"],[251,"impl-Display-for-SubscribeError"],[252,"impl-Debug-for-SubscribeError"],[253,"impl-Debug-for-SendRequestError"],[254,"impl-Display-for-SendRequestError"],[272,"impl-From%3CError%3E-for-CreationError"],[274,"impl-From%3CTransportError%3CError%3E%3E-for-CreationError"],[276,"impl-From%3CSendError%3E-for-GetClosestPeersError"],[277,"impl-From%3CCanceled%3E-for-GetClosestPeersError"],[280,"impl-From%3CCanceled%3E-for-SubscribeError"],[281,"impl-From%3CSendError%3E-for-SubscribeError"],[282,"impl-From%3CSubscriptionError%3E-for-SubscribeError"],[283,"impl-From%3CCanceled%3E-for-SendRequestError"],[285,"impl-From%3CError%3E-for-SendRequestError"],[286,"impl-From%3CSendError%3E-for-SendRequestError"]]}],\
["subspace_proof_of_space",{"doc":"Subspace proof of space implementation based on Chia","t":"PRGPTKKNNCCNNNNNMNNMMNNNNNMCNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Chia","Generator","PosTableType","Shim","TABLE_TYPE","Table","TableGenerator","borrow","borrow_mut","chia","chiapos","clone","clone_into","deref","deref_mut","drop","find_proof","fmt","from","generate","generate","generate_parallel","generate_parallel","generator","init","into","is_proof_valid","shim","to_owned","try_from","try_into","type_id","ChiaTable","ChiaTableGenerator","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","find_proof","fmt","fmt","from","from","generate","generate","generate_parallel","generate_parallel","init","init","into","into","is_proof_valid","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Tables","TablesCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create","create","create","create","create","create","create","create","create","create","create","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_parallel","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","create_simple","default","deref","deref","deref_mut","deref_mut","drop","drop","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_proof","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","find_quality","fmt","fmt","from","from","init","init","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify","verify","verify","verify","verify","verify","verify","verify","verify","verify","ShimTable","ShimTableGenerator","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","find_proof","fmt","fmt","from","from","generate","generate","init","init","into","into","is_proof_valid","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"subspace_proof_of_space"],[32,"subspace_proof_of_space::chia"],[68,"subspace_proof_of_space::chiapos"],[164,"subspace_proof_of_space::shim"],[198,"subspace_core_primitives"],[199,"core::option"],[200,"core::fmt"],[201,"core::fmt"],[202,"core::any"],[203,"core::iter::traits::iterator"]],"d":["Chia table","Instance that can be used to generate tables with better …","Proof of space table type","Shim table","Proof of space table type","Proof of space kind","Stateful table generator with better performance","","","Chia proof of space implementation","Chia proof of space reimplementation in Rust","","","","","","Try to find proof at <code>challenge_index</code> if it exists","","Returns the argument unchanged.","Generate new table with 32 bytes seed.","Generate new table with 32 bytes seed.","Generate new table with 32 bytes seed using parallelism.","Generate new table with 32 bytes seed using parallelism.","Returns a stateful table generator with better performance","","Calls <code>U::from(self)</code>.","Check whether proof created earlier is valid and return …","Shim proof of space implementation that works much faster …","","","","","Subspace proof of space table.","Subspace proof of space table generator.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Collection of Chia tables","Caches that can be used to optimize creation of multiple …","","","","","","","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Create Chia proof of space tables. There also exists …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Almost the same as <code>Self::create()</code>, but uses parallelism …","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create Chia proof of space tables.","Create new instance","","","","","","","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","Find proof of space quality for given challenge.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Verify proof of space for given seed and challenge.","Subspace proof of space table.","Subspace proof of space table generator.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[1,5,0,1,5,0,0,1,1,0,0,1,1,1,1,1,5,1,1,9,5,9,5,5,1,1,5,0,1,1,1,1,0,0,16,17,16,17,16,16,16,16,17,16,17,16,17,17,16,17,16,17,16,17,16,17,16,17,16,17,17,16,16,17,16,17,16,17,0,0,18,21,18,21,18,18,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,18,18,21,18,21,18,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,18,21,18,21,18,21,18,21,18,18,21,18,21,18,21,21,21,21,21,21,21,21,21,21,21,21,0,0,24,25,24,25,24,24,24,24,25,24,25,24,25,25,24,25,24,25,24,25,24,25,24,25,25,24,24,25,24,25,24,25],"f":"```````{ce{}{}}0``{bb}{{ce}d{}{}}{fc{}}0{fd}{{{j{}{{h{c}}}}l}{{A`{n}}}Ab}{{bAd}Af}{cc{}}{{AbAh}cj}{Ah{{j{}{{h{c}}}}}Ab}10{{}c{}}{{}f};{{Ahln}Aj}`<{c{{Al{e}}}{}{}}0{cAn{}}``>>>>{B`B`}={{}B`}====<<{{Bbl}{{A`{n}}}}{{B`Ad}Af}{{BbAd}Af}<<{{B`Ah}Bb}{AhBb}10::{ce{}{}}0:0999988``0000{BdBd}{{ce}d{}{}}{{{Bh{Bf}}Bd}Bj}000000000000000000000{{{Bh{Bf}}}Bj}0000000000{{}Bd}{fc{}}000{fd}0{{Bj{Bh{Bf}}}{{`{{Bn{}{{Bl{{Bh{Bf}}}}}}}}}}000000000000000000000{{BdAd}Af}{{BjAd}Af}{cc{}}0{{}f}0<<<{c{{Al{e}}}{}{}}000{cAn{}}0{{{Bh{Bf}}{Bh{Bf}}{Bh{Bf}}}{{A`{{Bh{Bf}}}}}}0000000000``????{C`C`}>{{}C`};;;;::{{Cbl}{{A`{n}}}}{{C`Ad}Af}{{CbAd}Af}99{{C`Ah}Cb}{AhCb}::{ce{}{}}0{{Ahln}Aj}1;;;;::","c":[],"p":[[6,"PosTableType",0],[1,"unit"],[1,"usize"],[17,"Generator"],[10,"Table",0],[1,"u32"],[5,"PosProof",198],[6,"Option",199],[10,"TableGenerator",0],[5,"Formatter",200],[8,"Result",200],[5,"PosSeed",198],[1,"bool"],[6,"Result",201],[5,"TypeId",202],[5,"ChiaTableGenerator",32],[5,"ChiaTable",32],[5,"TablesCache",68],[1,"u8"],[1,"array"],[5,"Tables",68],[17,"Item"],[10,"Iterator",203],[5,"ShimTableGenerator",164],[5,"ShimTable",164]],"b":[[76,"impl-Tables%3C21%3E"],[77,"impl-Tables%3C18%3E"],[78,"impl-Tables%3C20%3E"],[79,"impl-Tables%3C19%3E"],[80,"impl-Tables%3C17%3E"],[81,"impl-Tables%3C23%3E"],[82,"impl-Tables%3C22%3E"],[83,"impl-Tables%3C16%3E"],[84,"impl-Tables%3C25%3E"],[85,"impl-Tables%3C15%3E"],[86,"impl-Tables%3C24%3E"],[87,"impl-Tables%3C22%3E"],[88,"impl-Tables%3C21%3E"],[89,"impl-Tables%3C20%3E"],[90,"impl-Tables%3C24%3E"],[91,"impl-Tables%3C19%3E"],[92,"impl-Tables%3C18%3E"],[93,"impl-Tables%3C23%3E"],[94,"impl-Tables%3C15%3E"],[95,"impl-Tables%3C25%3E"],[96,"impl-Tables%3C17%3E"],[97,"impl-Tables%3C16%3E"],[98,"impl-Tables%3C15%3E"],[99,"impl-Tables%3C16%3E"],[100,"impl-Tables%3C25%3E"],[101,"impl-Tables%3C17%3E"],[102,"impl-Tables%3C23%3E"],[103,"impl-Tables%3C22%3E"],[104,"impl-Tables%3C18%3E"],[105,"impl-Tables%3C20%3E"],[106,"impl-Tables%3C21%3E"],[107,"impl-Tables%3C24%3E"],[108,"impl-Tables%3C19%3E"],[116,"impl-Tables%3C24%3E"],[117,"impl-Tables%3C20%3E"],[118,"impl-Tables%3C19%3E"],[119,"impl-Tables%3C18%3E"],[120,"impl-Tables%3C16%3E"],[121,"impl-Tables%3C23%3E"],[122,"impl-Tables%3C21%3E"],[123,"impl-Tables%3C22%3E"],[124,"impl-Tables%3C17%3E"],[125,"impl-Tables%3C25%3E"],[126,"impl-Tables%3C15%3E"],[127,"impl-Tables%3C18%3E"],[128,"impl-Tables%3C21%3E"],[129,"impl-Tables%3C19%3E"],[130,"impl-Tables%3C22%3E"],[131,"impl-Tables%3C20%3E"],[132,"impl-Tables%3C17%3E"],[133,"impl-Tables%3C23%3E"],[134,"impl-Tables%3C16%3E"],[135,"impl-Tables%3C25%3E"],[136,"impl-Tables%3C15%3E"],[137,"impl-Tables%3C24%3E"],[153,"impl-Tables%3C23%3E"],[154,"impl-Tables%3C21%3E"],[155,"impl-Tables%3C16%3E"],[156,"impl-Tables%3C17%3E"],[157,"impl-Tables%3C22%3E"],[158,"impl-Tables%3C18%3E"],[159,"impl-Tables%3C24%3E"],[160,"impl-Tables%3C25%3E"],[161,"impl-Tables%3C15%3E"],[162,"impl-Tables%3C19%3E"],[163,"impl-Tables%3C20%3E"]]}],\
["subspace_proof_of_time",{"doc":"Proof of time implementation.","t":"PGNNNNNNNNNNHNNNNHOO","n":["NotMultipleOfCheckpoints","PotError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","prove","to_string","try_from","try_into","type_id","verify","iterations","num_checkpoints"],"q":[[0,"subspace_proof_of_time"],[18,"subspace_proof_of_time::PotError"],[20,"core::fmt"],[21,"core::fmt"],[22,"core::num::nonzero"],[23,"subspace_core_primitives"],[24,"alloc::string"],[25,"core::any"],[26,"subspace_core_primitives"]],"d":["Iterations is not multiple of number of checkpoints times …","Proof of time error","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Run PoT proving and produce checkpoints.","","","","","Verify checkpoint, number of iterations is set across …","Slot iterations provided","Number of checkpoints"],"i":[3,0,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,0,15,15],"f":"``{ce{}{}}0{bc{}}0{bd}{{fh}j}0{cc{}}{{}b}5{{ln}{{Ab{A`f}}}}{cAd{}}{c{{Ab{e}}}{}{}}0{cAf{}}{{ln{Aj{Ah}}}{{Ab{Alf}}}}``","c":[],"p":[[1,"usize"],[1,"unit"],[6,"PotError",0],[5,"Formatter",20],[8,"Result",20],[5,"PotSeed",21],[8,"NonZeroU32",22],[5,"PotCheckpoints",21],[6,"Result",23],[5,"String",24],[5,"TypeId",25],[5,"PotOutput",21],[1,"slice"],[1,"bool"],[15,"NotMultipleOfCheckpoints",18]],"b":[[7,"impl-Debug-for-PotError"],[8,"impl-Display-for-PotError"]]}],\
["subspace_rpc_primitives",{"doc":"Primitives for Subspace RPC.","t":"FSFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNOOOONNNNNNNNNNOONNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNN","n":["FarmerAppInfo","MAX_SEGMENT_HEADERS_PER_REQUEST","RewardSignatureResponse","RewardSigningInfo","SlotInfo","SolutionResponse","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","dsn_bootstrap_nodes","farming_timeout","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","genesis_hash","global_challenge","hash","hash","init","init","init","init","init","into","into","into","into","into","protocol_info","public_key","serialize","serialize","serialize","serialize","serialize","signature","slot_number","slot_number","solution","solution_range","syncing","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","voting_solution_range","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"subspace_rpc_primitives"],[116,"core::result"],[117,"serde::de"],[118,"core::fmt"],[119,"core::fmt"],[120,"core::any"]],"d":["Information necessary for farmer application","Defines a limit for number of segments that can be …","Signature in response to reward hash signing request.","Reward info that needs to be signed.","Information about new slot that just arrived","Response of a slot challenge consisting of an optional …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap nodes for DSN","How much time farmer has to audit sectors and generate a …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Genesis hash of the chain","Global slot challenge","Hash to be signed.","Hash that was signed.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Protocol info for farmer","Public key of the plot identity that should create …","","","","","","Pre-header or vote hash signature.","Slot number","Slot number.","Solution farmer has for the challenge.","Acceptable solution range for block authoring","Whether node is syncing right now","","","","","","","","","","","","","","","","","","","","","","","","","","Acceptable solution range for voting","","","","",""],"i":[0,0,0,0,0,0,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,1,1,2,3,4,5,1,2,3,4,5,1,2,4,5,1,2,3,4,5,1,2,3,4,5,1,4,1,2,3,4,5,5,2,3,3,2,1,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,2,1,2,3,4,5],"f":"``````{ce{}{}}000000000{bb}{dd}{ff}{hh}{jj}{{ce}l{}{}}0000{nc{}}000000000{c{{A`{b}}}Ab}{c{{A`{d}}}Ab}{c{{A`{f}}}Ab}{c{{A`{h}}}Ab}{c{{A`{j}}}Ab}{nl}0000``{{bAd}Af}{{dAd}Af}{{fAd}Af}{{hAd}Af}{{jAd}Af}{cc{}}0000````{{}n}0000{ce{}{}}0000``{{bc}A`Ah}{{dc}A`Ah}{{fc}A`Ah}{{hc}A`Ah}{{jc}A`Ah}``````55555{c{{A`{e}}}{}{}}000000000{cAj{}}000077777`77777","c":[],"p":[[5,"FarmerAppInfo",0],[5,"SlotInfo",0],[5,"SolutionResponse",0],[5,"RewardSigningInfo",0],[5,"RewardSignatureResponse",0],[1,"unit"],[1,"usize"],[6,"Result",116],[10,"Deserializer",117],[5,"Formatter",118],[8,"Result",118],[10,"Serializer",119],[5,"TypeId",120]],"b":[]}],\
["subspace_runtime",{"doc":"","t":"IPPIIGPFIPPPIIFFFFFFFFFFFFFFFFIPPPPIFFGFIFFPIIPGPPFFSPFFFFFFFFIPPPPFFFFFIFIPFGFFFFFPFFFIPPIPFFFGIPIGGGFGGFGGIFFFIFPFFFIPPPFFIIIPPPIIPPPIIPFIPIPIIPPPFFIIPPPSFIPPPIPSSNNNNNNNNNNNNNNNNOONNNNOCNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNONOONONNNNONNNNNNNONOONNNNOONNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNOOOOOOOPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["Address","Address20","Address32","AllPalletsWithSystem","AllPalletsWithoutSystem","AllowAuthoringBy","Anyone","AvgBlockspaceUsageNumBlocks","Balances","Balances","Balances","Balances","BalancesConfig","Block","BlockAuthoringDelay","BlockHashCount","BlockHashProvider","BlockSlot","BlockSlotCount","BlockTreePruningDepth","BlockchainHistorySize","BundleLongevity","ChannelReserveFee","CheckStorageAccess","ConfirmationDepthK","CreditSupply","DisablePallets","DomainInstantiationDeposit","DomainRuntimeUpgradeDelay","DomainTxRangeAdjustmentInterval","Domains","Domains","Domains","Domains","Domains","DomainsConfig","DomainsPalletId","DynamicCostOfStorage","EnableRewardsAt","EraDuration","Executive","ExistentialDeposit","ExpectedVotesPerBlock","FirstFarmer","GenesisConfig","Header","Height","HoldIdentifier","Id","Index","InitialDomainTxRange","InitializeDynamicIssuance","MILLISECS_PER_BLOCK","Manually","MaxBundlesPerBlock","MaxDomainBlockSize","MaxDomainBlockWeight","MaxDomainNameLength","MaxInitialDomainAccounts","MaxNominators","MaxPendingStakingOperation","MaximumReceiptDrift","Messenger","Messenger","Messenger","Messenger","Messenger","MinInitialDomainAccountBalance","MinNominatorStake","MinOperatorStake","MinSectorLifetime","MinVestedTransfer","Mmr","MmrProofVerifier","OffencesSubspace","OffencesSubspace","OnXDMRewards","OriginCaller","PalletInfo","PotEntropyInjectionDelay","PotEntropyInjectionInterval","PotEntropyInjectionLookbackDepth","ProposerTaxOnVotes","Raw","RecentHistoryFraction","RecentSegments","RewardPoint","Rewards","Rewards","Rewards","RewardsConfig","RootFarmer","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeCall","RuntimeConfigs","RuntimeConfigs","RuntimeConfigsConfig","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","RuntimeTask","SS58Prefix","SelfChainId","SessionKeys","ShouldAdjustSolutionRange","SignedExtra","SlotProbability","SolutionRange","StakeEpochDuration","StakeWithdrawalLockingPeriod","StorageKeys","Subspace","Subspace","Subspace","Subspace","SubspaceBlockLength","SubspaceBlockWeights","SubspaceConfig","SubspaceMmr","Sudo","Sudo","Sudo","Sudo","SudoConfig","System","System","System","System","SystemConfig","Timestamp","Timestamp","TotalSpacePledged","TransactionFees","TransactionFees","TransactionPayment","TransactionPayment","TransactionPaymentConfig","Transporter","Transporter","Transporter","Transporter","TransporterEndpointId","TreasuryAccount","UncheckedExtrinsic","Utility","Utility","Utility","Utility","VERSION","Version","Vesting","Vesting","Vesting","Vesting","VestingConfig","Void","WASM_BINARY","WASM_BINARY_BLOATY","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_config","_config","account_nonce","add_filter","additional_signed","additional_signed","allow_authoring_by","api","api_version","apply_extrinsic","as_system_ref","assimilate_storage","balances","balances","balances","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block","block_hash","block_messages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_config","bundle_producer_election_params","caller","chain_constants","check_inherents","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","confirmation_depth_k","confirmed_domain_block_storage_key","confirmed_domain_block_storage_key","consensus_chain_byte_fee","construct_runtime_api","crate_version","create_default_config","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","digest","dispatch","dispatch_bypass_filter","domain_best_number","domain_block_limit","domain_bundle_limit","domain_chains_allowlist_update","domain_instance_data","domain_instantiation_id","domain_operators","domain_runtime_code","domain_tx_range","domains","domains","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_balance_transfers","enable_domains","enable_dynamic_cost_of_storage","enable_non_root_calls","enable_rewards_at","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_in_transaction","execution_receipt","extract_block_object_mapping","extract_bundle","extract_fraud_proofs","extract_proof","extract_receipts","extract_segment_headers","extract_successful_bundles","extrinsics","extrinsics_root","extrinsics_shuffling_seed","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","function","future_slot","generate","generate_proof","generate_session_keys","genesis_domains","genesis_state_root","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_endpoint_handler","get_module_names","get_raw","has_api","has_api_with","head_receipt_number","header","history_size","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response_message_unsigned","inbox_response_storage_key","inbox_responses_storage_key","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_bad_er_pending_to_prune","is_clear","is_clear","is_clear","is_feeless","is_in_block_list","is_inherent","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_valid","is_xdm_valid","iter","key","key_ids","latest_confirmed_domain_block","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_pieces_in_sector","messenger_channel","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","mmr_leaf_count","mmr_root","module_name","multiplier","name","name_hash","non_empty_er_exists","none","none","number","offchain_worker","oldest_unconfirmed_receipt_number","on_runtime_upgrade","on_xdm_rewards","operator","operator_id_by_signing_key","outbox_message_unsigned","outbox_storage_key","outbox_storage_key","parent_hash","partial_cmp","permissioned_action_allowed_by","phantom","pot_parameters","pot_slot_iterations","pre_dispatch","pre_dispatch","pre_dispatch","proof_recorder","proposer_subsidy_points","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","receipt_hash","record_proof","register_extension","remaining_issuance","reset_filter","rewards","rewards","root","root","root_plot_public_key","run","runtime_configs","runtime_configs","runtime_id","segment_commitment","serialize","serialize","serialize","serialize","serialize","set_call_context","set_caller_from","should_adjust_solution_range","should_relay_inbox_message_response","should_relay_outbox_message","signature","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_produced_after","solution_ranges","staking_staked","state_root","storage_fund_account_balance","storage_fund_withdrawal","submit_bundle_unsigned","submit_fraud_proof_unsigned","submit_report_equivocation_extrinsic","submit_vote_extrinsic","subsidy","subspace","subspace","sudo","sudo","system","system","system","task_index","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_payment","transaction_payment","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate","validate","validate_transaction","validate_unsigned","validate_unsigned","validated_object_call_hashes","verify_proof","verify_proof_and_extract_consensus_state_root","verify_proof_stateless","version","vesting","vesting","vesting","voter_subsidy_points","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","dispatch"],"q":[[0,"subspace_runtime"],[2737,"subspace_runtime::api"],[2738,"dyn_clone::sealed"],[2739,"subspace_runtime_primitives"],[2740,"subspace_runtime_primitives"],[2741,"sp_runtime::transaction_validity"],[2742,"core::result"],[2743,"core::option"],[2744,"sp_api"],[2745,"sp_runtime::traits"],[2746,"sp_api"],[2747,"frame_support::dispatch"],[2748,"sp_storage"],[2749,"alloc::string"],[2750,"alloc::vec"],[2751,"subspace_core_primitives"],[2752,"subspace_runtime_primitives"],[2753,"sp_genesis_builder"],[2754,"sp_domains"],[2755,"subspace_runtime_primitives"],[2756,"sp_consensus_subspace"],[2757,"sp_inherents"],[2758,"sp_inherents"],[2759,"core::cmp"],[2760,"sp_api"],[2761,"parity_scale_codec::error"],[2762,"parity_scale_codec::codec"],[2763,"parity_scale_codec::codec"],[2764,"core::default"],[2765,"serde::de"],[2766,"serde::de"],[2767,"sp_domains"],[2768,"subspace_core_primitives"],[2769,"core::cmp"],[2770,"sp_domains"],[2771,"sp_domains"],[2772,"sp_trie::storage_proof"],[2773,"subspace_core_primitives"],[2774,"core::fmt"],[2775,"frame_support::dispatch"],[2776,"frame_system::pallet"],[2777,"pallet_domains::pallet"],[2778,"pallet_sudo::pallet"],[2779,"pallet_subspace::pallet"],[2780,"pallet_balances::pallet"],[2781,"pallet_messenger::pallet"],[2782,"orml_vesting::module"],[2783,"pallet_messenger::pallet"],[2784,"pallet_transaction_fees::pallet"],[2785,"orml_vesting::module"],[2786,"pallet_balances::pallet"],[2787,"frame_system::pallet"],[2788,"sp_mmr_primitives"],[2789,"sp_mmr_primitives"],[2790,"sp_version"],[2791,"core::convert"],[2792,"frame_system::limits"],[2793,"frame_system::limits"],[2794,"sp_domains"],[2795,"sp_weights::weight_v2"],[2796,"frame_support"],[2797,"frame_support::traits::metadata"],[2798,"sp_messenger::messages"],[2799,"sp_consensus_subspace"],[2800,"sp_core"],[2801,"sp_mmr_primitives"],[2802,"pallet_transaction_payment::types"],[2803,"sp_domains"],[2804,"serde::ser"],[2805,"core::convert"],[2806,"scale_info::ty"],[2807,"sp_runtime::transaction_validity"]],"d":["The address format for describing accounts.","Its a 20 byte representation.","It’s a 32 byte representation.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","Anyone can author new blocks at genesis.","","","","","","","Block type as expected by this runtime.","","","","","","","","","","Controls non-root access to feeds and object store","","","Disable specific pallets.","","Runtime upgrade is delayed for 1 day at 6 sec block time.","","","","","","","","","","When to enable block/vote rewards","","Executive: handles dispatch to the various modules.","","","Author of the first block will be able to author blocks …","","Block header type as expected by this runtime.","At specified height or next block if <code>None</code>","","It’s an account ID (pubkey).","It’s an account index.","","","Since Subspace is probabilistic this is the average …","Manually with an explicit extrinsic","","Use the consensus chain’s <code>Normal</code> extrinsics block size …","Use the consensus chain’s <code>Normal</code> extrinsics block weight …","","","","","","","","","","","","Minimum nominator stake to nominate and operator.","Minimum operator stake to become an operator.","","","","","","","","","Provides an implementation of <code>PalletInfo</code> to provide …","","","","","It’s some arbitrary raw bytes.","","","","","","","","Specified root farmer is allowed to author blocks unless …","","","Implements all runtime apis for the client side.","","","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","An aggregation of all <code>Task</code> enums across all pallets …","","","","","The SignedExtension to the basic transaction logic.","","When solution range is below specified threshold","","","","","","","","We allow for 3.75 MiB for <code>Normal</code> extrinsic with 5 MiB …","We allow for 2 seconds of compute with a 6 second average …","","","","","","","","","","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Who can author blocks at genesis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirmation depth k to use in the archiving process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …chain-specific digest of data useful for light clients …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to enable balance transfers","Whether to enable domains","Whether to enable dynamic cost of storage (if <code>false</code> cost …","Whether to enable calls from non-root account","When rewards should be enabled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert to runtime origin with caller being system signed …","Convert to runtime origin, using as filter: …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","The function that should be called.","","Generate a set of keys with optionally using the given …","","","","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","","","","","","","The block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>AccountId</code> of the sudo key.","","","","","","","","","","","","","","","","","","","","","","","","","","Create with system none origin and …","The block number.","","","","","","","","","","The parent hash.","","","","","Number of iterations for proof of time per slot","","","","","Block proposer subsidy parameters","","","","","","","","Tokens left to issue to farmers at any given time","","","","Create with system root origin and …","","","","","","","","","","","","","","","","","","The signature, address, number of extrinsics have come …","Create with system signed origin and …","","","","","","","","","","","","","","","","The state trie merkle root","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Voter subsidy parameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,191,191,0,0,0,58,0,0,49,59,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,49,59,50,0,0,0,0,0,0,0,0,58,0,0,43,0,191,191,0,0,0,43,0,0,0,0,0,0,0,0,0,42,49,59,50,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,191,0,0,0,0,49,50,0,58,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,0,0,0,0,49,59,50,0,0,0,0,0,49,59,50,0,0,49,59,50,0,0,49,0,0,50,0,50,0,0,49,59,50,0,0,0,0,49,59,50,0,0,0,49,59,50,0,20,0,0,39,9,12,41,42,43,5,44,45,46,47,48,49,20,50,51,192,193,51,5,9,12,194,0,13,51,20,22,195,196,22,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,197,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,22,51,51,5,51,51,39,9,12,39,9,12,41,42,43,5,44,45,46,47,48,49,20,50,51,39,9,12,41,42,43,5,44,45,46,47,48,49,20,50,51,42,42,254,201,51,51,253,252,51,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,41,51,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,9,12,58,22,42,42,42,42,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,39,41,43,58,22,255,49,49,51,51,51,51,51,42,51,51,51,196,22,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,254,254,254,254,194,39,9,12,41,42,43,58,49,20,59,50,51,39,9,12,41,42,43,44,45,46,47,48,49,20,50,51,39,39,39,39,39,9,9,9,9,9,12,12,12,12,12,41,41,41,41,41,42,42,42,42,42,43,43,43,43,43,44,44,44,44,44,45,45,45,45,45,46,46,46,46,46,47,47,47,47,47,48,48,48,48,48,49,49,49,49,49,20,20,20,20,20,50,50,50,50,50,51,51,51,51,51,51,13,51,51,51,51,13,51,51,51,36,255,51,5,51,39,9,12,41,42,43,58,5,44,45,46,47,48,49,20,59,50,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,5,5,5,253,13,44,45,46,47,22,48,49,49,49,49,49,49,49,49,49,49,49,49,49,20,20,59,59,59,59,59,59,59,59,59,59,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,59,39,39,198,198,199,199,200,200,201,201,202,202,197,197,203,203,9,9,12,12,41,41,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,42,42,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,43,43,58,58,252,252,5,5,253,253,13,13,44,44,45,45,46,46,47,47,22,22,48,48,49,49,20,20,59,59,50,50,51,51,39,39,198,198,199,199,200,200,201,201,202,202,197,197,203,203,9,9,12,12,41,41,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,42,42,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,43,43,58,58,252,252,5,5,253,253,13,13,44,44,45,45,46,46,47,47,22,22,48,48,49,49,20,20,59,59,50,50,51,51,256,202,41,51,51,257,51,198,204,204,204,205,205,205,206,206,206,207,207,207,208,208,208,209,209,209,210,210,210,211,211,211,212,212,212,213,213,213,214,214,214,215,215,215,216,216,216,217,217,217,218,218,218,219,219,219,220,220,220,221,221,221,222,222,222,223,223,223,224,224,224,225,225,225,226,226,226,227,227,227,228,228,228,229,229,229,230,230,230,231,231,231,232,232,232,233,233,233,234,234,234,235,235,235,236,236,236,237,237,237,238,238,238,239,239,239,240,240,240,241,241,241,242,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,250,250,250,251,251,251,49,49,49,51,49,41,13,13,51,36,51,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,51,51,201,252,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,5,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,41,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,13,20,51,39,9,12,49,51,51,49,49,49,49,49,49,49,49,49,49,49,49,48,51,48,258,41,51,39,42,44,45,46,47,20,51,42,51,51,51,51,51,51,51,51,252,193,252,252,51,5,5,255,51,51,203,199,51,51,51,201,51,255,42,257,194,51,194,9,12,51,13,259,51,51,51,51,51,13,13,259,5,196,22,5,5,51,48,196,22,51,51,39,41,43,58,22,13,5,51,51,51,256,5,5,39,9,12,41,42,43,58,49,20,59,50,202,51,42,255,51,42,51,51,51,51,39,196,22,196,22,196,22,20,48,51,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,9,12,41,42,43,5,44,45,46,47,48,49,20,50,51,196,22,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,59,59,59,59,59,59,59,59,59,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,5,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,39,9,12,41,42,43,58,44,45,46,47,48,49,20,59,50,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,39,9,12,41,42,43,44,45,46,47,48,49,20,50,9,12,51,12,51,51,51,200,51,51,260,196,22,259,39,198,199,200,201,202,197,203,9,12,41,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,43,58,252,5,253,13,44,45,46,47,22,48,49,20,59,50,51,48,0],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}000000000000000``{fh}{{je}d{}{{A`{c}{{l{n}}}}}}{Ab{{Af{cAd}}}{}}{Ah{{Af{cAd}}}{}}``{{{Aj{ce}}}{{Af{{An{Al}}B`}}}Bb{{Bd{c}}}}{{}Bf}{Bh{{An{Bj}}}}{{BlBn}{{Af{dC`}}}}```{c{{Cd{Cb}}}{}}000000000000000{c{{Cf{Cb}}}{}}0000000000000001111111111111111`{ChCj}{{}Cl}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Bld}{{{Cf{Cb}}}Cn}{D`{{An{{Dd{Db}}}}}}{jc{}}{{}Df}{{DhDj}Dl}{{}c{}}00{{{Dn{ce}}}{{Dn{ce}}}E`E`}{AbAb}{AhAh}{EbEb}{EdEd}{{{Ef{c}}}{{Ef{c}}}E`}{jj}{EhEh}{EjEj}{ElEl}{EnEn}{F`F`}{FbFb}{BhBh}{FdFd}{FfFf}{{ce}d{}{}}000000000000000{{EdEd}Fh}{{ce}Fh{}{}}`{D`{{An{{Cf{Cb}}}}}}{D`{{Cf{Cb}}}}{{}Db}{e{{Fj{g}}}Bb{{Bd{c}}}{}}{{}{{An{Fl}}}}{{}{{Cf{Cb}}}}{c{{Af{{Dn{eg}}Fn}}}G`GbGb}{c{{Af{AbFn}}}G`}{c{{Af{AhFn}}}G`}{c{{Af{EbFn}}}G`}{c{{Af{EdFn}}}G`}{c{{Af{{Ef{e}}Fn}}}G`{}}{c{{Af{GdFn}}}G`}{c{{Af{EhFn}}}G`}{c{{Af{EjFn}}}G`}{c{{Af{ElFn}}}G`}{c{{Af{EnFn}}}G`}{c{{Af{F`Fn}}}G`}{c{{Af{FbFn}}}G`}{c{{Af{BhFn}}}G`}{c{{Af{GfFn}}}G`}{c{{Af{FdFn}}}G`}{{{Gh{Cb}}}{{Af{cFn}}}{}}000000000000000{{Al{Gh{Cb}}}{{Af{cFn}}}{}}000000000000000{{{Gh{Cb}}}{{An{{Cf{{Gl{{Cf{Cb}}Gj}}}}}}}}{{{Cf{Cb}}}{{An{{Cf{{Gl{{Cf{Cb}}Gj}}}}}}}}{{Alc}{{Af{eFn}}}G`{}}000000000000000{{}{{Dn{ce}}}GnGn}{{}Ab}{{}Ah}{{}Gd}{{}Bl}{{ce}e{}{}}000{H`c{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{c{{Af{{Dn{eg}}}}}HbHdHd}{c{{Af{Eb}}}Hb}{c{{Af{{Ef{e}}}}}HbHd}{c{{Af{Gd}}}Hb}{c{{Af{Bl}}}Hb}`{{Fbj}Hf}0{D`{{An{Hh}}}}{D`{{An{Hj}}}}{D`{{An{Hl}}}}{D`{{An{Hn}}}}{D`{{An{{Gl{I`{Ib{Dh}}}}}}}}{D`Ed}{D`{{An{{Gl{{If{IdDb}}{Cf{Id}}}}}}}}{D`{{An{{Cf{Cb}}}}}}{D`Ih}``{H`d}0000000000000000000000000000000000000000000000000000000000000000000000000000`````{{{Dn{ce}}g}dIjIj{IlIn}}{{Abc}d{IlIn}}{{Ahc}d{IlIn}}{{Ebc}d{IlIn}}{{Edc}d{IlIn}}{{{Ef{c}}e}d{}{IlIn}}{{Gdc}d{IlIn}}{{Fbc}d{IlIn}}{{Bhc}d{IlIn}}{{Gfc}d{IlIn}}{{Fdc}d{IlIn}}{{}{{Af{dAl}}}}{{{Dn{ce}}{Dn{ce}}}nJ`J`}{{AbAb}n}{{AhAh}n}{{EbEb}n}{{EdEd}n}{{{Ef{c}}{Ef{c}}}nJ`}{{EhEh}n}{{EjEj}n}{{ElEl}n}{{EnEn}n}{{F`F`}n}{{FbFb}n}{{BhBh}n}{{FdFd}n}{{FfFf}n}{{ce}n{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000{Dhd}{{{Aj{ce}}i}gBb{{Bd{c}}}{}{{Jd{{Aj{ce}}}{{l{{Jb{g}}}}}}}}{Jf{{An{{Jj{JhDhDb}}}}}}{{Dh{Cf{Cj}}}Jl}{{}{{An{{Jn{{Ib{Dh}}JhDb}}}}}}{{D`Cf}{{Cf{{K`{{Ib{Dh}}Jh}}}}}}{{{Aj{ce}}}{{An{Kb}}}Bb{{Bd{c}}}}{{D`Cf}{{Cf{{Jj{JhDhDb}}}}}}{{}{{An{{Cf{Kd}}}}}}{{D`Cf}{{Kf{DhJhDb}}}}``{{}Kh}{{jc}n{}}{{}}{{{Dn{ce}}Kj}{{Af{dKl}}}KnKn}{{AbKj}L`}{{AhKj}L`}{{EbKj}L`}{{EdKj}L`}{{{Ef{c}}Kj}{{Af{dKl}}}Kn}{{GdKj}{{Af{dKl}}}}{{jKj}{{Af{dKl}}}}{{EhKj}L`}{{EjKj}L`}{{ElKj}L`}{{EnKj}L`}{{F`Kj}L`}{{FbKj}L`}{{BhKj}L`}{{GfKj}L`}{{FdKj}L`}{{FfKj}L`}{cc{}}00000000000000000000000000000000000000000000000000000000000000{Bhj}{Anj}{{{Lb{Ff}}}j}333333333{{{Lf{LdFf}}}Fb}{{{Lf{LhFf}}}Fb}{{{Lf{LjFf}}}Fb}{{{Lf{LlFf}}}Fb}{{{Lf{LnFf}}}Fb}{{{Lf{M`Ff}}}Fb}{{{Lf{MbFf}}}Fb}{{{Lf{MdFf}}}Fb};{{{Lf{MfFf}}}Fb}{{{Lf{MhFf}}}Fb}{{{Lf{MjFf}}}Fb}{{{Lf{MlFf}}}Fb}?{{{Lb{Ff}}}Bh}{{{Mn{Ff}}}Gf}{{{N`{Ff}}}Gf}{{{Nb{Ff}}}Gf}{{{Nd{Ff}}}Gf}{{{Nf{Ff}}}Gf}{{{Nh{Ff}}}Gf}{{{Nj{Ff}}}Gf}{{{Nl{Ff}}}Gf}{cc{}}{{{Nn{Ff}}}Gf}{{{O`{Ff}}}Fd}{ObFd}{{{Od{Ff}}}Fd}{{{Of{Ff}}}Fd}{{{Oh{Ff}}}Fd}{{{Oj{Ff}}}Fd}{{{Ol{Ff}}}Fd}{{{On{Ff}}}Fd}{{{A`{Ff}}}Fd}{AbFd}{{{Ad{Ff}}}Fd}{{{Af{Ff}}}Fd}{{{Ah{Ff}}}Fd}>>{Aj{{An{Gf}}}}?{ce{}{}}0{cc{}}1010101001011001100101100110011001101001010110100101101010101010101001101001101010101010100101011010100101010101010110011010100101010110010101100110011010010110011001101001010101010101010101100101010101011010010101101010100101010110101010101010011010011010011010011010010110101010011010100110010110101001`{Ch{{An{Al}}}}{{{An{{Cf{Cb}}}}}{{Cf{Cb}}}}{{{Cf{Ch}}{An{Ch}}}{{Af{{Gl{{Cf{An}}AA`}}AAb}}}}1`{D`{{An{AAd}}}}{{}Ch}{{}c{{AAh{AAf}}}}{{}AAf}0{{}c{{AAh{Ch}}}}33{{}AAj}{{}c{{AAh{AAj}}}}1{{}AAl}0{{}c{{AAh{AAl}}}}{{}AAn}{{}c{{AAh{AAn}}}}1996{{}Cb}{{}c{{AAh{Cb}}}}1323{{}c{{AAh{Al}}}}{{}Al}0{{}c{{AAh{{Gl{AB`AB`}}}}}}{{}{{Gl{AB`AB`}}}}0322{{}ABb}{{}c{{AAh{ABb}}}}1{{}{{Gl{ABbABb}}}}0{{}c{{AAh{{Gl{ABbABb}}}}}}332{{}n}0{{}c{{AAh{n}}}}889{{}c{{AAh{Db}}}}{{}Db}0010{{}c{{AAh{ABd}}}}{{}ABd}0100455{{}ABf}0{{}c{{AAh{ABf}}}}445{{}ABh}{{}c{{AAh{ABh}}}}1{{}c{{AAh{Ch}}}}{{}Ch}0{{}AB`}{{}c{{AAh{AB`}}}}1101232;:::;:{{}Al}0{{}c{{AAh{Al}}}}{{}ABj}{{}c{{AAh{ABj}}}}1233?>>233233{{}Hh}0{{}c{{AAh{Hh}}}}110{{}c{{AAh{f}}}}{{}f}0776677{{}ABl}{{}c{{AAh{ABl}}}}1899{{}Db}0{{}c{{AAh{Db}}}};:;>>?{{}c{{AAh{{Gl{AlAl}}}}}}{{}{{Gl{AlAl}}}}0233{FbABn}{AC`{{Gh{AC`}}}}{FbACb}{ACd{{An{{ACh{ACf}}}}}}{{}{{Gh{AC`}}}}{{EbGj}{{Gh{Cb}}}}{{{Aj{ce}}}{{Af{nB`}}}Bb{{Bd{c}}}}{{{Aj{ce}}g}{{Af{nB`}}}Bb{{Bd{c}}}{{A`{Al}{{l{n}}}}}}{D`Hh}`{{}ABb}{c{{Cf{Cb}}}{}}000000000000000{ACjAn}{ACl{{Cf{Cb}}}}{{ABfACl}{{An{{Cf{Cb}}}}}}{{}{{An{H`}}}}{DjCf}{{}H`}0000000000000000000000000000000000000000000000000000000000000000000000000000{{}d}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000{jc{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{Eb{{Cf{{Gl{{Cf{Cb}}Gj}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222{{{Aj{ce}}g}{{Af{{ACn{c}}C`}}}Bb{{Bd{c}}}{{ADb{{AD`{c}}}}}}{Bh{{An{Bj}}}}{{D`Jf}n}{cn{}}00{{Fbc}n{}}{ADdn}{{}n}{Fb{{An{{Lf{MfFf}}}}}}{Fb{{An{{Lf{LlFf}}}}}}{Fb{{An{{Lf{MbFf}}}}}}{Fb{{An{{Lf{LjFf}}}}}}{Fb{{An{{Lf{LdFf}}}}}}{Fb{{An{{Lf{MlFf}}}}}}{Fb{{An{{Lf{MdFf}}}}}}{Fb{{An{{Lf{LnFf}}}}}}{Fb{{An{{Lf{M`Ff}}}}}}{Fb{{An{{Lf{MhFf}}}}}}{Fb{{An{{Lf{LhFf}}}}}}{Fb{{An{{Lf{MjFf}}}}}}{F`n}{{{Cf{Cb}}}{{An{n}}}}{{}c{}}`{{}{{Gh{Gj}}}}{D`{{An{{Gl{HhJf}}}}}}{{}H`}000000{{}ADf}{{ABfADh}Ed}{{}ADj}{{}ADl}{Al{{An{ADl}}}}0{{}{{Cf{Al}}}}0{{}{{Af{ADnAAb}}}}{{}{{Af{AAb}}}}{{}{{An{AC`}}}}`0{{}{{An{{Cd{Cb}}}}}}{D`n}{{}j}0`{{}d}{D`{{An{Hh}}}}{{}ABj}{Dbd}{Id{{An{{Gl{AE`Db}}}}}}{AE`{{An{Id}}}}{ACjAn}{{ABfACl}{{An{{Cf{Cb}}}}}}{ACl{{Cf{Cb}}}}`{{EdEd}{{An{Fh}}}}``{{}AEb}`{{Abce{AEd{e}}H`}{{Af{gAd}}}{}{}{}}{{Ahce{AEd{e}}H`}{{Af{gAd}}}{}{}{}}{c{{Af{dAd}}}{}}{{{Aj{ce}}}{{An{{AEf{c}}}}}Bb{{Bd{c}}}}`{Al{{AEh{Db}}}}{Al{{AEj{Db}}}}{AlDb}{ABjDb}{{D`Hh}{{An{Jf}}}}{{{Aj{ce}}}dBb{{Bd{c}}}}{{{Aj{ce}}g}dBb{{Bd{c}}}AEl}`{jd}``{{}j}0{{}{{An{ADd}}}}{F`{{Af{dAj}}}}``{D`{{An{AEn}}}}{AF`{{An{AFb}}}}{{{Dn{ce}}g}AfAFdAFdAFf}{{Ebc}AfAFf}{{{Ef{c}}e}AfAFdAFf}{{Gdc}AfAFf}{{Blc}AfAFf}{{{Aj{ce}}AFh}dBb{{Bd{c}}}}{{jc}d{{AFj{j}}}}{{}n}{{ABfAFl}n}0`={cj{}}{{{Dn{ce}}}H`IjIj}{AbH`}{AhH`}{EbH`}{EdH`}{{{Ef{c}}}H`{}}{GdH`}{FbH`}{BhH`}{GfH`}{FdH`}{Al{{An{Ch}}}}{{}AFn}{IdEd}`{IdDb}1{{{Jn{{Ib{Dh}}JhDb}}}d}{{{K`{{Ib{Dh}}Jh}}}d}{AG`{{An{d}}}}{{{AGb{{Ib{Dh}}ADd}}}d}````````{F`Al}{{}AGd}{{c{Gh{Cb}}}{{Cf{Cb}}}{}}000000000000000{ce{}{}}000000000000000``{c{{Af{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Gf{{Af{{N`{Ff}}c}}}{}}{Gf{{Af{{Nj{Ff}}c}}}{}}{Gf{{Af{{Nh{Ff}}c}}}{}}{Gf{{Af{{Nf{Ff}}c}}}{}}4{Gf{{Af{{Nn{Ff}}c}}}{}}{Gf{{Af{{Nl{Ff}}c}}}{}}{Gf{{Af{{Nb{Ff}}c}}}{}}{Gf{{Af{{Mn{Ff}}c}}}{}}{Gf{{Af{{Nd{Ff}}c}}}{}}{Fd{{Af{{Od{Ff}}c}}}{}}{Fd{{Af{{Of{Ff}}c}}}{}}{Fd{{Af{Obc}}}{}}<{Fd{{Af{{Af{Ff}}c}}}{}}{Fd{{Af{{Ol{Ff}}c}}}{}}{Fd{{Af{{Ad{Ff}}c}}}{}}{Fd{{Af{{Oh{Ff}}c}}}{}}{Fd{{Af{{Ah{Ff}}c}}}{}}{Fd{{Af{Abc}}}{}}{Fd{{Af{{On{Ff}}c}}}{}}{Fd{{Af{{A`{Ff}}c}}}{}}{Fd{{Af{{Oj{Ff}}c}}}{}}{Fd{{Af{{O`{Ff}}c}}}{}}{c{{Af{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000{{jg}{{Af{ej}}}{}{}{{Jd{c}{{l{{Af{ec}}}}}}}}{c{{Cd{Cb}}}{}}0000000000000000000000000000000{c{{Cf{Cb}}}{}}000000000000000{cAGf{}}0000000000000000000000000000000000000000000000000000000000000000000000000000{{}AGh}0000000000000000{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{cgn}e{}{}{{Jd{{Gh{Cb}}}{{l{e}}}}}}0000000000000{{Abce{AEd{e}}H`}AGj{}{}}{{Ahce{AEd{e}}H`}AGj{}{}}{AGlAGj}{{c{AEd{c}}H`}AGj{}}{{AGlc}AGj{}}{{}{{Cf{Cj}}}}{{{Cf{An}}AA`}{{Af{dAAb}}}}{{AnAA`}{{An{Cj}}}}1{{}AAf}````:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::{F`ABj}{{AC`{Gh{Cb}}}{{An{{Cf{Cb}}}}}}","c":[44],"p":[[5,"Private",2738],[1,"unit"],[8,"AccountId",2739],[8,"Nonce",2739],[5,"RuntimeOrigin",0],[17,"Output"],[1,"bool"],[10,"Fn",2740],[5,"CheckStorageAccess",0],[6,"TransactionValidityError",2741],[6,"Result",2742],[5,"DisablePallets",0],[5,"RuntimeApiImpl",0],[1,"u32"],[6,"Option",2743],[6,"ApiError",2744],[10,"Block",2745],[10,"CallApiAt",2744],[8,"ApplyExtrinsicResult",2746],[6,"OriginCaller",0],[6,"RawOrigin",2747],[5,"RuntimeGenesisConfig",0],[5,"Storage",2748],[5,"String",2749],[1,"u8"],[1,"array"],[5,"Vec",2750],[8,"BlockNumber",2751],[8,"Hash",2739],[5,"BlockMessagesWithStorageKey",2752],[8,"Result",2753],[5,"DomainId",2754],[8,"Balance",2739],[5,"BundleProducerElectionParams",2755],[6,"ChainConstants",2756],[8,"Block",0],[5,"InherentData",2757],[5,"CheckInherentsResult",2757],[5,"RewardPoint",0],[10,"Clone",2758],[5,"SessionKeys",0],[6,"HoldIdentifier",0],[6,"EnableRewardsAt",0],[6,"RuntimeSlashReason",0],[6,"RuntimeLockId",0],[6,"RuntimeHoldReason",0],[6,"RuntimeFreezeReason",0],[6,"RuntimeTask",0],[6,"RuntimeCall",0],[6,"RuntimeEvent",0],[5,"Runtime",0],[6,"Ordering",2759],[5,"ApiRef",2744],[5,"CrateVersion",2760],[5,"Error",2761],[10,"Input",2762],[10,"Decode",2762],[6,"AllowAuthoringBy",0],[6,"RuntimeError",0],[1,"slice"],[5,"KeyTypeId",2763],[1,"tuple"],[10,"Default",2764],[1,"usize"],[10,"Deserializer",2765],[10,"Deserialize",2765],[8,"DispatchResultWithPostInfo",2747],[8,"BlockNumber",2766],[5,"DomainBlockLimit",2754],[5,"DomainBundleLimit",2754],[5,"DomainAllowlistUpdates",2754],[5,"DomainInstanceData",2754],[8,"NumberFor",2745],[8,"OperatorId",2754],[5,"BTreeMap",2767],[5,"U256",2751],[10,"Encode",2762],[10,"Output",2762],[10,"Sized",2768],[10,"PartialEq",2759],[6,"TransactionOutcome",2746],[10,"FnOnce",2740],[8,"Hash",2766],[8,"Header",2769],[8,"ExecutionReceiptFor",2754],[5,"BlockObjectMapping",2770],[8,"OpaqueBundle",2754],[6,"FraudProof",2771],[5,"StorageProof",2772],[6,"SegmentHeader",2751],[8,"OpaqueBundles",2754],[5,"Randomness",2751],[5,"Formatter",2773],[5,"Error",2773],[10,"Debug",2773],[8,"Result",2773],[8,"Origin",2774],[8,"Utility",0],[8,"CallableCallFor",2747],[8,"Timestamp",0],[8,"RuntimeConfigs",0],[8,"Sudo",0],[8,"Transporter",0],[8,"Subspace",0],[8,"Messenger",0],[8,"Vesting",0],[8,"Balances",0],[8,"Rewards",0],[8,"System",0],[8,"Domains",0],[6,"Error",2775],[6,"Error",2774],[6,"Error",2776],[6,"Error",2777],[6,"Error",2778],[6,"Error",2779],[6,"Error",2780],[6,"Error",2781],[6,"Error",2782],[6,"Event",2781],[6,"Event",2775],[6,"Event",2777],[6,"Event",2783],[6,"Event",2784],[6,"Event",2782],[6,"Event",2785],[6,"Event",2780],[6,"Event",2779],[6,"Event",2786],[6,"Event",2774],[6,"Event",2778],[6,"Event",2776],[6,"DispatchError",2746],[5,"Slot",2787],[5,"EncodableOpaqueLeaf",2788],[5,"Proof",2788],[6,"Error",2788],[5,"H256",2789],[5,"RuntimeVersion",2790],[10,"From",2791],[5,"BlockWeights",2792],[5,"BlockLength",2792],[8,"SlotNumber",2751],[1,"u64"],[5,"HistorySize",2793],[1,"u128"],[6,"ChainId",2754],[8,"EndpointId",2794],[5,"Weight",2795],[5,"PalletId",2796],[5,"CallMetadata",2760],[1,"str"],[5,"DispatchInfo",2747],[6,"Endpoint",2794],[10,"EndpointHandler",2794],[5,"Box",2797],[5,"CrossDomainMessage",2752],[8,"MessageKey",2752],[8,"StorageChanges",2744],[8,"HashingFor",2745],[10,"Backend",2798],[8,"FarmerPublicKey",2756],[1,"u16"],[8,"ChannelId",2754],[5,"RuntimeMetadataPrefixed",2799],[5,"OpaqueMetadata",2800],[8,"LeafIndex",2788],[8,"OperatorPublicKey",2754],[6,"PotParameters",2756],[8,"DispatchInfoOf",2745],[8,"ProofRecorder",2744],[5,"FeeDetails",2801],[5,"RuntimeDispatchInfo",2801],[10,"Extension",2802],[8,"RuntimeId",2754],[5,"SegmentIndex",2793],[5,"SegmentCommitment",2793],[10,"Serialize",2803],[10,"Serializer",2803],[6,"CallContext",2804],[10,"Into",2791],[8,"MessageId",2752],[5,"SolutionRanges",2756],[8,"EquivocationProof",2756],[5,"SignedVote",2756],[8,"Moment",2739],[5,"TypeId",2805],[5,"Type",2806],[8,"TransactionValidity",2741],[6,"TransactionSource",2741],[8,"Address",0],[8,"SystemConfig",0],[8,"TransactionPaymentConfig",0],[8,"SubspaceConfig",0],[8,"BalancesConfig",0],[8,"GenesisConfig",0],[5,"BlockHashProvider",0],[5,"ConfirmationDepthK",0],[5,"OnXDMRewards",0],[5,"MmrProofVerifier",0],[5,"StorageKeys",0],[5,"BlockSlot",0],[5,"InitializeDynamicIssuance",0],[5,"Version",0],[5,"BlockHashCount",0],[5,"SubspaceBlockWeights",0],[5,"SubspaceBlockLength",0],[5,"BlockAuthoringDelay",0],[5,"PotEntropyInjectionInterval",0],[5,"PotEntropyInjectionLookbackDepth",0],[5,"PotEntropyInjectionDelay",0],[5,"EraDuration",0],[5,"SlotProbability",0],[5,"ExpectedVotesPerBlock",0],[5,"RecentSegments",0],[5,"RecentHistoryFraction",0],[5,"MinSectorLifetime",0],[5,"ShouldAdjustSolutionRange",0],[5,"BlockSlotCount",0],[5,"ExistentialDeposit",0],[5,"CreditSupply",0],[5,"TotalSpacePledged",0],[5,"BlockchainHistorySize",0],[5,"DynamicCostOfStorage",0],[5,"SelfChainId",0],[5,"ChannelReserveFee",0],[5,"TransporterEndpointId",0],[5,"MaximumReceiptDrift",0],[5,"InitialDomainTxRange",0],[5,"DomainTxRangeAdjustmentInterval",0],[5,"DomainRuntimeUpgradeDelay",0],[5,"MinOperatorStake",0],[5,"MinNominatorStake",0],[5,"MaxDomainBlockSize",0],[5,"MaxDomainBlockWeight",0],[5,"MaxBundlesPerBlock",0],[5,"DomainInstantiationDeposit",0],[5,"MaxDomainNameLength",0],[5,"BlockTreePruningDepth",0],[5,"StakeWithdrawalLockingPeriod",0],[5,"StakeEpochDuration",0],[5,"TreasuryAccount",0],[5,"MaxPendingStakingOperation",0],[5,"MaxNominators",0],[5,"DomainsPalletId",0],[5,"MaxInitialDomainAccounts",0],[5,"MinInitialDomainAccountBalance",0],[5,"BundleLongevity",0],[5,"AvgBlockspaceUsageNumBlocks",0],[5,"ProposerTaxOnVotes",0],[5,"MinVestedTransfer",0],[5,"PalletInfo",0],[5,"RuntimeApi",0],[8,"RuntimeConfigsConfig",0],[8,"Header",0],[8,"UncheckedExtrinsic",0],[8,"DomainsConfig",0],[8,"SudoConfig",0],[8,"RewardsConfig",0],[8,"VestingConfig",0]],"b":[[979,"impl-From%3COriginCaller%3E-for-RuntimeOrigin"],[980,"impl-From%3COption%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[981,"impl-From%3CRawOrigin%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[991,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[992,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[993,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[994,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[995,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[996,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[997,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[998,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1000,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1001,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1002,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1003,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1006,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1007,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1008,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1009,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1010,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1011,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1012,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1013,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1015,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[1016,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1017,"impl-From%3CEvent%3E-for-RuntimeEvent"],[1018,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1019,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1020,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1021,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1022,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1023,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1024,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1025,"impl-From%3CEvent%3E-for-RuntimeEvent"],[1026,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1027,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1028,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1348,"impl-Get%3C_I%3E-for-Version"],[1349,"impl-TypedGet-for-Version"],[1350,"impl-Version"],[1351,"impl-Get%3C_I%3E-for-BlockHashCount"],[1352,"impl-TypedGet-for-BlockHashCount"],[1353,"impl-BlockHashCount"],[1354,"impl-TypedGet-for-SubspaceBlockWeights"],[1355,"impl-Get%3C_I%3E-for-SubspaceBlockWeights"],[1356,"impl-SubspaceBlockWeights"],[1357,"impl-TypedGet-for-SubspaceBlockLength"],[1358,"impl-SubspaceBlockLength"],[1359,"impl-Get%3C_I%3E-for-SubspaceBlockLength"],[1360,"impl-BlockAuthoringDelay"],[1361,"impl-Get%3C_I%3E-for-BlockAuthoringDelay"],[1362,"impl-TypedGet-for-BlockAuthoringDelay"],[1363,"impl-PotEntropyInjectionInterval"],[1364,"impl-TypedGet-for-PotEntropyInjectionInterval"],[1365,"impl-Get%3C_I%3E-for-PotEntropyInjectionInterval"],[1366,"impl-TypedGet-for-PotEntropyInjectionLookbackDepth"],[1367,"impl-Get%3C_I%3E-for-PotEntropyInjectionLookbackDepth"],[1368,"impl-PotEntropyInjectionLookbackDepth"],[1369,"impl-PotEntropyInjectionDelay"],[1370,"impl-Get%3C_I%3E-for-PotEntropyInjectionDelay"],[1371,"impl-TypedGet-for-PotEntropyInjectionDelay"],[1372,"impl-Get%3C_I%3E-for-EraDuration"],[1373,"impl-EraDuration"],[1374,"impl-TypedGet-for-EraDuration"],[1375,"impl-Get%3C_I%3E-for-SlotProbability"],[1376,"impl-SlotProbability"],[1377,"impl-TypedGet-for-SlotProbability"],[1378,"impl-Get%3C_I%3E-for-ExpectedVotesPerBlock"],[1379,"impl-TypedGet-for-ExpectedVotesPerBlock"],[1380,"impl-ExpectedVotesPerBlock"],[1381,"impl-TypedGet-for-RecentSegments"],[1382,"impl-Get%3C_I%3E-for-RecentSegments"],[1383,"impl-RecentSegments"],[1384,"impl-RecentHistoryFraction"],[1385,"impl-TypedGet-for-RecentHistoryFraction"],[1386,"impl-Get%3C_I%3E-for-RecentHistoryFraction"],[1387,"impl-TypedGet-for-MinSectorLifetime"],[1388,"impl-MinSectorLifetime"],[1389,"impl-Get%3C_I%3E-for-MinSectorLifetime"],[1390,"impl-TypedGet-for-ShouldAdjustSolutionRange"],[1391,"impl-ShouldAdjustSolutionRange"],[1392,"impl-Get%3C_I%3E-for-ShouldAdjustSolutionRange"],[1393,"impl-TypedGet-for-BlockSlotCount"],[1394,"impl-BlockSlotCount"],[1395,"impl-Get%3C_I%3E-for-BlockSlotCount"],[1396,"impl-Get%3C_I%3E-for-ExistentialDeposit"],[1397,"impl-TypedGet-for-ExistentialDeposit"],[1398,"impl-ExistentialDeposit"],[1399,"impl-TypedGet-for-CreditSupply"],[1400,"impl-Get%3C_I%3E-for-CreditSupply"],[1401,"impl-CreditSupply"],[1402,"impl-Get%3C_I%3E-for-TotalSpacePledged"],[1403,"impl-TypedGet-for-TotalSpacePledged"],[1404,"impl-TotalSpacePledged"],[1405,"impl-Get%3C_I%3E-for-BlockchainHistorySize"],[1406,"impl-BlockchainHistorySize"],[1407,"impl-TypedGet-for-BlockchainHistorySize"],[1408,"impl-Get%3C_I%3E-for-DynamicCostOfStorage"],[1409,"impl-DynamicCostOfStorage"],[1410,"impl-TypedGet-for-DynamicCostOfStorage"],[1411,"impl-SelfChainId"],[1412,"impl-TypedGet-for-SelfChainId"],[1413,"impl-Get%3C_I%3E-for-SelfChainId"],[1414,"impl-ChannelReserveFee"],[1415,"impl-TypedGet-for-ChannelReserveFee"],[1416,"impl-Get%3C_I%3E-for-ChannelReserveFee"],[1417,"impl-TransporterEndpointId"],[1418,"impl-Get%3C_I%3E-for-TransporterEndpointId"],[1419,"impl-TypedGet-for-TransporterEndpointId"],[1420,"impl-Get%3C_I%3E-for-MaximumReceiptDrift"],[1421,"impl-TypedGet-for-MaximumReceiptDrift"],[1422,"impl-MaximumReceiptDrift"],[1423,"impl-TypedGet-for-InitialDomainTxRange"],[1424,"impl-Get%3C_I%3E-for-InitialDomainTxRange"],[1425,"impl-InitialDomainTxRange"],[1426,"impl-DomainTxRangeAdjustmentInterval"],[1427,"impl-Get%3C_I%3E-for-DomainTxRangeAdjustmentInterval"],[1428,"impl-TypedGet-for-DomainTxRangeAdjustmentInterval"],[1429,"impl-TypedGet-for-DomainRuntimeUpgradeDelay"],[1430,"impl-Get%3C_I%3E-for-DomainRuntimeUpgradeDelay"],[1431,"impl-DomainRuntimeUpgradeDelay"],[1432,"impl-Get%3C_I%3E-for-MinOperatorStake"],[1433,"impl-MinOperatorStake"],[1434,"impl-TypedGet-for-MinOperatorStake"],[1435,"impl-TypedGet-for-MinNominatorStake"],[1436,"impl-Get%3C_I%3E-for-MinNominatorStake"],[1437,"impl-MinNominatorStake"],[1438,"impl-MaxDomainBlockSize"],[1439,"impl-TypedGet-for-MaxDomainBlockSize"],[1440,"impl-Get%3C_I%3E-for-MaxDomainBlockSize"],[1441,"impl-TypedGet-for-MaxDomainBlockWeight"],[1442,"impl-Get%3C_I%3E-for-MaxDomainBlockWeight"],[1443,"impl-MaxDomainBlockWeight"],[1444,"impl-Get%3C_I%3E-for-MaxBundlesPerBlock"],[1445,"impl-MaxBundlesPerBlock"],[1446,"impl-TypedGet-for-MaxBundlesPerBlock"],[1447,"impl-Get%3C_I%3E-for-DomainInstantiationDeposit"],[1448,"impl-TypedGet-for-DomainInstantiationDeposit"],[1449,"impl-DomainInstantiationDeposit"],[1450,"impl-Get%3C_I%3E-for-MaxDomainNameLength"],[1451,"impl-MaxDomainNameLength"],[1452,"impl-TypedGet-for-MaxDomainNameLength"],[1453,"impl-Get%3C_I%3E-for-BlockTreePruningDepth"],[1454,"impl-TypedGet-for-BlockTreePruningDepth"],[1455,"impl-BlockTreePruningDepth"],[1456,"impl-TypedGet-for-StakeWithdrawalLockingPeriod"],[1457,"impl-StakeWithdrawalLockingPeriod"],[1458,"impl-Get%3C_I%3E-for-StakeWithdrawalLockingPeriod"],[1459,"impl-StakeEpochDuration"],[1460,"impl-TypedGet-for-StakeEpochDuration"],[1461,"impl-Get%3C_I%3E-for-StakeEpochDuration"],[1462,"impl-Get%3C_I%3E-for-TreasuryAccount"],[1463,"impl-TreasuryAccount"],[1464,"impl-TypedGet-for-TreasuryAccount"],[1465,"impl-TypedGet-for-MaxPendingStakingOperation"],[1466,"impl-MaxPendingStakingOperation"],[1467,"impl-Get%3C_I%3E-for-MaxPendingStakingOperation"],[1468,"impl-Get%3C_I%3E-for-MaxNominators"],[1469,"impl-TypedGet-for-MaxNominators"],[1470,"impl-MaxNominators"],[1471,"impl-DomainsPalletId"],[1472,"impl-Get%3C_I%3E-for-DomainsPalletId"],[1473,"impl-TypedGet-for-DomainsPalletId"],[1474,"impl-Get%3C_I%3E-for-MaxInitialDomainAccounts"],[1475,"impl-MaxInitialDomainAccounts"],[1476,"impl-TypedGet-for-MaxInitialDomainAccounts"],[1477,"impl-TypedGet-for-MinInitialDomainAccountBalance"],[1478,"impl-MinInitialDomainAccountBalance"],[1479,"impl-Get%3C_I%3E-for-MinInitialDomainAccountBalance"],[1480,"impl-BundleLongevity"],[1481,"impl-Get%3C_I%3E-for-BundleLongevity"],[1482,"impl-TypedGet-for-BundleLongevity"],[1483,"impl-AvgBlockspaceUsageNumBlocks"],[1484,"impl-TypedGet-for-AvgBlockspaceUsageNumBlocks"],[1485,"impl-Get%3C_I%3E-for-AvgBlockspaceUsageNumBlocks"],[1486,"impl-Get%3C_I%3E-for-ProposerTaxOnVotes"],[1487,"impl-TypedGet-for-ProposerTaxOnVotes"],[1488,"impl-ProposerTaxOnVotes"],[1489,"impl-Get%3C_I%3E-for-MinVestedTransfer"],[1490,"impl-MinVestedTransfer"],[1491,"impl-TypedGet-for-MinVestedTransfer"],[1921,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1922,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1923,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1924,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1925,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1926,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1927,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1928,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1929,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1930,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1931,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1932,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1948,"impl-Runtime"],[1949,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3CMultiAddress%3C%3C%3CMultiSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+()%3E,+RuntimeCall,+MultiSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E,+CheckStorageAccess,+DisablePallets)%3E%3E%3E-for-Runtime"],[1950,"impl-Runtime"],[1951,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3CMultiAddress%3C%3C%3CMultiSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+()%3E,+RuntimeCall,+MultiSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E,+CheckStorageAccess,+DisablePallets)%3E%3E%3E-for-Runtime"],[1952,"impl-Runtime"],[1953,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3CMultiAddress%3C%3C%3CMultiSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+()%3E,+RuntimeCall,+MultiSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E,+CheckStorageAccess,+DisablePallets)%3E%3E%3E-for-Runtime"],[1961,"impl-OriginTrait-for-RuntimeOrigin"],[1962,"impl-RuntimeOrigin"],[1995,"impl-RuntimeOrigin"],[1996,"impl-OriginTrait-for-RuntimeOrigin"],[2014,"impl-RuntimeOrigin"],[2015,"impl-OriginTrait-for-RuntimeOrigin"],[2232,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2233,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2234,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2235,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2237,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2238,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2239,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2240,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2241,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2242,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2243,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2244,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[2246,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2247,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2248,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2249,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2250,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2251,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[2252,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2253,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2254,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2255,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"]]}],\
["subspace_runtime_primitives",{"doc":"Runtime primitives for Subspace Network.","t":"IFIISPPKKISFFIIKSSIIPKFNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMCMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIFNNNNNNNNNNNNNNNNNONNNNNNNOONNNNNNNNONNNNNNNOONNONNNNNNNNNNNNNN","n":["AccountId","AdjustmentVariable","Balance","BlockNumber","DECIMAL_PLACES","Ecdsa","Ed25519","FindBlockRewardAddress","FindVotingRewardAddresses","Hash","MIN_REPLICATION_FACTOR","MaximumMultiplier","MinimumMultiplier","Moment","Nonce","RewardsEnabled","SHANNON","SSC","Signature","SlowAdjustingFeeUpdate","Sr25519","StorageFee","TargetBlockFullness","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","find_block_reward_address","find_voting_reward_addresses","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","get","get","init","init","init","init","into","into","into","into","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","note_storage_fees","opaque","rewards_enabled","transaction_byte_fee","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","Block","Header","UncheckedExtrinsic","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","digest","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","extrinsics","extrinsics_root","fmt","from","from","from_bytes","from_mut","from_mut","from_ref","from_ref","header","identity","init","into","into_key","into_mut","into_ref","is_clear","number","parent_hash","serialize","size_hint","state_root","to_keyed_vec","to_owned","try_from","try_into","try_into_key","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","using_encoded","vzip"],"q":[[0,"subspace_runtime_primitives"],[129,"subspace_runtime_primitives::opaque"],[194,"core::option"],[195,"alloc::vec"],[196,"sp_arithmetic::per_things"],[197,"core::convert"],[198,"pallet_transaction_payment"],[199,"core::result"],[200,"core::any"],[201,"dyn_clone::sealed"],[202,"parity_scale_codec::error"],[203,"parity_scale_codec::codec"],[204,"serde::de"],[205,"parity_scale_codec::codec"],[206,"core::fmt"],[207,"core::fmt"],[208,"parity_scale_codec::codec"],[209,"serde::ser"],[210,"scale_info::ty"],[211,"core::ops::function"]],"d":["Some way of identifying an account on the chain. We …","The adjustment variable of the runtime. Higher values will …","Balance of an account.","Block number in Subspace network.","Subspace Credits have 18 decimal places.","An ECDSA/SECP256k1 signature.","An Ed25519 signature.","A trait for finding the address for a block reward based …","A trait for finding the addresses for voting reward based …","A hash of some data used by the chain.","Minimum desired number of replicas of the blockchain to be …","The maximum amount of the multiplier.","Minimum amount of the multiplier. This value cannot be too …","Type used for expressing timestamp.","Index of a transaction in the chain.","A trait for determining whether rewards are enabled or not","The smallest unit of the token is called Shannon.","One Subspace Credit.","Alias to 512-bit hash when used in the context of a …","Parameterized slow adjusting fee updated based on …","An Sr25519 signature.","","The portion of the <code>NORMAL_DISPATCH_RATIO</code> that we adjust …","","","","","","","","","","","","","","","","","","","","","Find the address for a block rewards based on the …","Find the addresses for voting rewards based on …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Note the charged storage fee.","Opaque types. These are used by the CLI to instantiate …","Determine whether rewards are enabled or not","Return the consensus transaction byte fee.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opaque block type.","Opaque block header type.","Simple blob to hold an extrinsic without committing to its …","","","","","","","","","","","","","","","","","","A chain-specific digest of data useful for light clients …","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","Returns the argument unchanged.","","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","The block header.","","","Calls <code>U::from(self)</code>.","","","","","The block number.","The parent hash.","","","The state trie merkle root","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,36,37,32,33,34,35,32,32,33,33,34,34,35,35,32,32,33,33,34,34,35,35,32,32,32,33,33,33,34,34,34,35,35,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,38,0,39,38,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,40,14,14,14,14,14,14,14,41,40,14,14,14,14,14,14,14,14,41,14,14,14,14,14,14,14,40,40,14,14,40,14,14,14,14,14,14,14,14,14,14,14,14,14,14],"f":"```````````````````````{ce{}{}}0000000{bc{}}0000000{bd}000{{}{{f{c}}}{}}{{}{{h{c}}}{}}{cc{}}0000550505050500550{{}j}{{}c{{l{j}}}}1{{}n}{{}c{{l{n}}}}1101011{{}b}000::::::::::::::::{cd{}}`{{}A`}{{}c{}}{c{{Ab{e}}}{}{}}00000000000{cAd{}}000????????????```{{cAf}d{}}{c{{Aj{Ah}}}{}}{c{{h{Ah}}}{}}1{ce{}{}}06{AlAl}{{ce}d{}{}}{c{{Ab{AlAn}}}B`}{{{Bb{Ah}}}{{Ab{cAn}}}{}}{{Bd{Bb{Ah}}}{{Ab{cAn}}}{}}{{Bdc}{{Ab{eAn}}}B`{}}{{}Al}{bc{}}0{c{{Ab{Al}}}Bf}`{bd}{Al{{h{Ah}}}}{{Alc}d{BhBj}}{{AlAl}A`}{{ce}A`{}{}}00``{{AlBl}{{Ab{dBn}}}}{cc{}}{{{C`{cegi}}}AlCbCbCbCd}{{{Bb{Ah}}}{{Ab{AlAn}}}}{ce{}{}}330`{c{{h{Ah}}}{}}{{}b}2222{cA`{}}``{{Alc}AbCf}{Alb}`{{c{Bb{Ah}}}{{h{Ah}}}{}}6{c{{Ab{e}}}{}{}}00{c{{Aj{Ah}}}{}}07{cAd{}}{{}Ch}::{{Ale}c{}{{Cl{{Bb{Ah}}}{{Cj{c}}}}}};","c":[],"p":[[1,"usize"],[1,"unit"],[6,"Option",194],[5,"Vec",195],[5,"Perquintill",196],[10,"From",197],[8,"Multiplier",198],[1,"bool"],[6,"Result",199],[5,"TypeId",200],[5,"Private",201],[1,"u8"],[1,"array"],[5,"UncheckedExtrinsic",129],[5,"Error",202],[10,"Input",203],[1,"slice"],[1,"u32"],[10,"Deserializer",204],[10,"Output",203],[10,"Sized",205],[5,"Formatter",206],[5,"Error",206],[5,"UncheckedExtrinsic",207],[10,"Encode",203],[10,"SignedExtension",208],[10,"Serializer",209],[5,"Type",210],[17,"Output"],[10,"FnOnce",211],[8,"Signature",0],[5,"TargetBlockFullness",0],[5,"AdjustmentVariable",0],[5,"MinimumMultiplier",0],[5,"MaximumMultiplier",0],[10,"FindBlockRewardAddress",0],[10,"FindVotingRewardAddresses",0],[10,"StorageFee",0],[10,"RewardsEnabled",0],[8,"Header",129],[8,"Block",129]],"b":[[65,"impl-TargetBlockFullness"],[66,"impl-Get%3CI%3E-for-TargetBlockFullness"],[67,"impl-TypedGet-for-TargetBlockFullness"],[68,"impl-AdjustmentVariable"],[69,"impl-Get%3CI%3E-for-AdjustmentVariable"],[70,"impl-TypedGet-for-AdjustmentVariable"],[71,"impl-MinimumMultiplier"],[72,"impl-Get%3CI%3E-for-MinimumMultiplier"],[73,"impl-TypedGet-for-MinimumMultiplier"],[74,"impl-Get%3CI%3E-for-MaximumMultiplier"],[75,"impl-MaximumMultiplier"],[76,"impl-TypedGet-for-MaximumMultiplier"]]}],\
["subspace_service",{"doc":"Service and ServiceFactory implementation. Specialized …","t":"PPPGIIIIPFPFIPPPOOOONNNNNNOCNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOHHOOOOCOOONOCOOOONCONNNNNNNNNNNNNNNNNNNNNNNNOPSSPFGFFFOOOOONNNNNNNNNNOOONNNNNNNNNNNONNNNNOONNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPFGSPNOONNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNFOONNOOHONNNONNNNNNNNNNNNNOOOOOOONNNNNNNNKMFIFIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AddrFormatInvalid","BlockRelay","Consensus","Error","FullBackend","FullClient","FullSelectChain","HostFunctions","Io","NewFull","Other","OtherPartialComponents","RuntimeExecutor","Sub","SubspaceDsn","Telemetry","archived_segment_notification_stream","backend","block_import","block_importing_notification_stream","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","config","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dsn","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","network_service","network_starter","new_full","new_partial","new_slot_notification_stream","pot_slot_info_stream","pot_verifier","reward_signing_notification_stream","rpc","rpc_handlers","segment_headers_store","select_chain","source","subspace_link","sync_from_dsn","sync_service","sync_target_block_number","task_manager","telemetry","to_string","transaction_pool","transaction_pool","try_from","try_from","try_from","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","xdm_gossip_notification_service","Create","RPC_DEFAULT_MAX_REQUEST_SIZE_MB","RPC_DEFAULT_MAX_RESPONSE_SIZE_MB","Reuse","SubspaceConfiguration","SubspaceNetworking","SubstrateConfiguration","SubstrateNetworkConfiguration","SubstrateRpcConfiguration","allow_private_ips","base","base_path","blocks_pruning","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_spec","cors","default_peers_set","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_batch_requests","drop","drop","drop","drop","drop","dsn_piece_getter","farmer","fmt","fmt","fmt","fmt","fmt","force_authoring","force_new_slot_notifications","force_synced","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","impl_name","impl_version","informant_output_format","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_timekeeper","listen_on","listen_on","max_batch_request_len","max_connections","max_subscriptions_per_connection","message_buffer_capacity_per_connection","methods","network","node_key","node_name","prometheus_listen_on","public_addresses","rate_limit","rpc_options","state_pruning","subspace_networking","sync_from_dsn","telemetry_endpoints","timekeeper_cpu_cores","transaction_pool","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","bootstrap_nodes","config","node","CreationError","DsnConfig","DsnConfigurationError","KNOWN_PEERS_CACHE_SIZE","NetworkParameterManagerError","__clone_box","allow_non_global_addresses_in_dht","bootstrap_nodes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","disable_bootstrap_on_start","drop","drop","external_addresses","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_key","into_key","into_mut","into_mut","into_ref","into_ref","keypair","listen_on","max_in_connections","max_out_connections","max_pending_in_connections","max_pending_out_connections","network_path","reserved_peers","source","to_owned","to_string","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","FullDeps","archived_segment_notification_stream","backend","borrow","borrow_mut","chain_spec","client","create_full","deny_unsafe","deref","deref_mut","drop","dsn_bootstrap_nodes","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_key","into_mut","into_ref","kzg","new_slot_notification_stream","pool","reward_signing_notification_stream","segment_headers_store","subscription_executor","sync_oracle","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip","DsnSyncPieceGetter","get_piece","BasicPoolWrapper","BlockExtrinsicOf","FullChainApiWrapper","FullPool","ValidationFuture","__clone_box","api","block_body","block_header","block_id_to_hash","block_id_to_number","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","futures","hash_and_length","hash_of","import_notification_stream","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_key","into_key","into_mut","into_mut","into_ref","into_ref","maintain","new_full","on_broadcasted","pool","ready","ready_at","ready_transaction","remove_invalid","status","submit_and_watch","submit_at","submit_local","submit_one","to_owned","tree_route","try_from","try_from","try_into","try_into","try_into_key","try_into_key","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","validate_transaction","vzip","vzip"],"q":[[0,"subspace_service"],[132,"subspace_service::config"],[315,"subspace_service::config::SubspaceNetworking"],[318,"subspace_service::dsn"],[398,"subspace_service::rpc"],[439,"subspace_service::sync_from_dsn"],[441,"subspace_service::transaction_pool"],[526,"core::fmt"],[527,"core::fmt"],[528,"sc_service::error"],[529,"sp_consensus::error"],[530,"core::net::parser"],[531,"sc_subspace_block_relay::consensus::relay"],[532,"std::io::error"],[533,"alloc::boxed"],[534,"core::any"],[535,"alloc::sync"],[536,"alloc::rc"],[537,"subspace_runtime_primitives::opaque"],[538,"sc_consensus::import_queue"],[539,"domain_runtime_primitives::opaque"],[540,"sc_service"],[541,"prometheus_client::registry"],[542,"core::option"],[543,"sc_consensus_slots"],[544,"core::result"],[545,"sp_api"],[546,"core::marker"],[547,"core::marker"],[548,"core::error"],[549,"alloc::string"],[550,"core::any"],[551,"subspace_networking::behavior::persistent_parameters"],[552,"subspace_networking::constructor"],[553,"jsonrpsee_core::server::rpc_module"],[554,"sp_api"],[555,"sp_blockchain::backend"],[556,"sp_blockchain::error"],[557,"sp_blockchain::header_metadata"],[558,"sc_transaction_pool_api"],[559,"sp_consensus"],[560,"core::clone"],[561,"sc_client_api::backend"],[562,"sc_client_api::backend"],[563,"core::future::future"],[564,"core::pin"],[565,"sp_runtime::traits"],[566,"sc_transaction_pool::graph::pool"],[567,"sp_runtime::traits"],[568,"sc_transaction_pool::error"],[569,"sp_runtime::traits"],[570,"sc_transaction_pool_api"],[571,"sc_service::task_manager"],[572,"core::sync::atomic"],[573,"sp_blockchain::error"],[574,"sc_client_api"],[575,"std::collections::hash::map"],[576,"sc_transaction_pool::graph::pool"],[577,"sc_transaction_pool_api"]],"d":["Address parsing error.","Failed to set up block relay.","Substrate consensus error.","Error type for Subspace service.","","Subspace-like full client.","","Host functions required for Subspace","IO error.","Full node along with some other components.","Other.","Other partial components returned by <code>new_partial()</code>","Runtime executor for Subspace","Substrate service error.","Subspace networking (DSN) error.","Telemetry error.","Archived segment stream.","Full client backend.","Subspace block import","Stream of notifications about blocks about to be imported.","","","","","","","Full client.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Network service.","Network starter.","Builds a new service for a full client.","Creates <code>PartialComponents</code> for Subspace client.","New slot stream. Note: this is currently used to send …","Pot slot info stream.","Proof of time verifier","Block signing stream.","A collection of node-specific RPC methods. Substrate …","RPC handlers.","Segment headers store","Chain selection rule.","","Subspace link","","Sync service.","Approximate target block number for syncing purposes","Task manager.","Telemetry","","","Transaction pool.","","","","","","","","","","","","","","","","","","","","","","","","","Cross-domain gossip notification service.","Networking must be instantiated internally","The default max request size in MB, copied from Substrate","The default max response size in MB, copied from Substrate","Use existing networking instance","Subspace-specific service configuration.","Subspace networking instantiation variant","Simplified Substrate configuration that can be converted …","Simplified network used in Substrate","Simplified RPC configuration used in Substrate","Determines whether we allow keeping non-global (private, …","Base configuration.","Base path for node data","Number of blocks to keep in the db.","List of initial node addresses","","","","","","","","","","","Chain specification","CORS settings for HTTP &amp; WS servers. <code>None</code> if all origins …","Configuration for the default set of nodes used for block …","","","","","","","","","","","","Disable RPC batch requests","","","","","","DSN piece getter","Farmer node","","","","","","Enable authoring even when offline","Whether slot notifications need to be present even if node …","Parameter that allows node to forcefully assume it is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Implementation name","Implementation version","Configuration of the output format that the informant uses.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this node a Timekeeper","IP and port (TCP) on which to listen for RPC requests","Multiaddresses to listen for incoming connections.","Limit the max length per RPC batch request","Maximum number of connections for JSON-RPC server","Maximum allowed subscriptions per rpc connection","The number of messages the RPC server is allowed to keep …","RPC methods to expose (by default only a safe subset or …","Network configuration","The node key configuration, which determines the node’s …","Name of the node. Sent over the wire for debugging …","IP and port (TCP) to start Prometheus exporter on","Multiaddresses to advertise. Detected automatically if …","RPC rate limiting (calls/minute) for each connection","RPC configuration","State pruning settings","Subspace networking (DSN).","Enables DSN-sync on startup.","Telemetry service URL. <code>None</code> if disabled.","CPU cores that timekeeper can use","Extrinsic pool configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap nodes used (that can be also sent to the farmer …","Configuration to use for DSN instantiation","Node instance","Can’t instantiate the DSN.","DSN configuration parameters.","Errors that might happen during DSN configuration.","Size of the LRU cache for peers.","Network parameter manager error.","","Determines whether we allow keeping non-global (private, …","Bootstrap nodes for DSN.","","","","","","","","","","","Defines whether we should run blocking Kademlia …","","","Known external addresses","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Identity keypair of a node used for authenticated …","Where local DSN node will listen for incoming connections.","Defines max established incoming swarm connection limit.","Defines max established outgoing swarm connection limit.","Defines max pending incoming swarm connection limit.","Defines max pending outgoing swarm connection limit.","System base path.","Reserved nodes for DSN.","","","","","","","","","","","","","","","","","","","","Full client dependencies.","A stream with notifications about archived segment …","Backend used by the node.","","","A copy of the chain spec.","The client instance to use.","Instantiate all full RPC extensions.","Whether to deny unsafe calls.","","","","Bootstrap nodes for DSN.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","Kzg instance.","A stream with notifications about new slot arrival with …","Transaction pool instance.","A stream with notifications about headers that need to be …","Segment header provider.","Executor to drive the subscription manager in the Grandpa …","Subspace sync oracle.","","","","","","","","","Trait representing a way to get pieces for DSN sync …","","","","","A transaction pool for a full node.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Gets shared reference to the underlying pool.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[3,3,3,0,0,0,0,0,3,0,3,0,0,3,3,3,31,31,25,31,25,31,3,25,31,3,31,0,25,31,3,25,31,3,25,31,3,0,3,3,25,31,3,3,3,3,3,3,3,3,25,25,31,31,3,3,25,25,31,31,3,3,25,31,3,25,31,3,25,31,3,25,3,25,31,3,25,31,3,25,31,3,25,31,3,31,31,0,0,31,31,25,31,0,31,25,31,3,25,0,31,25,31,25,3,0,31,25,31,3,25,31,3,25,31,3,25,31,3,25,31,3,25,31,3,25,31,3,25,31,3,31,46,0,0,46,0,0,0,0,0,44,17,45,45,44,43,44,45,46,17,43,44,45,46,17,45,43,44,43,44,45,46,17,17,43,44,45,46,17,43,43,44,45,46,17,17,45,43,44,45,46,17,45,17,44,43,44,45,46,17,43,43,44,44,45,45,46,46,17,17,43,43,44,44,45,45,46,46,17,17,45,45,45,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,17,43,44,43,43,43,43,43,45,44,44,45,44,43,45,45,17,17,45,17,45,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,43,44,45,46,17,100,101,100,6,0,0,0,6,48,48,48,6,48,6,48,48,48,6,48,6,48,48,6,48,48,6,6,48,6,6,6,48,6,6,48,48,6,6,48,48,6,48,6,48,6,48,6,48,6,48,6,48,6,48,6,48,48,48,48,48,48,48,48,48,6,48,6,6,48,6,48,6,48,6,48,6,48,6,48,6,48,6,48,0,51,51,51,51,51,51,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,64,0,0,0,0,0,72,68,72,72,72,72,68,72,68,72,72,72,68,72,68,72,68,72,68,72,68,68,72,72,68,68,72,72,68,72,68,68,68,72,68,72,68,72,68,72,68,72,68,72,68,72,68,72,68,0,68,68,68,68,68,68,68,68,68,68,68,72,72,68,72,68,72,68,72,68,72,68,72,68,72,68,72,72,68,72],"f":"````````````````````{ce{}{}}00000``{bc{}}00000{bd}00`{{fh}j}0{cc{}}0{lf}{nf}{A`f}{Abf}{Adf}{Aff}6{Ahf}7;;7;77;7;;7{{}b}00<<<{{{Aj{c}}}{{Aj{Al}}}{}}00{{{An{c}}}{{An{Al}}}{}}0{{{B`{c}}}{{B`{Al}}}{}}00?????????``{{Bb{Cd{{Bd{c}}BfBh{Bl{Bj}}{C`{{Bd{c}}BjBn}}{Cb{c}}}}{Ch{Cf}}CjCl}{{D`{{Cn{{Bd{c}}}}f}}}{DbDdDf}}{{Dh{Dl{Dj}}}{{D`{{Cd{{Bd{c}}BfBh{Bl{Bj}}{C`{{Bd{c}}BjBn}}{Cb{c}}}}A`}}}{}}````````{f{{Ch{Dn}}}}``````{cE`{}}``{c{{D`{e}}}{}{}}00000000{cEb{}}00{cEd{}}00{ce{}{}}00000000```````````````0000000000```{bc{}}0000{Bbc{}}11111`{bd}0000``{{Efh}j}{{Ehh}j}{{Ejh}j}{{Elh}j}{{Bbh}j}```{cc{}}000090090990090990909009```{{}b}0000:::::{{{Aj{c}}}{{Aj{Al}}}{}}0000{{{An{c}}}{{An{Al}}}{}}0000{{{B`{c}}}{{B`{Al}}}{}}0000===============`````````````````````{c{{D`{e}}}{}{}}00000000000000{cEb{}}0000{cEd{}}0000{ce{}{}}00000000000000````````{{cEn}d{}}``1111{F`F`}{{ce}d{}{}}{bc{}}000`{bd}0`{{lh}j}0{{F`h}j}{Fbl}{cc{}}{Fdl}11:1::1:1{{}b}0;;{{{Aj{c}}}{{Aj{Al}}}{}}0{{{An{c}}}{{An{Al}}}{}}0{{{B`{c}}}{{B`{Al}}}{}}0>>>>>>````````{l{{Ch{Dn}}}}?{cE`{}}{c{{D`{e}}}{}{}}00000{cEb{}}0{cEd{}}0{ce{}{}}00000```00``{{{Ff{cegik}}}{{D`{{Fh{d}}{Aj{Dn}}}}}{{Fj{Bj}}{Fl{Bj}}{Fn{Bj}}{Gd{Bj}{{G`{Gb}}}}DdDf}Gf{GhDdDfGj}{GlDdDf}{{Gn{Bj}}DdDf}}`{bc{}}0{bd}`>3>>3<3;:9333```````66654333`{{H`Hb}{{Hf{{Aj{Hd}}}}}}`````{{cEn}d{}}{{{Hh{ce}}}eHj{{Hn{}{{Hl{c}}}}}}{{{I`{ecg}}}iHj{{Fj{c}}Gl{Fl{c}}{Ib{c}}{Fn{c}}{Gd{c}{{G`{Gb}}}}DdDf}Id{}}{{{I`{ecg}}}{{D`{Chi}}}Hj{{Fj{c}}Gl{Fl{c}}{Ib{c}}{Fn{c}}{Gd{c}{{G`{Gb}}}}DdDf}Id{}}{{{I`{ecg}}{If{i}}}{{Ih{Ch}}}Hj{{Fj{c}}Gl{Fl{c}}{Ib{c}}{Fn{c}}{Gd{c}{{G`{Gb}}}}DdDf}Id{}}{{{I`{ecg}}{If{i}}}{{Ih{{Ch{{Ij{i}}}}}}}Hj{{Fj{c}}Gl{Fl{c}}{Ib{c}}{Fn{c}}{Gd{c}{{G`{Gb}}}}DdDf}Id{}}::::{{{I`{ceg}}}{{I`{ceg}}}Gj{GjHj}{GjId}}{{ce}d{}{}}::::99{cc{}}00=0=0==0{{{Hh{ce}}}{{Il{g}}}Hj{{Hn{}{{Hl{c}}}}}{}}{{{I`{ecg}}}{{In{b}}}Hj{{Fj{c}}Gl{Fl{c}}{Ib{c}}{Fn{c}}{Gd{c}{{G`{Gb}}}}DdDf}Id}{{{Hh{ce}}{J`{{Hh{ce}}}}}{{Jb{{Hh{ce}}}}}Hj{{Hn{}{{Hl{c}}}}}}{{{Hh{ce}}}{{Jd{{Jb{{Hh{ce}}}}}}}Hj{{Hn{}{{Hl{c}}}}}}{{}b}0{ce{}{}}0{{{Aj{c}}}{{Aj{Al}}}{}}0{{{An{c}}}{{An{Al}}}{}}0{{{B`{c}}}{{B`{Al}}}{}}0333333{{{Hh{ce}}{Jf{g}}}{{Hf{{Aj{Hd}}}}}Hj{{Hn{}{{Hl{c}}}}}{}}{{JhCj{Ch{Jj}}Jl{An{e}}{An{Jn}}}{{K`{{An{{C`{ecg}}}}}}}Hj{{Fj{c}}Gl{Fl{c}}{Fn{c}}{Gd{c}{{G`{Gb}}}}{Kb{c}}{Kd{c}}{Ib{c}}DdDf}Id}{{{Hh{ce}}{Kf{{Jb{{Hh{ce}}}}{Il{E`}}}}}dHj{{Hn{}{{Hl{c}}}}}}{{{Hh{ce}}}{{An{{Kh{e}}}}}Hj{{Hn{}{{Hl{c}}}}}}{{{Hh{ce}}}{{Aj{Kj}}}Hj{{Hn{}{{Hl{c}}}}}}{{{Hh{ce}}{Ij{g}}}{{Hf{{Aj{Hd}}}}}Hj{{Hn{}{{Hl{c}}}}}{}}{{{Hh{ce}}{Jb{{Hh{ce}}}}}{{Ch{{An{g}}}}}Hj{{Hn{}{{Hl{c}}}}}{}}{{{Hh{ce}}{Dl{{Jb{{Hh{ce}}}}}}}{{Il{{An{g}}}}}Hj{{Hn{}{{Hl{c}}}}}{}}{{{Hh{ce}}}KlHj{{Hn{}{{Hl{c}}}}}}{{{Hh{ce}}Kn{J`{{Hh{ce}}}}}{{Lb{{Hf{{Aj{{L`{{Hh{ce}}}}}}}}g}}}Hj{{Hn{}{{Hl{c}}}}}{}}{{{Hh{ce}}Kn{Il{{J`{{Hh{ce}}}}}}}{{Lb{{Il{{D`{{Jb{{Hh{ce}}}}g}}}}g}}}Hj{{Hn{}{{Hl{c}}}}}{}}{{{Hh{c{I`{ecg}}}}{Ld{{Hh{c{I`{ecg}}}}}}}{{D`{ik}}}Hj{{Fj{c}}Gl{Fl{c}}{Ib{c}}{Fn{c}}{Gd{c}{{G`{Gb}}}}DdDf}Id{}{}}{{{Hh{ce}}Kn{J`{{Hh{ce}}}}}{{Lb{{Jb{{Hh{ce}}}}g}}}Hj{{Hn{}{{Hl{c}}}}}{}}{ce{}{}}{{{I`{ecg}}}{{D`{{Lf{i}}k}}}Hj{{Fj{c}}Gl{Fl{c}}{Ib{c}}{Fn{c}}{Gd{c}{{G`{Gb}}}}DdDf}Id{}{}}{c{{D`{e}}}{}{}}00000{cEb{}}0{cEd{}}04444{{{I`{ecg}}Kn}iHj{{Fj{c}}Gl{Fl{c}}{Ib{c}}{Fn{c}}{Gd{c}{{G`{Gb}}}}DdDf}Id{}}55","c":[],"p":[[1,"usize"],[1,"unit"],[6,"Error",0],[5,"Formatter",526],[8,"Result",526],[6,"DsnConfigurationError",318],[6,"Error",527],[6,"Error",528],[6,"Error",529],[5,"AddrParseError",530],[6,"BlockRelayConfigurationError",531],[5,"Error",532],[5,"Box",533],[10,"Any",534],[5,"Arc",535],[5,"Rc",536],[5,"SubspaceConfiguration",132],[8,"FullClient",0],[8,"FullBackend",0],[8,"FullSelectChain",0],[8,"Block",537],[8,"DefaultImportQueue",538],[8,"Header",539],[8,"FullPool",441],[5,"OtherPartialComponents",0],[5,"PartialComponents",540],[5,"Registry",541],[6,"Option",542],[1,"bool"],[5,"SlotProportion",543],[5,"NewFull",0],[6,"Result",544],[10,"ConstructRuntimeApi",545],[10,"Send",546],[10,"Sync",546],[5,"Configuration",547],[1,"u8"],[1,"slice"],[10,"Error",548],[5,"String",549],[5,"TypeId",534],[1,"str"],[5,"SubstrateRpcConfiguration",132],[5,"SubstrateNetworkConfiguration",132],[5,"SubstrateConfiguration",132],[6,"SubspaceNetworking",132],[5,"Private",550],[5,"DsnConfig",318],[6,"KnownPeersManagerPersistenceError",551],[6,"CreationError",552],[5,"FullDeps",398],[5,"RpcModule",553],[10,"ProvideRuntimeApi",545],[10,"BlockBackend",554],[10,"HeaderBackend",555],[17,"Error"],[6,"Error",556],[10,"HeaderMetadata",557],[10,"TransactionPool",558],[10,"SyncOracle",559],[10,"Clone",560],[10,"AuxStore",561],[10,"Backend",561],[10,"DsnSyncPieceGetter",439],[5,"PieceIndex",562],[10,"Future",563],[5,"Pin",564],[5,"BasicPoolWrapper",441],[10,"Block",565],[17,"Block"],[10,"ChainApi",566],[5,"FullChainApiWrapper",441],[10,"BlockIdTo",565],[10,"Header",565],[6,"BlockId",567],[8,"Result",568],[8,"NumberFor",565],[5,"Vec",569],[1,"tuple"],[8,"TransactionFor",558],[8,"TxHash",558],[8,"ImportNotificationStream",558],[6,"ChainEvent",558],[5,"Options",566],[5,"Registry",570],[5,"TaskManager",571],[5,"AtomicU32",572],[8,"Result",556],[10,"ExecutorProvider",573],[10,"UsageProvider",574],[5,"HashMap",575],[5,"Pool",566],[10,"ReadyTransactions",558],[5,"PoolStatus",558],[6,"TransactionSource",576],[8,"TransactionStatusStreamFor",558],[8,"PoolFuture",558],[8,"LocalTransactionFor",558],[5,"TreeRoute",557],[15,"Reuse",315],[15,"Create",315]],"b":[[38,"impl-Debug-for-Error"],[39,"impl-Display-for-Error"],[42,"impl-From%3CDsnConfigurationError%3E-for-Error"],[43,"impl-From%3CError%3E-for-Error"],[44,"impl-From%3CError%3E-for-Error"],[45,"impl-From%3CError%3E-for-Error"],[46,"impl-From%3CAddrParseError%3E-for-Error"],[47,"impl-From%3CBlockRelayConfigurationError%3E-for-Error"],[49,"impl-From%3CError%3E-for-Error"],[340,"impl-Debug-for-DsnConfigurationError"],[341,"impl-Display-for-DsnConfigurationError"],[343,"impl-From%3CKnownPeersManagerPersistenceError%3E-for-DsnConfigurationError"],[345,"impl-From%3CCreationError%3E-for-DsnConfigurationError"]]}],\
["subspace_test_client",{"doc":"Subspace test client only.","t":"IICCHHHHHH","n":["Backend","Client","chain_spec","domain_chain_spec","start_farmer","get_account_id_from_seed","get_from_seed","subspace_local_testnet_config","get_account_id_from_seed","testnet_evm_genesis"],"q":[[0,"subspace_test_client"],[5,"subspace_test_client::chain_spec"],[8,"subspace_test_client::domain_chain_spec"],[10,"subspace_service"],[11,"subspace_runtime_primitives"],[12,"subspace_test_runtime"],[13,"sc_chain_spec::chain_spec"],[14,"alloc::string"],[15,"core::result"],[16,"evm_domain_test_runtime"],[17,"evm_domain_test_runtime"]],"d":["The backend type being used by the test service.","The client type being used by the test service.","Chain specification for the test runtime.","Chain specification for the evm domain.","Run a farmer.","Generate an account ID from seed.","Generate a crypto pair from seed.","Local testnet config (multivalidator Alice + Bob).","Helper function to generate an account ID from seed.","Get the genesis config of the evm domain"],"i":[0,0,0,0,0,0,0,0,0,0],"f":"````{{{d{b}}}f}{hj}{h}{{}{{Ab{{n{l}}A`}}}}{hAd}{{}Af}","c":[],"p":[[8,"Client",0],[5,"NewFull",10],[1,"unit"],[1,"str"],[8,"AccountId",11],[5,"RuntimeGenesisConfig",12],[5,"ChainSpec",13],[5,"String",14],[6,"Result",15],[8,"AccountId",16],[5,"RuntimeGenesisConfig",16]],"b":[]}],\
["subspace_test_primitives",{"doc":"Test primitive crates that expose necessary extensions …","t":"KNN","n":["OnchainStateApi","free_balance","get_open_channel_for_chain"],"q":[[0,"subspace_test_primitives"],[3,"sp_api"],[4,"core::result"],[5,"parity_scale_codec::codec"],[6,"parity_scale_codec::codec"],[7,"sp_domains"]],"d":["Api for querying onchain state in the test","Api to get the free balance of the given account","Returns the last open channel for a given domain."],"i":[0,1,1],"f":"`{{bc}{{f{ed}}}{hj}{hj}}{{bl}{{f{{A`{n}}d}}}}","c":[],"p":[[10,"OnchainStateApi",0],[6,"ApiError",3],[6,"Result",4],[10,"Encode",5],[10,"Decode",5],[6,"ChainId",6],[8,"ChannelId",6],[6,"Option",7]],"b":[]}],\
["subspace_test_runtime",{"doc":"","t":"IPPIIGPFIPPPIIFFFFFFFFFFFSFFFIPPPPIFGFIFPIIPGPPFFSPFFFFFFFFIPPPPFFFFFIFIPFGFFFFFPFFFIPPIPFFFGGGGFGGFGGSSISFFFIIFPFFFIPPPFFIIIPPPIIPPPIIPFFIPIPIIPPPFFIIPPPSFIPPPIPSSNNNNNNNNNNNNNNOONNOCNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNONOONONNONNNNNNNONOONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNNNNOOOOOOOPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["Address","Address20","Address32","AllPalletsWithSystem","AllPalletsWithoutSystem","AllowAuthoringBy","Anyone","AvgBlockspaceUsageNumBlocks","Balances","Balances","Balances","Balances","BalancesConfig","Block","BlockAuthoringDelay","BlockHashCount","BlockHashProvider","BlockSlot","BlockSlotCount","BlockTreePruningDepth","BlockchainHistorySize","BundleLongevity","ChannelReserveFee","ConfirmationDepthK","CreditSupply","DECIMAL_PLACES","DomainInstantiationDeposit","DomainRuntimeUpgradeDelay","DomainTxRangeAdjustmentInterval","Domains","Domains","Domains","Domains","Domains","DomainsConfig","DomainsPalletId","EnableRewardsAt","EraDuration","Executive","ExpectedVotesPerBlock","FirstFarmer","GenesisConfig","Header","Height","HoldIdentifier","Id","Index","InitialDomainTxRange","LiquidityInfo","MILLISECS_PER_BLOCK","Manually","MaxBundlesPerBlock","MaxDomainBlockSize","MaxDomainBlockWeight","MaxDomainNameLength","MaxInitialDomainAccounts","MaxNominators","MaxPendingStakingOperation","MaximumReceiptDrift","Messenger","Messenger","Messenger","Messenger","Messenger","MinInitialDomainAccountBalance","MinNominatorStake","MinOperatorStake","MinSectorLifetime","MinVestedTransfer","Mmr","MmrProofVerifier","OffencesSubspace","OffencesSubspace","OnChargeTransaction","OriginCaller","PalletInfo","PotEntropyInjectionDelay","PotEntropyInjectionInterval","PotEntropyInjectionLookbackDepth","ProposerTaxOnVotes","Raw","RecentHistoryFraction","RecentSegments","RewardPoint","Rewards","Rewards","Rewards","RewardsConfig","RootFarmer","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","RuntimeTask","SHANNON","SLOT_DURATION","SS58Prefix","SSC","SelfChainId","SessionKeys","ShouldAdjustSolutionRange","SignedExtra","SignedPayload","SlotProbability","SolutionRange","StakeEpochDuration","StakeWithdrawalLockingPeriod","StorageKeys","Subspace","Subspace","Subspace","Subspace","SubspaceBlockLength","SubspaceBlockWeights","SubspaceConfig","SubspaceMmr","Sudo","Sudo","Sudo","Sudo","SudoConfig","System","System","System","System","SystemConfig","Timestamp","Timestamp","TotalSpacePledged","TransactionByteFee","TransactionFees","TransactionFees","TransactionPayment","TransactionPayment","TransactionPaymentConfig","Transporter","Transporter","Transporter","Transporter","TransporterEndpointId","TreasuryAccount","UncheckedExtrinsic","Utility","Utility","Utility","Utility","VERSION","Version","Vesting","Vesting","Vesting","Vesting","VestingConfig","Void","WASM_BINARY","WASM_BINARY_BLOATY","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_config","_config","account_nonce","add_filter","allow_authoring_by","api","api_version","apply_extrinsic","as_system_ref","assimilate_storage","balances","balances","balances","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block","block_hash","block_messages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_config","bundle_producer_election_params","caller","chain_constants","check_inherents","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","confirmed_domain_block_storage_key","confirmed_domain_block_storage_key","consensus_chain_byte_fee","construct_runtime_api","correct_and_deposit_fee","crate_version","create_default_config","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into_raw_public_keys","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","digest","dispatch","dispatch_bypass_filter","domain_best_number","domain_block_limit","domain_bundle_limit","domain_chains_allowlist_update","domain_instance_data","domain_instantiation_id","domain_operators","domain_runtime_code","domain_tx_range","domains","domains","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_rewards_at","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_block","execute_in_transaction","execution_receipt","extract_block_object_mapping","extract_bundle","extract_fraud_proofs","extract_proof","extract_receipts","extract_segment_headers","extract_successful_bundles","extrinsics","extrinsics_root","extrinsics_shuffling_seed","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_balance","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","function","future_slot","generate","generate_proof","generate_session_keys","genesis_domains","genesis_state_root","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_metadata","get_call_names","get_dispatch_info","get_endpoint_handler","get_module_names","get_open_channel_for_chain","get_raw","has_api","has_api_with","head_receipt_number","header","history_size","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inbox_response_message_unsigned","inbox_response_storage_key","inbox_responses_storage_key","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_key","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_bad_er_pending_to_prune","is_clear","is_feeless","is_in_block_list","is_inherent","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_valid","is_xdm_valid","iter","key","key_ids","latest_confirmed_domain_block","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_pieces_in_sector","messenger_channel","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","mmr_leaf_count","mmr_root","module_name","multiplier","name","name_hash","non_empty_er_exists","none","none","number","offchain_worker","oldest_unconfirmed_receipt_number","operator","operator_id_by_signing_key","outbox_message_unsigned","outbox_storage_key","outbox_storage_key","parent_hash","partial_cmp","permissioned_action_allowed_by","phantom","pot_parameters","pot_slot_iterations","pre_dispatch","proof_recorder","proposer_subsidy_points","query_fee_details","query_info","query_length_to_fee","query_weight_to_fee","receipt_hash","record_proof","register_extension","remaining_issuance","reset_filter","rewards","rewards","root","root","root_plot_public_key","run","runtime_id","segment_commitment","serialize","serialize","serialize","serialize","serialize","set_call_context","set_caller_from","should_adjust_solution_range","should_relay_inbox_message_response","should_relay_outbox_message","signature","signed","signed","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slot_produced_after","solution_ranges","staking_staked","state_root","storage_fund_account_balance","storage_fund_withdrawal","submit_bundle_unsigned","submit_fraud_proof_unsigned","submit_report_equivocation_extrinsic","submit_vote_extrinsic","subsidy","subspace","subspace","sudo","sudo","system","system","system","task_index","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_payment","transaction_payment","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_into_key","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate_transaction","validate_unsigned","validated_object_call_hashes","verify_proof","verify_proof_and_extract_consensus_state_root","verify_proof_stateless","version","vesting","vesting","vesting","voter_subsidy_points","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","withdraw_fee","dispatch"],"q":[[0,"subspace_test_runtime"],[2587,"subspace_test_runtime::api"],[2588,"dyn_clone::sealed"],[2589,"subspace_runtime_primitives"],[2590,"subspace_runtime_primitives"],[2591,"core::option"],[2592,"sp_api"],[2593,"core::result"],[2594,"sp_runtime::traits"],[2595,"sp_api"],[2596,"frame_support::dispatch"],[2597,"sp_storage"],[2598,"alloc::string"],[2599,"alloc::vec"],[2600,"subspace_core_primitives"],[2601,"subspace_runtime_primitives"],[2602,"sp_genesis_builder"],[2603,"sp_domains"],[2604,"subspace_runtime_primitives"],[2605,"sp_consensus_subspace"],[2606,"sp_inherents"],[2607,"sp_inherents"],[2608,"core::cmp"],[2609,"sp_api"],[2610,"frame_support::traits::metadata"],[2611,"parity_scale_codec::error"],[2612,"parity_scale_codec::codec"],[2613,"parity_scale_codec::codec"],[2614,"core::default"],[2615,"serde::de"],[2616,"serde::de"],[2617,"sp_domains"],[2618,"subspace_core_primitives"],[2619,"core::cmp"],[2620,"sp_domains"],[2621,"sp_domains"],[2622,"sp_trie::storage_proof"],[2623,"subspace_core_primitives"],[2624,"core::fmt"],[2625,"frame_support::dispatch"],[2626,"pallet_domains::pallet"],[2627,"pallet_subspace::pallet"],[2628,"pallet_messenger::pallet"],[2629,"orml_vesting::module"],[2630,"pallet_sudo::pallet"],[2631,"pallet_transporter::pallet"],[2632,"frame_system::pallet"],[2633,"pallet_subspace::pallet"],[2634,"pallet_utility::pallet"],[2635,"pallet_sudo::pallet"],[2636,"pallet_balances::pallet"],[2637,"frame_system::pallet"],[2638,"sp_mmr_primitives"],[2639,"sp_mmr_primitives"],[2640,"sp_version"],[2641,"core::convert"],[2642,"frame_system::limits"],[2643,"frame_system::limits"],[2644,"sp_domains"],[2645,"sp_weights::weight_v2"],[2646,"frame_support"],[2647,"frame_support::traits::metadata"],[2648,"sp_domains"],[2649,"sp_consensus_subspace"],[2650,"frame_metadata"],[2651,"sp_mmr_primitives"],[2652,"pallet_transaction_payment::types"],[2653,"sp_domains"],[2654,"serde::ser"],[2655,"core::convert"],[2656,"scale_info::ty"],[2657,"sp_runtime::transaction_validity"]],"d":["The address format for describing accounts.","Its a 20 byte representation.","It’s a 32 byte representation.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","Anyone can author new blocks at genesis.","","","","","","","Block type as expected by this runtime.","","","","","","","","","","","","Subspace Credits have 18 decimal places.","","","","","","","","","","","When to enable block/vote rewards","","Executive: handles dispatch to the various modules.","","Author of the first block will be able to author blocks …","","Block header type as expected by this runtime.","At specified height or next block if <code>None</code>","","It’s an account ID (pubkey).","It’s an account index.","","","Since Subspace is probabilistic this is the average …","Manually with an explicit extrinsic","","Use the consensus chain’s <code>Normal</code> extrinsics block size …","Use the consensus chain’s <code>Normal</code> extrinsics block weight …","","","","","","","","","","","","","","","","","","","","Implementation of …","","Provides an implementation of <code>PalletInfo</code> to provide …","","","","","It’s some arbitrary raw bytes.","","","","","","","","Specified root farmer is allowed to author blocks unless …","","","Implements all runtime apis for the client side.","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","An aggregation of all <code>Task</code> enums across all pallets …","The smallest unit of the token is called Shannon.","","","One Subspace Credit.","","","","The SignedExtension to the basic transaction logic.","The payload being signed in transactions.","","When solution range is below specified threshold","","","","","","","","We allow for 3.75 MiB for <code>Normal</code> extrinsic with 5 MiB …","We allow for 2 seconds of compute with a 6 second average …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unchecked extrinsic type as expected by this runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Who can author blocks at genesisecode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …chain-specific digest of data useful for light clients …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When rewards should be enabled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The accompanying extrinsics.","The merkle root of the extrinsics.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert to runtime origin, using as filter: …","Returns the argument unchanged.","Convert to runtime origin with caller being system signed …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","The function that should be called.","","Generate a set of keys with optionally using the given …","","","","","","","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","","","","","","","","","The block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>AccountId</code> of the sudo key.","","","","","","","","","","","","","","","","","","","","","","","","","","Create with system none origin and …","The block number.","","","","","","","","The parent hash.","","","","","Number of iterations for proof of time per slot","","","Block proposer subsidy parameters","","","","","","","","Tokens left to issue to farmers at any given time","","","","Create with system root origin and …","","","","","","","","","","","","","","","","The signature, address, number of extrinsics have come …","Create with system signed origin and …","","","","","","","","","","","","","","The state trie merkle roototer subsidy parameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,189,189,0,0,0,58,0,0,46,59,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,46,59,47,0,0,0,0,0,0,58,0,0,40,0,189,189,0,0,0,40,0,0,0,0,0,0,0,0,0,39,46,59,47,0,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,189,0,0,0,0,46,47,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,46,59,47,0,0,0,0,0,46,59,47,0,0,46,59,47,0,0,46,0,0,0,47,0,47,0,0,46,59,47,0,0,0,0,46,59,47,0,0,0,46,59,47,0,17,0,0,36,38,39,40,5,41,42,43,44,45,46,17,47,48,190,191,48,5,192,0,9,48,17,19,193,194,19,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,195,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,19,48,48,5,48,48,36,36,38,39,40,5,41,42,43,44,45,46,17,47,48,36,38,39,40,5,41,42,43,44,45,46,17,47,48,39,39,203,48,48,250,201,249,48,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,38,39,40,58,41,42,43,44,45,46,17,59,47,38,48,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,58,19,39,39,39,39,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,36,38,40,58,19,251,46,46,48,48,48,48,48,39,48,48,48,194,19,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,192,36,38,39,40,58,46,17,59,47,48,36,38,39,40,41,42,43,44,45,46,17,47,48,36,36,36,36,36,38,38,38,38,38,39,39,39,39,39,40,40,40,40,40,41,41,41,41,41,42,42,42,42,42,43,43,43,43,43,44,44,44,44,44,45,45,45,45,45,46,46,46,46,46,17,17,17,17,17,47,47,47,47,47,48,48,48,48,48,48,9,48,48,48,48,9,48,48,48,33,251,48,5,48,36,38,39,40,5,58,41,42,43,44,45,46,17,59,47,48,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,5,5,5,250,58,9,41,42,43,44,19,45,46,46,46,46,46,46,46,46,46,46,46,46,17,17,59,59,59,59,59,59,59,59,59,59,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,59,36,36,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,195,195,38,38,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,39,39,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,40,40,5,5,250,250,58,58,9,9,41,41,42,42,43,43,44,44,19,19,45,45,46,46,17,17,59,59,47,47,48,48,36,36,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,195,195,38,38,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,39,39,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,40,40,5,5,250,250,58,58,9,9,41,41,42,42,43,43,44,44,19,19,45,45,46,46,17,17,59,59,47,47,48,48,252,204,38,48,48,253,48,196,197,198,199,205,205,205,206,206,206,207,207,207,208,208,208,209,209,209,210,210,210,211,211,211,212,212,212,213,213,213,214,214,214,215,215,215,216,216,216,217,217,217,218,218,218,219,219,219,220,220,220,221,221,221,222,222,222,223,223,223,224,224,224,225,225,225,226,226,226,227,227,227,228,228,228,229,229,229,230,230,230,231,231,231,232,232,232,233,233,233,234,234,234,235,235,235,236,236,236,237,237,237,238,238,238,239,239,239,240,240,240,241,241,241,242,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,46,46,46,48,46,48,38,9,9,48,33,48,36,38,39,40,58,41,42,43,44,45,46,17,59,47,48,48,203,249,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,5,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,38,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,9,17,48,36,46,48,48,46,46,46,46,46,46,46,46,46,46,46,45,48,45,254,38,48,36,39,41,42,43,44,17,48,39,48,48,48,48,48,48,48,48,249,191,249,249,48,5,5,251,48,48,48,48,48,203,48,251,39,253,192,48,192,48,9,255,48,48,48,48,48,9,9,255,5,194,19,5,5,48,45,48,48,36,38,40,58,19,9,5,48,48,48,252,5,5,36,38,39,40,58,46,17,59,47,204,48,39,251,48,39,48,48,48,48,36,194,19,194,19,194,19,17,45,48,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,38,39,40,5,41,42,43,44,45,46,17,47,48,194,19,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,59,59,59,59,59,59,59,59,59,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,5,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,38,39,40,58,41,42,43,44,45,46,17,59,47,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,36,38,39,40,58,41,42,43,44,45,46,17,59,47,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,36,38,39,40,41,42,43,44,45,46,17,47,48,48,48,48,202,48,48,256,194,19,255,36,196,197,198,199,200,201,202,203,204,195,38,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,39,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,40,5,250,58,9,41,42,43,44,19,45,46,17,59,47,48,45,201,0],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}0000000000000``{fh}{{je}d{}{{A`{c}{{l{n}}}}}}``{{{Ab{ce}}}{{Aj{{Af{Ad}}Ah}}}Al{{An{c}}}}{{}B`}{Bb{{Af{Bd}}}}{{BfBh}{{Aj{dBj}}}}```{c{{Bn{Bl}}}{}}0000000000000{c{{C`{Bl}}}{}}000000000000011111111111111`{CbCd}{{}Cf}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Bfd}{{{C`{Bl}}}Ch}{Cj{{Af{{Cn{Cl}}}}}}{jc{}}{{}D`}{{DbDd}Df}{{}c{}}{{{Dh{ce}}}{{Dh{ce}}}DjDj}{DlDl}{DnDn}{{{E`{c}}}{{E`{c}}}Dj}{jj}{EbEb}{EdEd}{EfEf}{EhEh}{EjEj}{ElEl}{BbBb}{EnEn}{F`F`}{{ce}d{}{}}0000000000000{{DnDn}Fb}{{ce}Fb{}{}}{Cj{{Af{{C`{Bl}}}}}}{Cj{{C`{Bl}}}}{{}Cl}{e{{Fd{g}}}Al{{An{c}}}{}}{{f{Ff{El}}{Fh{El}}cce}{{Aj{dFj}}}{}{}}{{}{{Af{Fl}}}}{{}{{C`{Bl}}}}{c{{Aj{{Dh{eg}}Fn}}}G`GbGb}{c{{Aj{DlFn}}}G`}{c{{Aj{DnFn}}}G`}{c{{Aj{{E`{e}}Fn}}}G`{}}{c{{Aj{GdFn}}}G`}{c{{Aj{EbFn}}}G`}{c{{Aj{EdFn}}}G`}{c{{Aj{EfFn}}}G`}{c{{Aj{EhFn}}}G`}{c{{Aj{EjFn}}}G`}{c{{Aj{ElFn}}}G`}{c{{Aj{BbFn}}}G`}{c{{Aj{GfFn}}}G`}{c{{Aj{EnFn}}}G`}{{{Gh{Bl}}}{{Aj{cFn}}}{}}0000000000000{{Ad{Gh{Bl}}}{{Aj{cFn}}}{}}0000000000000{{{Gh{Bl}}}{{Af{{C`{{Gl{{C`{Bl}}Gj}}}}}}}}{{{C`{Bl}}}{{Af{{C`{{Gl{{C`{Bl}}Gj}}}}}}}}{{Adc}{{Aj{eFn}}}G`{}}0000000000000{{}{{Dh{ce}}}GnGn}{{}Gd}{{}Bf}{{ce}e{}{}}000{H`c{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{c{{Aj{{Dh{eg}}}}}HbHdHd}{c{{Aj{Dl}}}Hb}{c{{Aj{{E`{e}}}}}HbHd}{c{{Aj{Gd}}}Hb}{c{{Aj{Bf}}}Hb}`{{Elj}Hf}0{Cj{{Af{Hh}}}}{Cj{{Af{Hj}}}}{Cj{{Af{Hl}}}}{Cj{{Af{Hn}}}}{Cj{{Af{{Gl{I`{Ib{Db}}}}}}}}{CjDn}{Cj{{Af{{Gl{{If{IdCl}}{C`{Id}}}}}}}}{Cj{{Af{{C`{Bl}}}}}}{CjIh}``{H`d}0000000000000000000000000000000000000000000000000000000000000000000000000`{{{Dh{ce}}g}dIjIj{IlIn}}{{Dlc}d{IlIn}}{{Dnc}d{IlIn}}{{{E`{c}}e}d{}{IlIn}}{{Gdc}d{IlIn}}{{Elc}d{IlIn}}{{Bbc}d{IlIn}}{{Gfc}d{IlIn}}{{Enc}d{IlIn}}{{}{{Aj{dAd}}}}{{{Dh{ce}}{Dh{ce}}}nJ`J`}{{DlDl}n}{{DnDn}n}{{{E`{c}}{E`{c}}}nJ`}{{EbEb}n}{{EdEd}n}{{EfEf}n}{{EhEh}n}{{EjEj}n}{{ElEl}n}{{BbBb}n}{{EnEn}n}{{F`F`}n}{{ce}n{}{}}0000000000000000000000000000000000000000000000000000000000000000{Dbd}{{{Ab{ce}}i}gAl{{An{c}}}{}{{Jd{{Ab{ce}}}{{l{{Jb{g}}}}}}}}{Jf{{Af{{Jj{JhDbCl}}}}}}{{Db{C`{Cd}}}Jl}{{}{{Af{{Jn{{Ib{Db}}JhCl}}}}}}{{CjC`}{{C`{{K`{{Ib{Db}}Jh}}}}}}{{{Ab{ce}}}{{Af{Kb}}}Al{{An{c}}}}{{CjC`}{{C`{{Jj{JhDbCl}}}}}}{{}{{Af{{C`{Kd}}}}}}{{CjC`}{{Kf{DbJhCl}}}}``{{}Kh}{{jc}n{}}{{}}{{{Dh{ce}}Kj}{{Aj{dKl}}}KnKn}{{DlKj}L`}{{DnKj}L`}{{{E`{c}}Kj}{{Aj{dKl}}}Kn}{{jKj}{{Aj{dKl}}}}{{GdKj}{{Aj{dKl}}}}{{EbKj}L`}{{EdKj}L`}{{EfKj}L`}{{EhKj}L`}{{EjKj}L`}{{ElKj}L`}{{BbKj}L`}{{GfKj}L`}{{EnKj}L`}{{F`Kj}L`}{fCl}{cc{}}0000000000000000000000000000000000000000000000000000000000{{{Lb{F`}}}j}1{Afj}{Bbj}333333333{{{Lf{LdF`}}}El}{{{Lf{LhF`}}}El}{{{Lf{LjF`}}}El}6{{{Lf{LlF`}}}El}{{{Lf{LnF`}}}El}{{{Lf{M`F`}}}El}{{{Lf{MbF`}}}El}{{{Lf{MdF`}}}El}{{{Lf{MfF`}}}El}{{{Lf{MhF`}}}El}{{{Lf{MjF`}}}El}>{{{Lb{F`}}}Bb}{{{Ml{F`}}}Gf}{{{Mn{F`}}}Gf}{{{N`{F`}}}Gf}{{{Nb{F`}}}Gf}{{{Nd{F`}}}Gf}{{{Nf{F`}}}Gf}{{{Nh{F`}}}Gf}{{{Nj{F`}}}Gf}{{{Nl{F`}}}Gf}{cc{}}{{{Nn{F`}}}En}{{{O`{F`}}}En}{ObEn}{{{Od{F`}}}En}{{{Of{F`}}}En}{{{Oh{F`}}}En}{{{Oj{F`}}}En}{{{Ol{F`}}}En}{{{On{F`}}}En}{{{A`{F`}}}En}{{{Ab{F`}}}En}{AdEn}<{{{Af{F`}}}En}={Ah{{Af{Gf}}}}{ce{}{}}??0?0?00??00??00?0??00?0??0?00?0?0?0??00??0?0?0?00??00??00?0??00?0?0?0??0?0?0?0?0?00?0??0?00?0??00?0??00??00?0??00?0??0?00??00?0?0??00??0?0?0?00??00??00?0??00??0?0?0?0?0?0?0?0?00?0?0?0??00?0?0?0??00??00?0?0?0??00?0?0?0??0?00?0??0?00?0??00?0??0?0?0?00?0??00??00??00?0?0??0?0?0?0?0?00?0?0??00?0?0?`{Cb{{Af{Aj}}}}{{{Af{{C`{Bl}}}}}{{C`{Bl}}}}{{{C`{Cb}}{Af{Cb}}}{{Aj{{Gl{{C`{Al}}An}}AA`}}}}1`{Cj{{Af{AAb}}}}{{}Cl}{{}AAd}01{{}AAf}{{}c{{AAh{AAf}}}}1{{}c{{AAh{Cb}}}}{{}Cb}0{{}AAj}{{}c{{AAh{AAj}}}}1{{}AAl}{{}c{{AAh{AAl}}}}1{{}c{{AAh{AAn}}}}{{}AAn}0676{{}c{{AAh{Bl}}}}{{}Bl}0322889{{}{{Gl{AB`AB`}}}}{{}c{{AAh{{Gl{AB`AB`}}}}}}1{{}n}0{{}c{{AAh{n}}}}{{}Ad}0{{}c{{AAh{Ad}}}}110{{}ABb}0{{}c{{AAh{ABb}}}}{{}c{{AAh{{Gl{ABbABb}}}}}}{{}{{Gl{ABbABb}}}}0323545{{}ABd}{{}c{{AAh{ABd}}}}1{{}c{{AAh{Cl}}}}{{}Cl}0{{}ABf}{{}c{{AAh{ABf}}}}1{{}Cb}{{}c{{AAh{Cb}}}}1{{}AB`}0{{}c{{AAh{AB`}}}}011332667766?>?{{}c{{AAh{ABh}}}}{{}ABh}0{{}Ad}0{{}c{{AAh{Ad}}}}::;101101776{{}Hh}{{}c{{AAh{Hh}}}}1{{}f}0{{}c{{AAh{f}}}}545554{{}ABj}{{}c{{AAh{ABj}}}}1767{{}c{{AAh{Cl}}}}{{}Cl}0998?>?{{}c{{AAh{{Gl{AdAd}}}}}}{{}{{Gl{AdAd}}}}0232{ElABl}{ABn{{Gh{ABn}}}}{ElAC`}{ACb{{Af{{ACf{ACd}}}}}}{{}{{Gh{ABn}}}}{ABd{{Af{ACh}}}}{{DlGj}{{Gh{Bl}}}}{{{Ab{ce}}}{{Aj{nAh}}}Al{{An{c}}}}{{{Ab{ce}}g}{{Aj{nAh}}}Al{{An{c}}}{{A`{Ad}{{l{n}}}}}}{CjHh}`{{}ABb}{c{{C`{Bl}}}{}}0000000000000{ACjAf}{ACl{{C`{Bl}}}}{{ABdACl}{{Af{{C`{Bl}}}}}}{{}{{Af{H`}}}}{DdC`}{{}H`}0000000000000000000000000000000000000000000000000000000000000000000000000{{}d}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000{jc{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{Dl{{C`{{Gl{{C`{Bl}}Gj}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222{{{Ab{ce}}g}{{Aj{{ACn{c}}Bj}}}Al{{An{c}}}{{ADb{{AD`{c}}}}}}{Bb{{Af{Bd}}}}{{CjJf}n}{cn{}}{{Elc}n{}}{ADdn}{{}n}{El{{Af{{Lf{MbF`}}}}}}{El{{Af{{Lf{LjF`}}}}}}{El{{Af{{Lf{LdF`}}}}}}{El{{Af{{Lf{MdF`}}}}}}{El{{Af{{Lf{MhF`}}}}}}{El{{Af{{Lf{M`F`}}}}}}{El{{Af{{Lf{LlF`}}}}}}{El{{Af{{Lf{LnF`}}}}}}{El{{Af{{Lf{LhF`}}}}}}{El{{Af{{Lf{MjF`}}}}}}{El{{Af{{Lf{MfF`}}}}}}{Ejn}{{{C`{Bl}}}{{Af{n}}}}{{}c{}}`{{}{{Gh{Gj}}}}{Cj{{Af{{Gl{HhJf}}}}}}{{}H`}000000{{}ADf}{{ABdACh}Dn}{{}ADh}{{}ADj}{Ad{{Af{ADh}}}}0{{}{{C`{Ad}}}}0{{}{{Aj{ADlAA`}}}}{{}{{Aj{AA`}}}}{{}{{Af{ABn}}}}`0{{}{{Af{{Bn{Bl}}}}}}{Cjn}{{}j}0`{{}d}{Cj{{Af{Hh}}}}{Id{{Af{{Gl{ADnCl}}}}}}{ADn{{Af{Id}}}}{ACjAf}{{ABdACl}{{Af{{C`{Bl}}}}}}{ACl{{C`{Bl}}}}`{{DnDn}{{Af{Fb}}}}``{{}AE`}`{c{{Aj{dFj}}}{}}{{{Ab{ce}}}{{Af{{AEb{c}}}}}Al{{An{c}}}}`{Ad{{AEd{Cl}}}}{Ad{{AEf{Cl}}}}{AdCl}{ABhCl}{{CjHh}{{Af{Jf}}}}{{{Ab{ce}}}dAl{{An{c}}}}{{{Ab{ce}}g}dAl{{An{c}}}AEh}`{jd}``{{}j}0{{}{{Af{ADd}}}}{Ej{{Aj{dAh}}}}{Cj{{Af{AEj}}}}{AEl{{Af{AEn}}}}{{{Dh{ce}}g}AjAF`AF`AFb}{{Dlc}AjAFb}{{{E`{c}}e}AjAF`AFb}{{Gdc}AjAFb}{{Bfc}AjAFb}{{{Ab{ce}}AFd}dAl{{An{c}}}}{{jc}d{{AFf{j}}}}{{}n}{{ABdAFh}n}0`={cj{}}{{{Dh{ce}}}H`IjIj}{DlH`}{DnH`}{{{E`{c}}}H`{}}{GdH`}{ElH`}{BbH`}{GfH`}{EnH`}{Aj{{Af{Cb}}}}{{}AFj}{IdDn}`{IdCl}1{{{Jn{{Ib{Db}}JhCl}}}d}{{{K`{{Ib{Db}}Jh}}}d}{AFl{{Af{d}}}}{{{AFn{{Ib{Db}}ADd}}}d}````````{EjAd}{{}AG`}{{c{Gh{Bl}}}{{C`{Bl}}}{}}0000000000000{ce{}{}}0000000000000``{c{{Aj{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Gf{{Aj{{Nd{F`}}c}}}{}}{Gf{{Aj{{Ml{F`}}c}}}{}}{Gf{{Aj{{Mn{F`}}c}}}{}}{Gf{{Aj{{N`{F`}}c}}}{}}{Gf{{Aj{{Nj{F`}}c}}}{}}{Gf{{Aj{{Nl{F`}}c}}}{}}{Gf{{Aj{{Nb{F`}}c}}}{}}{Gf{{Aj{{Nf{F`}}c}}}{}}{Gf{{Aj{{Nh{F`}}c}}}{}}{En{{Aj{{Od{F`}}c}}}{}}{En{{Aj{{Af{F`}}c}}}{}}{En{{Aj{{On{F`}}c}}}{}}{En{{Aj{{Ab{F`}}c}}}{}}{En{{Aj{{Oj{F`}}c}}}{}}{En{{Aj{Adc}}}{}}{En{{Aj{{Nn{F`}}c}}}{}}{En{{Aj{{Ol{F`}}c}}}{}}{En{{Aj{{A`{F`}}c}}}{}}{En{{Aj{{O`{F`}}c}}}{}}{En{{Aj{Obc}}}{}}{c{{Aj{e}}}{}{}}{En{{Aj{{Of{F`}}c}}}{}}{En{{Aj{{Oh{F`}}c}}}{}}222222222222222222222222222222222222222222222222222222222222222222222222222{{jg}{{Aj{ej}}}{}{}{{Jd{c}{{l{{Aj{ec}}}}}}}}{c{{Bn{Bl}}}{}}000000000000000000000000000{c{{C`{Bl}}}{}}0000000000000{cAGb{}}0000000000000000000000000000000000000000000000000000000000000000000000000{{}AGd}00000000000000{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{cgn}e{}{}{{Jd{{Gh{Bl}}}{{l{e}}}}}}00000000000{AGfAGh}{{AGfc}AGh{}}{{}{{C`{Cd}}}}{{{C`{Al}}An}{{Aj{dAA`}}}}{{AlAn}{{Af{Cd}}}}1{{}AAf}````77777777777777777777777777777777777777777777777777777777777777777777777777{EjABh}{{fEl{Ff{El}}cc}{{Aj{eFj}}}{}{}}{{ABn{Gh{Bl}}}{{Af{{C`{Bl}}}}}}","c":[41],"p":[[5,"Private",2588],[1,"unit"],[8,"AccountId",2589],[8,"Nonce",2589],[5,"RuntimeOrigin",0],[17,"Output"],[1,"bool"],[10,"Fn",2590],[5,"RuntimeApiImpl",0],[1,"u32"],[6,"Option",2591],[6,"ApiError",2592],[6,"Result",2593],[10,"Block",2594],[10,"CallApiAt",2592],[8,"ApplyExtrinsicResult",2595],[6,"OriginCaller",0],[6,"RawOrigin",2596],[5,"RuntimeGenesisConfig",0],[5,"Storage",2597],[5,"String",2598],[1,"u8"],[1,"array"],[5,"Vec",2599],[8,"BlockNumber",2600],[8,"Hash",2589],[5,"BlockMessagesWithStorageKey",2601],[8,"Result",2602],[5,"DomainId",2603],[8,"Balance",2589],[5,"BundleProducerElectionParams",2604],[6,"ChainConstants",2605],[8,"Block",0],[5,"InherentData",2606],[5,"CheckInherentsResult",2606],[5,"RewardPoint",0],[10,"Clone",2607],[5,"SessionKeys",0],[6,"HoldIdentifier",0],[6,"EnableRewardsAt",0],[6,"RuntimeSlashReason",0],[6,"RuntimeLockId",0],[6,"RuntimeHoldReason",0],[6,"RuntimeFreezeReason",0],[6,"RuntimeTask",0],[6,"RuntimeCall",0],[6,"RuntimeEvent",0],[5,"Runtime",0],[6,"Ordering",2608],[5,"ApiRef",2592],[8,"DispatchInfoOf",2594],[8,"PostDispatchInfoOf",2594],[6,"TransactionValidityError",2609],[5,"CrateVersion",2610],[5,"Error",2611],[10,"Input",2612],[10,"Decode",2612],[6,"AllowAuthoringBy",0],[6,"RuntimeError",0],[1,"slice"],[5,"KeyTypeId",2613],[1,"tuple"],[10,"Default",2614],[1,"usize"],[10,"Deserializer",2615],[10,"Deserialize",2615],[8,"DispatchResultWithPostInfo",2596],[8,"BlockNumber",2616],[5,"DomainBlockLimit",2603],[5,"DomainBundleLimit",2603],[5,"DomainAllowlistUpdates",2603],[5,"DomainInstanceData",2603],[8,"NumberFor",2594],[8,"OperatorId",2603],[5,"BTreeMap",2617],[5,"U256",2600],[10,"Encode",2612],[10,"Output",2612],[10,"Sized",2618],[10,"PartialEq",2608],[6,"TransactionOutcome",2595],[10,"FnOnce",2590],[8,"Hash",2616],[8,"Header",2619],[8,"ExecutionReceiptFor",2603],[5,"BlockObjectMapping",2620],[8,"OpaqueBundle",2603],[6,"FraudProof",2621],[5,"StorageProof",2622],[6,"SegmentHeader",2600],[8,"OpaqueBundles",2603],[5,"Randomness",2600],[5,"Formatter",2623],[5,"Error",2623],[10,"Debug",2623],[8,"Result",2623],[8,"Origin",2624],[8,"Vesting",0],[8,"CallableCallFor",2596],[8,"Timestamp",0],[8,"Messenger",0],[8,"Transporter",0],[8,"Subspace",0],[8,"Balances",0],[8,"Rewards",0],[8,"Utility",0],[8,"Domains",0],[8,"Sudo",0],[8,"System",0],[6,"Error",2625],[6,"Error",2626],[6,"Error",2627],[6,"Error",2628],[6,"Error",2629],[6,"Error",2630],[6,"Error",2631],[6,"Error",2624],[6,"Error",2632],[6,"Event",2627],[6,"Event",2633],[6,"Event",2632],[6,"Event",2626],[6,"Event",2634],[6,"Event",2630],[6,"Event",2628],[6,"Event",2629],[6,"Event",2631],[6,"Event",2635],[6,"Event",2625],[6,"Event",2636],[6,"Event",2624],[6,"DispatchError",2595],[5,"Slot",2637],[5,"EncodableOpaqueLeaf",2638],[5,"Proof",2638],[6,"Error",2638],[5,"H256",2639],[1,"u128"],[5,"RuntimeVersion",2640],[10,"From",2641],[5,"BlockWeights",2642],[5,"BlockLength",2642],[8,"SlotNumber",2600],[1,"u64"],[5,"HistorySize",2643],[6,"ChainId",2603],[8,"EndpointId",2644],[5,"Weight",2645],[5,"PalletId",2646],[5,"CallMetadata",2610],[1,"str"],[5,"DispatchInfo",2596],[6,"Endpoint",2644],[10,"EndpointHandler",2644],[5,"Box",2647],[8,"ChannelId",2603],[5,"CrossDomainMessage",2601],[8,"MessageKey",2601],[8,"StorageChanges",2592],[8,"HashingFor",2594],[10,"Backend",2648],[8,"FarmerPublicKey",2605],[1,"u16"],[5,"OpaqueMetadata",2649],[5,"RuntimeMetadataPrefixed",2650],[8,"LeafIndex",2638],[8,"OperatorPublicKey",2603],[6,"PotParameters",2605],[8,"ProofRecorder",2592],[5,"FeeDetails",2651],[5,"RuntimeDispatchInfo",2651],[10,"Extension",2652],[8,"RuntimeId",2603],[5,"SegmentIndex",2643],[5,"SegmentCommitment",2643],[10,"Serialize",2653],[10,"Serializer",2653],[6,"CallContext",2654],[10,"Into",2641],[8,"MessageId",2601],[5,"SolutionRanges",2605],[8,"EquivocationProof",2605],[5,"SignedVote",2605],[8,"Moment",2589],[5,"TypeId",2655],[5,"Type",2656],[6,"TransactionSource",2609],[8,"TransactionValidity",2609],[8,"Address",0],[8,"SystemConfig",0],[8,"TransactionPaymentConfig",0],[8,"SubspaceConfig",0],[8,"BalancesConfig",0],[8,"GenesisConfig",0],[5,"BlockHashProvider",0],[5,"CreditSupply",0],[5,"TotalSpacePledged",0],[5,"BlockchainHistorySize",0],[5,"TransactionByteFee",0],[5,"LiquidityInfo",0],[5,"OnChargeTransaction",0],[5,"MmrProofVerifier",0],[5,"StorageKeys",0],[5,"BlockSlot",0],[5,"Version",0],[5,"BlockHashCount",0],[5,"SubspaceBlockWeights",0],[5,"SubspaceBlockLength",0],[5,"BlockAuthoringDelay",0],[5,"PotEntropyInjectionInterval",0],[5,"PotEntropyInjectionLookbackDepth",0],[5,"PotEntropyInjectionDelay",0],[5,"EraDuration",0],[5,"SlotProbability",0],[5,"ShouldAdjustSolutionRange",0],[5,"ExpectedVotesPerBlock",0],[5,"ConfirmationDepthK",0],[5,"RecentSegments",0],[5,"RecentHistoryFraction",0],[5,"MinSectorLifetime",0],[5,"BlockSlotCount",0],[5,"SelfChainId",0],[5,"ChannelReserveFee",0],[5,"TransporterEndpointId",0],[5,"MaximumReceiptDrift",0],[5,"InitialDomainTxRange",0],[5,"DomainTxRangeAdjustmentInterval",0],[5,"DomainRuntimeUpgradeDelay",0],[5,"MinOperatorStake",0],[5,"MinNominatorStake",0],[5,"MaxDomainBlockSize",0],[5,"MaxDomainBlockWeight",0],[5,"MaxBundlesPerBlock",0],[5,"DomainInstantiationDeposit",0],[5,"MaxDomainNameLength",0],[5,"BlockTreePruningDepth",0],[5,"StakeWithdrawalLockingPeriod",0],[5,"StakeEpochDuration",0],[5,"TreasuryAccount",0],[5,"MaxPendingStakingOperation",0],[5,"MaxNominators",0],[5,"DomainsPalletId",0],[5,"MaxInitialDomainAccounts",0],[5,"MinInitialDomainAccountBalance",0],[5,"BundleLongevity",0],[5,"AvgBlockspaceUsageNumBlocks",0],[5,"ProposerTaxOnVotes",0],[5,"MinVestedTransfer",0],[5,"PalletInfo",0],[5,"RuntimeApi",0],[8,"Header",0],[8,"UncheckedExtrinsic",0],[8,"DomainsConfig",0],[8,"SudoConfig",0],[8,"RewardsConfig",0],[8,"VestingConfig",0]],"b":[[914,"impl-From%3CRawOrigin%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[916,"impl-From%3COption%3C%3CRuntime+as+Config%3E::AccountId%3E%3E-for-RuntimeOrigin"],[917,"impl-From%3COriginCaller%3E-for-RuntimeOrigin"],[927,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[928,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[929,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[931,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[932,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[933,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[934,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[935,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[936,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[937,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[938,"impl-From%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[941,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[942,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[943,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[944,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[945,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[946,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[947,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[948,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[949,"impl-From%3CError%3CRuntime%3E%3E-for-RuntimeError"],[951,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[952,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[953,"impl-From%3CEvent%3E-for-RuntimeEvent"],[954,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[955,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[956,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[957,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[958,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[959,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[960,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[961,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[962,"impl-From%3CEvent%3E-for-RuntimeEvent"],[964,"impl-From%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[1274,"impl-Version"],[1275,"impl-Get%3C_I%3E-for-Version"],[1276,"impl-TypedGet-for-Version"],[1277,"impl-Get%3C_I%3E-for-BlockHashCount"],[1278,"impl-TypedGet-for-BlockHashCount"],[1279,"impl-BlockHashCount"],[1280,"impl-SubspaceBlockWeights"],[1281,"impl-Get%3C_I%3E-for-SubspaceBlockWeights"],[1282,"impl-TypedGet-for-SubspaceBlockWeights"],[1283,"impl-TypedGet-for-SubspaceBlockLength"],[1284,"impl-Get%3C_I%3E-for-SubspaceBlockLength"],[1285,"impl-SubspaceBlockLength"],[1286,"impl-Get%3C_I%3E-for-BlockAuthoringDelay"],[1287,"impl-TypedGet-for-BlockAuthoringDelay"],[1288,"impl-BlockAuthoringDelay"],[1289,"impl-TypedGet-for-PotEntropyInjectionInterval"],[1290,"impl-Get%3C_I%3E-for-PotEntropyInjectionInterval"],[1291,"impl-PotEntropyInjectionInterval"],[1292,"impl-Get%3C_I%3E-for-PotEntropyInjectionLookbackDepth"],[1293,"impl-PotEntropyInjectionLookbackDepth"],[1294,"impl-TypedGet-for-PotEntropyInjectionLookbackDepth"],[1295,"impl-Get%3C_I%3E-for-PotEntropyInjectionDelay"],[1296,"impl-TypedGet-for-PotEntropyInjectionDelay"],[1297,"impl-PotEntropyInjectionDelay"],[1298,"impl-TypedGet-for-EraDuration"],[1299,"impl-EraDuration"],[1300,"impl-Get%3C_I%3E-for-EraDuration"],[1301,"impl-TypedGet-for-SlotProbability"],[1302,"impl-Get%3C_I%3E-for-SlotProbability"],[1303,"impl-SlotProbability"],[1304,"impl-TypedGet-for-ShouldAdjustSolutionRange"],[1305,"impl-ShouldAdjustSolutionRange"],[1306,"impl-Get%3C_I%3E-for-ShouldAdjustSolutionRange"],[1307,"impl-TypedGet-for-ExpectedVotesPerBlock"],[1308,"impl-ExpectedVotesPerBlock"],[1309,"impl-Get%3C_I%3E-for-ExpectedVotesPerBlock"],[1310,"impl-ConfirmationDepthK"],[1311,"impl-TypedGet-for-ConfirmationDepthK"],[1312,"impl-Get%3C_I%3E-for-ConfirmationDepthK"],[1313,"impl-TypedGet-for-RecentSegments"],[1314,"impl-RecentSegments"],[1315,"impl-Get%3C_I%3E-for-RecentSegments"],[1316,"impl-Get%3C_I%3E-for-RecentHistoryFraction"],[1317,"impl-RecentHistoryFraction"],[1318,"impl-TypedGet-for-RecentHistoryFraction"],[1319,"impl-TypedGet-for-MinSectorLifetime"],[1320,"impl-Get%3C_I%3E-for-MinSectorLifetime"],[1321,"impl-MinSectorLifetime"],[1322,"impl-BlockSlotCount"],[1323,"impl-Get%3C_I%3E-for-BlockSlotCount"],[1324,"impl-TypedGet-for-BlockSlotCount"],[1325,"impl-TypedGet-for-SelfChainId"],[1326,"impl-Get%3C_I%3E-for-SelfChainId"],[1327,"impl-SelfChainId"],[1328,"impl-Get%3C_I%3E-for-ChannelReserveFee"],[1329,"impl-ChannelReserveFee"],[1330,"impl-TypedGet-for-ChannelReserveFee"],[1331,"impl-TransporterEndpointId"],[1332,"impl-Get%3C_I%3E-for-TransporterEndpointId"],[1333,"impl-TypedGet-for-TransporterEndpointId"],[1334,"impl-MaximumReceiptDrift"],[1335,"impl-Get%3C_I%3E-for-MaximumReceiptDrift"],[1336,"impl-TypedGet-for-MaximumReceiptDrift"],[1337,"impl-InitialDomainTxRange"],[1338,"impl-TypedGet-for-InitialDomainTxRange"],[1339,"impl-Get%3C_I%3E-for-InitialDomainTxRange"],[1340,"impl-Get%3C_I%3E-for-DomainTxRangeAdjustmentInterval"],[1341,"impl-TypedGet-for-DomainTxRangeAdjustmentInterval"],[1342,"impl-DomainTxRangeAdjustmentInterval"],[1343,"impl-DomainRuntimeUpgradeDelay"],[1344,"impl-TypedGet-for-DomainRuntimeUpgradeDelay"],[1345,"impl-Get%3C_I%3E-for-DomainRuntimeUpgradeDelay"],[1346,"impl-TypedGet-for-MinOperatorStake"],[1347,"impl-MinOperatorStake"],[1348,"impl-Get%3C_I%3E-for-MinOperatorStake"],[1349,"impl-Get%3C_I%3E-for-MinNominatorStake"],[1350,"impl-MinNominatorStake"],[1351,"impl-TypedGet-for-MinNominatorStake"],[1352,"impl-MaxDomainBlockSize"],[1353,"impl-Get%3C_I%3E-for-MaxDomainBlockSize"],[1354,"impl-TypedGet-for-MaxDomainBlockSize"],[1355,"impl-Get%3C_I%3E-for-MaxDomainBlockWeight"],[1356,"impl-TypedGet-for-MaxDomainBlockWeight"],[1357,"impl-MaxDomainBlockWeight"],[1358,"impl-MaxBundlesPerBlock"],[1359,"impl-TypedGet-for-MaxBundlesPerBlock"],[1360,"impl-Get%3C_I%3E-for-MaxBundlesPerBlock"],[1361,"impl-TypedGet-for-DomainInstantiationDeposit"],[1362,"impl-DomainInstantiationDeposit"],[1363,"impl-Get%3C_I%3E-for-DomainInstantiationDeposit"],[1364,"impl-TypedGet-for-MaxDomainNameLength"],[1365,"impl-Get%3C_I%3E-for-MaxDomainNameLength"],[1366,"impl-MaxDomainNameLength"],[1367,"impl-BlockTreePruningDepth"],[1368,"impl-Get%3C_I%3E-for-BlockTreePruningDepth"],[1369,"impl-TypedGet-for-BlockTreePruningDepth"],[1370,"impl-StakeWithdrawalLockingPeriod"],[1371,"impl-TypedGet-for-StakeWithdrawalLockingPeriod"],[1372,"impl-Get%3C_I%3E-for-StakeWithdrawalLockingPeriod"],[1373,"impl-StakeEpochDuration"],[1374,"impl-Get%3C_I%3E-for-StakeEpochDuration"],[1375,"impl-TypedGet-for-StakeEpochDuration"],[1376,"impl-TypedGet-for-TreasuryAccount"],[1377,"impl-TreasuryAccount"],[1378,"impl-Get%3C_I%3E-for-TreasuryAccount"],[1379,"impl-TypedGet-for-MaxPendingStakingOperation"],[1380,"impl-Get%3C_I%3E-for-MaxPendingStakingOperation"],[1381,"impl-MaxPendingStakingOperation"],[1382,"impl-TypedGet-for-MaxNominators"],[1383,"impl-MaxNominators"],[1384,"impl-Get%3C_I%3E-for-MaxNominators"],[1385,"impl-DomainsPalletId"],[1386,"impl-Get%3C_I%3E-for-DomainsPalletId"],[1387,"impl-TypedGet-for-DomainsPalletId"],[1388,"impl-TypedGet-for-MaxInitialDomainAccounts"],[1389,"impl-Get%3C_I%3E-for-MaxInitialDomainAccounts"],[1390,"impl-MaxInitialDomainAccounts"],[1391,"impl-Get%3C_I%3E-for-MinInitialDomainAccountBalance"],[1392,"impl-MinInitialDomainAccountBalance"],[1393,"impl-TypedGet-for-MinInitialDomainAccountBalance"],[1394,"impl-BundleLongevity"],[1395,"impl-TypedGet-for-BundleLongevity"],[1396,"impl-Get%3C_I%3E-for-BundleLongevity"],[1397,"impl-TypedGet-for-AvgBlockspaceUsageNumBlocks"],[1398,"impl-Get%3C_I%3E-for-AvgBlockspaceUsageNumBlocks"],[1399,"impl-AvgBlockspaceUsageNumBlocks"],[1400,"impl-Get%3C_I%3E-for-ProposerTaxOnVotes"],[1401,"impl-ProposerTaxOnVotes"],[1402,"impl-TypedGet-for-ProposerTaxOnVotes"],[1403,"impl-MinVestedTransfer"],[1404,"impl-Get%3C_I%3E-for-MinVestedTransfer"],[1405,"impl-TypedGet-for-MinVestedTransfer"],[1817,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1818,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1819,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1820,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1821,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1822,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1823,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1824,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1825,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1826,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1827,"impl-IsSubType%3C%3CPallet%3CRuntime%3E+as+Callable%3CRuntime%3E%3E::RuntimeCall%3E-for-RuntimeCall"],[1843,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3CMultiAddress%3C%3C%3CMultiSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+()%3E,+RuntimeCall,+MultiSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1844,"impl-Runtime"],[1845,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3CMultiAddress%3C%3C%3CMultiSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+()%3E,+RuntimeCall,+MultiSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1846,"impl-Runtime"],[1847,"impl-MetadataV2%3CBlock%3CHeader%3Cu32,+BlakeTwo256%3E,+UncheckedExtrinsic%3CMultiAddress%3C%3C%3CMultiSignature+as+Verify%3E::Signer+as+IdentifyAccount%3E::AccountId,+()%3E,+RuntimeCall,+MultiSignature,+(CheckNonZeroSender%3CRuntime%3E,+CheckSpecVersion%3CRuntime%3E,+CheckTxVersion%3CRuntime%3E,+CheckGenesis%3CRuntime%3E,+CheckMortality%3CRuntime%3E,+CheckNonce%3CRuntime%3E,+CheckWeight%3CRuntime%3E,+ChargeTransactionPayment%3CRuntime%3E)%3E%3E%3E-for-Runtime"],[1848,"impl-Runtime"],[1856,"impl-OriginTrait-for-RuntimeOrigin"],[1857,"impl-RuntimeOrigin"],[1886,"impl-RuntimeOrigin"],[1887,"impl-OriginTrait-for-RuntimeOrigin"],[1903,"impl-RuntimeOrigin"],[1904,"impl-OriginTrait-for-RuntimeOrigin"],[2110,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2111,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2112,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2113,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2114,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2115,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2116,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2117,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2118,"impl-TryInto%3CError%3CRuntime%3E%3E-for-RuntimeError"],[2119,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2120,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2121,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2122,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2123,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2124,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[2125,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2126,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2127,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2128,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2129,"impl-TryInto%3CEvent%3E-for-RuntimeEvent"],[2131,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"],[2132,"impl-TryInto%3CEvent%3CRuntime%3E%3E-for-RuntimeEvent"]]}],\
["subspace_test_service",{"doc":"Subspace test service only.","t":"FNONNNNONNNNNNNNONNNNNNNNNNNNNNOOONNNHNQNNNNQQNNNNONNONNNNOOONNNNNNNNNON","n":["MockConsensusNode","account_nonce","backend","block_importing_notification_stream","borrow","borrow_mut","clear_tx_pool","client","confirm_acknowledgement","confirm_block_import_processed","construct_and_send_extrinsic_with","construct_extrinsic","deref","deref_mut","does_receipt_exist","drop","executor","free_balance","from","from_mut","from_mut","from_ref","from_ref","get_bundle_from_tx_pool","init","into","into_any","into_any_rc","into_key","into_mut","into_ref","key","network_service","network_starter","new_acknowledgement_sender_stream","new_slot_notification_stream","next_slot","node_config","notify_new_slot_and_wait_for_bundle","produce_block_with","produce_block_with_extrinsics","produce_block_with_slot","produce_block_with_slot_at","produce_blocks","produce_blocks","produce_blocks_until","produce_blocks_with_bundles","produce_slot","produce_slot_and_wait_for_bundle_submission","prune_tx_from_pool","rpc_handlers","run","run_with_finalization_depth","select_chain","set_next_slot","start_cross_domain_gossip_message_worker","start_network","submit_transaction","sync_service","task_manager","transaction_pool","try_from","try_into","try_into_key","type_id","type_name","unchecked_into","unique_saturated_into","vzip","wait_for_fraud_proof","xdm_gossip_notification_service","xdm_gossip_worker_builder"],"q":[[0,"subspace_test_service"],[72,"subspace_runtime_primitives::opaque"],[73,"sp_runtime::traits"],[74,"futures_channel::mpsc"],[75,"sc_utils::mpsc"],[76,"core::error"],[77,"alloc::boxed"],[78,"core::result"],[79,"substrate_test_client"],[80,"substrate_test_client"],[81,"subspace_test_runtime"],[82,"subspace_runtime_primitives"],[83,"subspace_runtime_primitives"],[84,"subspace_core_primitives"],[85,"subspace_runtime_primitives"],[86,"sp_domains"],[87,"core::option"],[88,"core::any"],[89,"alloc::rc"],[90,"futures_channel::mpsc"],[91,"sp_keyring::sr25519"],[92,"sc_network::config"],[93,"alloc::vec"],[94,"sc_service::config"],[95,"sc_service::config"],[96,"primitive_types"],[97,"sc_transaction_pool::error"],[98,"core::any"],[99,"core::pin"],[100,"sp_domains_fraud_proof::fraud_proof"],[101,"core::ops::function"],[102,"core::marker"],[103,"cross_domain_message_gossip::gossip_worker"]],"d":["A mock Subspace consensus node instance used for testing.","Get the nonce of the node account","Backend.","Subscribe the block importing notification","","","Remove all tx from the tx pool","Client’s instance.","Wait for all the acknowledgements before return","Wait for the operator finish processing the consensus …","Construct and send extrinsic through rpc","Construct an extrinsic.","","","Return if the given ER exist in the consensus state","","Code executor.","Get the free balance of the given account","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get the bundle that created at <code>slot</code> from the transaction …","","Calls <code>U::from(self)</code>.","","","","","","Ferdie key","Network service.","Network starter","Subscribe the acknowledgement sender stream","Subscribe the new slot notification","Return the next slot number","Create a Subspace <code>Configuration</code>.","Notify the executor about the new slot and wait for the …","Producing one block for both the primary node and the …","Produce a new block on top of the current best block, with …","Produce a new block on top of the current best block, with …","Produce a new block with the slot on top of <code>parent_hash</code>, …","Produce <code>n</code> number of blocks.","Produce the given number of blocks for both the primary …","Keep producing block with a fixed interval until the given …","Produce <code>n</code> number of blocks and wait for bundle submitted …","Produce a slot only, without waiting for the potential …","Produce a new slot and wait for a bundle produced at this …","Remove a ready transaction from transaction pool.","RPC handlers.","Run a mock consensus node","Run a mock consensus node with finalization depth","The SelectChain Strategy","Set the next slot number","Start the cross domain gossip message worker.","Start the mock consensus node network","Submit a tx to the tx pool","Sync service.","<code>TaskManager</code>’s instance.","Transaction pool.","","","","","","","","","Return a future that only resolve if a fraud proof that …","Cross-domain gossip notification service.","Get the cross domain gossip message worker builder"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{bd}`{b{{A`{{n{{h{f}}{l{j}}}}}}}}{ce{}{}}0{b{{Af{j{Ad{Ab}}}}}}`{bj}0{{bc}{{Af{AhAj}}}Al}{{bdc}AnAl}{B`c{}}0{b{{Af{Bb{Ad{Ab}}}}}}{B`j}`{{bBd}Bf}{cc{}}9009{{b{n{BhBj}}}{{Cb{{C`{{h{f}}BlBnBf}}}}}}{{}B`};{{{Ad{c}}}{{Ad{Cd}}}{}}{{{Cf{c}}}{{Cf{Cd}}}{}}===```{b{{A`{{l{j}}}}}}{b{{Ch{{n{BhBj}}}}}}{bCj}{{ClCn{Db{D`}}BbBbBbDd}Df}7`{{bDb}{{Af{j{Ad{Ab}}}}}}{{b{n{BhBj}}}{{Af{j{Ad{Ab}}}}}}{{b{n{BhBj}}{Cb{Db}}}{{Af{{Ad{Ab}}}}}}{{bCj}{{Af{j{Ad{Ab}}}}}}``0{b{{n{BhBj}}}}{b{{n{{n{BhBj}}{C`{{h{f}}BlBnBf}}}}}}{{bDh}{{Af{j{Ad{Ab}}}}}}`{{ClCnDd}b}{{ClCnDd{Cb{{h{f}}}}}b}`{{bCj}j}{bj}0{{bDh}{{Af{DjDl}}}}```{c{{Af{e}}}{}{}}00{cDn{}}{cE`{}}{ce{}{}}00{{bc}{{Ed{{Ad{Eb}}}}}{{Ej{{Ef{{h{f}}}}}{{Eh{Bb}}}}El}}`{bEn}","c":[],"p":[[5,"MockConsensusNode",0],[1,"u32"],[8,"Block",72],[8,"NumberFor",73],[1,"unit"],[5,"Sender",74],[1,"tuple"],[5,"TracingUnboundedReceiver",75],[10,"Error",76],[5,"Box",77],[6,"Result",78],[5,"RpcTransactionOutput",79],[5,"RpcTransactionError",79],[10,"Into",80],[8,"UncheckedExtrinsic",81],[1,"usize"],[1,"bool"],[8,"AccountId",82],[8,"Balance",82],[5,"Slot",83],[5,"PotOutput",84],[8,"Hash",82],[8,"Header",85],[8,"OpaqueBundle",86],[6,"Option",87],[10,"Any",88],[5,"Rc",89],[5,"UnboundedReceiver",74],[1,"u64"],[5,"Handle",90],[6,"Keyring",91],[5,"MultiaddrWithPeerId",92],[5,"Vec",93],[5,"BasePath",94],[5,"Configuration",94],[5,"OpaqueExtrinsic",95],[5,"H256",96],[6,"Error",97],[5,"TypeId",88],[1,"str"],[10,"Future",98],[5,"Pin",99],[6,"FraudProof",100],[17,"Output"],[10,"Fn",101],[10,"Send",102],[5,"GossipWorkerBuilder",103]],"b":[]}],\
["subspace_verification",{"doc":"Verification primitives for Subspace.","t":"GPPPPPPPFPFNNNNNNHHNNNNONNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNHNNOOOOOOOONNONNNNNNNNNNNNNNNNNHNNNOOOOOO","n":["Error","InvalidAuditChunkOffset","InvalidChunkWitness","InvalidHistorySize","InvalidPiece","InvalidPieceOffset","InvalidProofOfSpace","OutsideSolutionRange","PieceCheckParams","SectorExpired","VerifySolutionParams","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_block_weight","check_reward_signature","clone","clone","clone_into","clone_into","current_history_size","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","derive_next_solution_range","derive_pot_entropy","drop","drop","drop","encode_to","encode_to","eq","fmt","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","is_within_solution_range","max_encoded_len","max_encoded_len","max_pieces_in_sector","min_sector_lifetime","piece_check_params","proof_of_time","recent_history_fraction","recent_segments","sector_expiration_check_segment_commitment","segment_commitment","size_hint","size_hint","solution_range","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify_solution","vzip","vzip","vzip","current_history_size","expiration_history_size","half_solution_range","max_pieces_in_sector","piece_offset","solution_distance"],"q":[[0,"subspace_verification"],[94,"subspace_verification::Error"],[100,"subspace_core_primitives"],[101,"subspace_core_primitives"],[102,"schnorrkel::errors"],[103,"core::result"],[104,"parity_scale_codec::error"],[105,"parity_scale_codec::codec"],[106,"subspace_core_primitives"],[107,"subspace_core_primitives"],[108,"core::fmt"],[109,"core::fmt"],[110,"alloc::vec"],[111,"alloc::string"],[112,"core::any"],[113,"subspace_core_primitives"]],"d":["Errors encountered by the Subspace consensus primitives.","Invalid audit chunk offset","Invalid chunk witness","Invalid history size","Piece verification failed","Invalid piece offset","Invalid proof of space","Solution is outside of challenge range","Parameters for checking piece validity","Sector expired","Parameters for solution verification","","","","","","","Calculate weight derived from provided solution range","Check the reward signature validity.","","","","","Current size of the history","","","","","","","","","","","","","","","Derives next solution range based on the total era slots …","Derive proof of time entropy from chunk and proof of time …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>Some(solution_distance)</code> if solution distance is …","","","How many pieces one sector is supposed to contain (max)","Minimum lifetime of a plotted sector, measured in archived …","Parameters for checking piece validity.","Proof of time for which solution is built","Fraction of pieces from the “recent history” (…","Number of latest archived segments that are considered “…","Segment commitment at <code>min_sector_lifetime</code> from sector …","Segment commitment of segment to which piece belongs","","","Solution range","","","","","","","","","","","","","","","","","","Verify whether solution is valid, returns solution …","","","","Current history size","Expiration history size","Half of solution range","How many pieces one sector is supposed to contain (max)","Index of the piece that failed verification","Solution distance"],"i":[0,26,26,26,26,26,26,26,0,26,0,26,11,12,26,11,12,0,0,11,12,11,12,11,11,12,11,12,11,12,11,12,26,11,12,26,11,12,0,0,26,11,12,11,12,26,26,26,11,12,26,11,12,26,11,12,26,11,12,0,11,12,11,11,12,12,11,11,11,11,11,12,12,11,12,11,12,26,26,11,12,26,11,12,26,11,12,26,11,12,0,26,11,12,38,38,39,40,40,39],"f":"```````````{ce{}{}}00000{bd}{{{h{f}}jln}{{Ad{A`Ab}}}}{AfAf}{AhAh}{{ce}A`{}{}}0`{c{{Ad{AfAj}}}Al}{c{{Ad{AhAj}}}Al}{{{h{f}}}{{Ad{cAj}}}{}}0{{An{h{f}}}{{Ad{cAj}}}{}}0{{Anc}{{Ad{eAj}}}Al{}}0{B`c{}}00000{{BbBb{Bf{BdBd}}bBh}Bd}{{BjBl}Bn}{B`A`}00{{Afc}A`{C`Cb}}{{Ahc}A`{C`Cb}}{{CdCd}Cf}{{CdCh}Cj}0{{AfCh}Cj}{{AhCh}Cj}{cc{}}00{{}B`}00{ce{}{}}00{{Bn{Cl{f}}Cnb}{{D`{b}}}}22````````{AfB`}{AhB`}`{{c{h{f}}}{{Db{f}}}{}}044{cDd{}}{c{{Ad{e}}}{}{}}00000{cDf{}}00777{{{Dh{ce}}BbAhDj}{{Ad{bCd}}}{}{}}888``````","c":[],"p":[[8,"SolutionRange",100],[8,"BlockWeight",100],[1,"u8"],[1,"slice"],[5,"RewardSignature",100],[5,"PublicKey",100],[5,"SigningContext",101],[1,"unit"],[6,"SignatureError",102],[6,"Result",103],[5,"PieceCheckParams",0],[5,"VerifySolutionParams",0],[5,"Error",104],[10,"Input",105],[1,"u32"],[1,"usize"],[8,"SlotNumber",100],[1,"u64"],[1,"tuple"],[8,"BlockNumber",100],[5,"Scalar",106],[5,"PotOutput",100],[8,"Blake3Hash",100],[10,"Output",105],[10,"Sized",107],[6,"Error",0],[1,"bool"],[5,"Formatter",108],[8,"Result",108],[1,"array"],[5,"SectorSlotChallenge",100],[6,"Option",109],[5,"Vec",110],[5,"String",111],[5,"TypeId",112],[5,"Solution",100],[5,"Kzg",113],[15,"SectorExpired",94],[15,"OutsideSolutionRange",94],[15,"InvalidPieceOffset",94]],"b":[[46,"impl-Display-for-Error"],[47,"impl-Debug-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
