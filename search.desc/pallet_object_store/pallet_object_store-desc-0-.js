searchState.loadedDescShard("pallet_object_store", 0, "Pallet object store, used for simple object storage on the …\nContains a variant per dispatchable extrinsic that this …\nMapping to the object offset and size within an extrinsic\nConfiguration trait of this pallet.\n<code>pallet-object-store</code> events\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nNew object was added.\nPallet object-store, used for storing arbitrary …\n<code>pallet-object-store</code> events\nAuto-generated docs-only module listing all defined …\nExtract object location if an extrinsic corresponds to <code>put</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nObject hash\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>put</code>.\nOffset of object in the encoded call.\nPut a new object into a feed\nPut a new object into a feed\nAuto-generated docs-only module listing all (public and …\nPut a new object into a feed")